#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.296
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GuiaDataAccessComponent
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Guia")]
	public partial class GuiaDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertClients(Clients instance);
    partial void UpdateClients(Clients instance);
    partial void DeleteClients(Clients instance);
    partial void InsertCountries(Countries instance);
    partial void UpdateCountries(Countries instance);
    partial void DeleteCountries(Countries instance);
    partial void InsertStates(States instance);
    partial void UpdateStates(States instance);
    partial void DeleteStates(States instance);
    partial void InsertClientPhones(ClientPhones instance);
    partial void UpdateClientPhones(ClientPhones instance);
    partial void DeleteClientPhones(ClientPhones instance);
    partial void InsertPhoneTypes(PhoneTypes instance);
    partial void UpdatePhoneTypes(PhoneTypes instance);
    partial void DeletePhoneTypes(PhoneTypes instance);
    partial void InsertClientProducts(ClientProducts instance);
    partial void UpdateClientProducts(ClientProducts instance);
    partial void DeleteClientProducts(ClientProducts instance);
    partial void InsertProducts(Products instance);
    partial void UpdateProducts(Products instance);
    partial void DeleteProducts(Products instance);
    partial void InsertSubProducts(SubProducts instance);
    partial void UpdateSubProducts(SubProducts instance);
    partial void DeleteSubProducts(SubProducts instance);
    partial void InsertEditions(Editions instance);
    partial void UpdateEditions(Editions instance);
    partial void DeleteEditions(Editions instance);
    partial void InsertClientTypes(ClientTypes instance);
    partial void UpdateClientTypes(ClientTypes instance);
    partial void DeleteClientTypes(ClientTypes instance);
    partial void InsertSpecialities(Specialities instance);
    partial void UpdateSpecialities(Specialities instance);
    partial void DeleteSpecialities(Specialities instance);
    partial void InsertClientSpecialities(ClientSpecialities instance);
    partial void UpdateClientSpecialities(ClientSpecialities instance);
    partial void DeleteClientSpecialities(ClientSpecialities instance);
    #endregion
		
		public GuiaDataClassesDataContext() : 
				base(global::GuiaDataAccessComponent.Properties.Settings.Default.GuiaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public GuiaDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GuiaDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GuiaDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GuiaDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Clients> Clients
		{
			get
			{
				return this.GetTable<Clients>();
			}
		}
		
		public System.Data.Linq.Table<Countries> Countries
		{
			get
			{
				return this.GetTable<Countries>();
			}
		}
		
		public System.Data.Linq.Table<States> States
		{
			get
			{
				return this.GetTable<States>();
			}
		}
		
		public System.Data.Linq.Table<ClientPhones> ClientPhones
		{
			get
			{
				return this.GetTable<ClientPhones>();
			}
		}
		
		public System.Data.Linq.Table<PhoneTypes> PhoneTypes
		{
			get
			{
				return this.GetTable<PhoneTypes>();
			}
		}
		
		public System.Data.Linq.Table<ClientProducts> ClientProducts
		{
			get
			{
				return this.GetTable<ClientProducts>();
			}
		}
		
		public System.Data.Linq.Table<Products> Products
		{
			get
			{
				return this.GetTable<Products>();
			}
		}
		
		public System.Data.Linq.Table<SubProducts> SubProducts
		{
			get
			{
				return this.GetTable<SubProducts>();
			}
		}
		
		public System.Data.Linq.Table<PhonesByClient> PhonesByClient
		{
			get
			{
				return this.GetTable<PhonesByClient>();
			}
		}
		
		public System.Data.Linq.Table<Editions> Editions
		{
			get
			{
				return this.GetTable<Editions>();
			}
		}
		
		public System.Data.Linq.Table<ClientTypes> ClientTypes
		{
			get
			{
				return this.GetTable<ClientTypes>();
			}
		}
		
		public System.Data.Linq.Table<Specialities> Specialities
		{
			get
			{
				return this.GetTable<Specialities>();
			}
		}
		
		public System.Data.Linq.Table<ClientSpecialities> ClientSpecialities
		{
			get
			{
				return this.GetTable<ClientSpecialities>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetSpecialities")]
		public ISingleResult<roc_spGetSpecialitiesResult> roc_spGetSpecialities()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<roc_spGetSpecialitiesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetStatesByCountry")]
		public ISingleResult<roc_spGetStatesByCountryResult> roc_spGetStatesByCountry([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="TinyInt")] System.Nullable<byte> countryId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), countryId);
			return ((ISingleResult<roc_spGetStatesByCountryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetProducts")]
		public ISingleResult<roc_spGetProductsResult> roc_spGetProducts([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> editionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> numberPage, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> page)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), editionId, numberPage, page);
			return ((ISingleResult<roc_spGetProductsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetProductsByLetter")]
		public ISingleResult<roc_spGetProductsByLetterResult> roc_spGetProductsByLetter([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> editionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> numberPage, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> page, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(1)")] string letter)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), editionId, numberPage, page, letter);
			return ((ISingleResult<roc_spGetProductsByLetterResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetProductsByEditionByText")]
		public ISingleResult<roc_spGetProductsByEditionByTextResult> roc_spGetProductsByEditionByText([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> editionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> numberPage, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> page, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string text)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), editionId, numberPage, page, text);
			return ((ISingleResult<roc_spGetProductsByEditionByTextResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetClientsByBrand")]
		public ISingleResult<roc_spGetClientsByBrandResult> roc_spGetClientsByBrand([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> editionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> brandId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> top)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), editionId, brandId, top);
			return ((ISingleResult<roc_spGetClientsByBrandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetProduct")]
		public ISingleResult<roc_spGetProductResult> roc_spGetProduct([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> editionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> productId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> numberPage, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> page)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), editionId, productId, numberPage, page);
			return ((ISingleResult<roc_spGetProductResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetSpeciality")]
		public ISingleResult<roc_spGetSpecialityResult> roc_spGetSpeciality([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> specialityId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), specialityId);
			return ((ISingleResult<roc_spGetSpecialityResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetProductsByClient")]
		public ISingleResult<roc_spGetProductsByClientResult> roc_spGetProductsByClient([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> clientId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> top)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clientId, top);
			return ((ISingleResult<roc_spGetProductsByClientResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetBrands")]
		public ISingleResult<roc_spGetBrandsResult> roc_spGetBrands([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> editionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> numberPage, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> page)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), editionId, numberPage, page);
			return ((ISingleResult<roc_spGetBrandsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetBrandsByLetter")]
		public ISingleResult<roc_spGetBrandsByLetterResult> roc_spGetBrandsByLetter([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> editionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> numberPage, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> page, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(1)")] string letter)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), editionId, numberPage, page, letter);
			return ((ISingleResult<roc_spGetBrandsByLetterResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetClientsWithoutSubProduct")]
		public ISingleResult<roc_spGetClientsWithoutSubProductResult> roc_spGetClientsWithoutSubProduct([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> editionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> productId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> numberByPage, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> page)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), editionId, productId, numberByPage, page);
			return ((ISingleResult<roc_spGetClientsWithoutSubProductResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetProductsByText")]
		public ISingleResult<roc_spGetProductsByTextResult> roc_spGetProductsByText([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> editionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> numberByPage, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> page)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), editionId, text, numberByPage, page);
			return ((ISingleResult<roc_spGetProductsByTextResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetSubProductByProduct")]
		public ISingleResult<roc_spGetSubProductByProductResult> roc_spGetSubProductByProduct([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> editionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> productId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> numberPage, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> page)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), editionId, productId, numberPage, page);
			return ((ISingleResult<roc_spGetSubProductByProductResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetClientsBySpecByFullText")]
		public ISingleResult<roc_spGetClientsBySpecByFullTextResult> roc_spGetClientsBySpecByFullText([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> editionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> specialityId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> numberByPage, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> page, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string text)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), editionId, specialityId, numberByPage, page, text);
			return ((ISingleResult<roc_spGetClientsBySpecByFullTextResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetBrandsByFullText")]
		public ISingleResult<roc_spGetBrandsByFullTextResult> roc_spGetBrandsByFullText([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> editionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> numberByPage, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> page)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), editionId, text, numberByPage, page);
			return ((ISingleResult<roc_spGetBrandsByFullTextResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetProductsByFullText")]
		public ISingleResult<roc_spGetProductsByFullTextResult> roc_spGetProductsByFullText([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> editionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> numberByPage, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> page)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), editionId, text, numberByPage, page);
			return ((ISingleResult<roc_spGetProductsByFullTextResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetClientsAndSpecialityByText")]
		public ISingleResult<roc_spGetClientsAndSpecialityByTextResult> roc_spGetClientsAndSpecialityByText([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> editionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> numberByPage, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> page, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string text)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), editionId, numberByPage, page, text);
			return ((ISingleResult<roc_spGetClientsAndSpecialityByTextResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetInternational")]
		public ISingleResult<roc_spGetInternationalResult> roc_spGetInternational([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> editionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> numberByPage, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> page)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), editionId, numberByPage, page);
			return ((ISingleResult<roc_spGetInternationalResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetInternationalByFullText")]
		public ISingleResult<roc_spGetInternationalByFullTextResult> roc_spGetInternationalByFullText([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> editionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> numberByPage, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> page, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(250)")] string text)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), editionId, numberByPage, page, text);
			return ((ISingleResult<roc_spGetInternationalByFullTextResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetInternationalByLetter")]
		public ISingleResult<roc_spGetInternationalByLetterResult> roc_spGetInternationalByLetter([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> editionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> numberByPage, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> page, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(1)")] string letter)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), editionId, numberByPage, page, letter);
			return ((ISingleResult<roc_spGetInternationalByLetterResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetInternationalByText")]
		public ISingleResult<roc_spGetInternationalByTextResult> roc_spGetInternationalByText([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> editionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> numberByPage, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> page, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(250)")] string text)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), editionId, numberByPage, page, text);
			return ((ISingleResult<roc_spGetInternationalByTextResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetInternationalCategoriesByParentId")]
		public ISingleResult<roc_spGetInternationalCategoriesByParentIdResult> roc_spGetInternationalCategoriesByParentId([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> parentId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), parentId);
			return ((ISingleResult<roc_spGetInternationalCategoriesByParentIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetInternationalProductsByParentId")]
		public ISingleResult<roc_spGetInternationalProductsByParentIdResult> roc_spGetInternationalProductsByParentId([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> clientId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> categoryId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> productParentId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clientId, categoryId, productParentId);
			return ((ISingleResult<roc_spGetInternationalProductsByParentIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetPhonesByInternationalId")]
		public ISingleResult<roc_spGetPhonesByInternationalIdResult> roc_spGetPhonesByInternationalId([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> clientId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clientId);
			return ((ISingleResult<roc_spGetPhonesByInternationalIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetAddressByInternationalId")]
		public ISingleResult<roc_spGetAddressByInternationalIdResult> roc_spGetAddressByInternationalId([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> clientId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clientId);
			return ((ISingleResult<roc_spGetAddressByInternationalIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetInternationalSubcategoriesByClientId")]
		public ISingleResult<roc_spGetInternationalSubcategoriesByClientIdResult> roc_spGetInternationalSubcategoriesByClientId([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> clientId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clientId);
			return ((ISingleResult<roc_spGetInternationalSubcategoriesByClientIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetCategoryById")]
		public ISingleResult<roc_spGetCategoryByIdResult> roc_spGetCategoryById([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> categoryId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), categoryId);
			return ((ISingleResult<roc_spGetCategoryByIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetInternationalCategoriesByClientId")]
		public ISingleResult<roc_spGetInternationalCategoriesByClientIdResult> roc_spGetInternationalCategoriesByClientId([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> clientId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clientId);
			return ((ISingleResult<roc_spGetInternationalCategoriesByClientIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetInternationalCategories")]
		public ISingleResult<roc_spGetInternationalCategoriesResult> roc_spGetInternationalCategories()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<roc_spGetInternationalCategoriesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetInternationalProductsByClientAndCategory")]
		public ISingleResult<roc_spGetInternationalProductsByClientAndCategoryResult> roc_spGetInternationalProductsByClientAndCategory([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> clientId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> categoryId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clientId, categoryId);
			return ((ISingleResult<roc_spGetInternationalProductsByClientAndCategoryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetIntClient")]
		public ISingleResult<roc_spGetIntClientResult> roc_spGetIntClient([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> intClientId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intClientId);
			return ((ISingleResult<roc_spGetIntClientResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetDrugsByClientId")]
		public ISingleResult<roc_spGetDrugsByClientIdResult> roc_spGetDrugsByClientId([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> clientId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clientId);
			return ((ISingleResult<roc_spGetDrugsByClientIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.plm_spGetBrandsByClient")]
		public ISingleResult<plm_spGetBrandsByClientResult> plm_spGetBrandsByClient([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> editionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> clientId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), editionId, clientId);
			return ((ISingleResult<plm_spGetBrandsByClientResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.plm_spGetDrugs")]
		public ISingleResult<plm_spGetDrugsResult> plm_spGetDrugs([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> editionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string text)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), editionId, text);
			return ((ISingleResult<plm_spGetDrugsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetClientsByLetter")]
		public ISingleResult<roc_spGetClientsByLetterResult> roc_spGetClientsByLetter([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> editionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="TinyInt")] System.Nullable<byte> clientTypeId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(1)")] string letter, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> numberByPage, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> page)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), editionId, clientTypeId, letter, numberByPage, page);
			return ((ISingleResult<roc_spGetClientsByLetterResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetClientsByType")]
		public ISingleResult<roc_spGetClientsByTypeResult> roc_spGetClientsByType([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> editionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="TinyInt")] System.Nullable<byte> clientTypeId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> numberByPage, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> page)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), editionId, clientTypeId, numberByPage, page);
			return ((ISingleResult<roc_spGetClientsByTypeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetClientsByText")]
		public ISingleResult<roc_spGetClientsByTextResult> roc_spGetClientsByText([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> editionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="TinyInt")] System.Nullable<byte> clientTypeId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> numberByPage, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> page)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), editionId, clientTypeId, text, numberByPage, page);
			return ((ISingleResult<roc_spGetClientsByTextResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetClientsBySpeciality")]
		public ISingleResult<roc_spGetClientsBySpecialityResult> roc_spGetClientsBySpeciality([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> editionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> specialityId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> numberByPage, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> page)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), editionId, specialityId, numberByPage, page);
			return ((ISingleResult<roc_spGetClientsBySpecialityResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetClientsBySpecByStateByText")]
		public ISingleResult<roc_spGetClientsBySpecByStateByTextResult> roc_spGetClientsBySpecByStateByText([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> editionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> specialityId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> stateId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> numberByPage, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> page, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string text)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), editionId, specialityId, stateId, numberByPage, page, text);
			return ((ISingleResult<roc_spGetClientsBySpecByStateByTextResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetClientsBySpecByState")]
		public ISingleResult<roc_spGetClientsBySpecByStateResult> roc_spGetClientsBySpecByState([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> editionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> specialityId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> numberByPage, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> page, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> stateId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), editionId, specialityId, numberByPage, page, stateId);
			return ((ISingleResult<roc_spGetClientsBySpecByStateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetClientsBySpecByText")]
		public ISingleResult<roc_spGetClientsBySpecByTextResult> roc_spGetClientsBySpecByText([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> editionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> specialityId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> numberByPage, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> page, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string text)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), editionId, specialityId, numberByPage, page, text);
			return ((ISingleResult<roc_spGetClientsBySpecByTextResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetBrandsByEditionText")]
		public ISingleResult<roc_spGetBrandsByEditionTextResult> roc_spGetBrandsByEditionText([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> editionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> numberPage, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> page, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string text)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), editionId, numberPage, page, text);
			return ((ISingleResult<roc_spGetBrandsByEditionTextResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetBrand")]
		public ISingleResult<roc_spGetBrandResult> roc_spGetBrand([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> editionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> brandId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> numberPage, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> page)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), editionId, brandId, numberPage, page);
			return ((ISingleResult<roc_spGetBrandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetAdvertisementsByClient")]
		public ISingleResult<roc_spGetAdvertisementsByClientResult> roc_spGetAdvertisementsByClient([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> clientId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clientId);
			return ((ISingleResult<roc_spGetAdvertisementsByClientResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetBrandsByText")]
		public ISingleResult<roc_spGetBrandsByTextResult> roc_spGetBrandsByText([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> editionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> numberByPage, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> page)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), editionId, text, numberByPage, page);
			return ((ISingleResult<roc_spGetBrandsByTextResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetClientsByFullText")]
		public ISingleResult<roc_spGetClientsByFullTextResult> roc_spGetClientsByFullText([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> editionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="TinyInt")] System.Nullable<byte> clientTypeId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> numberByPage, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> page)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), editionId, clientTypeId, text, numberByPage, page);
			return ((ISingleResult<roc_spGetClientsByFullTextResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetClientsBySpecByStateByFullText")]
		public ISingleResult<roc_spGetClientsBySpecByStateByFullTextResult> roc_spGetClientsBySpecByStateByFullText([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> editionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> specialityId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> stateId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> numberByPage, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> page, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string text)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), editionId, specialityId, stateId, numberByPage, page, text);
			return ((ISingleResult<roc_spGetClientsBySpecByStateByFullTextResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.roc_spGetClientsAndSpecialityByFullText")]
		public ISingleResult<roc_spGetClientsAndSpecialityByFullTextResult> roc_spGetClientsAndSpecialityByFullText([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> editionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> numberByPage, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> page, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(40)")] string fullText)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), editionId, numberByPage, page, fullText);
			return ((ISingleResult<roc_spGetClientsAndSpecialityByFullTextResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clients")]
	public partial class Clients : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClientId;
		
		private int _EditionId;
		
		private System.Nullable<int> _ClientIdParent;
		
		private string _ClientCode;
		
		private string _CompanyName;
		
		private string _ShortName;
		
		private string _Address;
		
		private string _Suburb;
		
		private string _PostalCode;
		
		private string _City;
		
		private System.Nullable<int> _StateId;
		
		private string _Email;
		
		private string _Web;
		
		private byte _ClientTypeId;
		
		private string _Image;
		
		private string _Products;
		
		private System.Nullable<byte> _CountryId;
		
		private string _Page;
		
		private bool _Active;
		
		private EntityRef<Clients> _Clients2;
		
		private EntitySet<ClientPhones> _ClientPhones;
		
		private EntitySet<ClientProducts> _ClientProducts;
		
		private EntitySet<ClientSpecialities> _ClientSpecialities;
		
		private EntityRef<Clients> _Clients1;
		
		private EntityRef<Countries> _Countries;
		
		private EntityRef<States> _States;
		
		private EntityRef<Editions> _Editions;
		
		private EntityRef<ClientTypes> _ClientTypes;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClientIdChanging(int value);
    partial void OnClientIdChanged();
    partial void OnEditionIdChanging(int value);
    partial void OnEditionIdChanged();
    partial void OnClientIdParentChanging(System.Nullable<int> value);
    partial void OnClientIdParentChanged();
    partial void OnClientCodeChanging(string value);
    partial void OnClientCodeChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnSuburbChanging(string value);
    partial void OnSuburbChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateIdChanging(System.Nullable<int> value);
    partial void OnStateIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnWebChanging(string value);
    partial void OnWebChanged();
    partial void OnClientTypeIdChanging(byte value);
    partial void OnClientTypeIdChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnProductsChanging(string value);
    partial void OnProductsChanged();
    partial void OnCountryIdChanging(System.Nullable<byte> value);
    partial void OnCountryIdChanged();
    partial void OnPageChanging(string value);
    partial void OnPageChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public Clients()
		{
			this._Clients2 = default(EntityRef<Clients>);
			this._ClientPhones = new EntitySet<ClientPhones>(new Action<ClientPhones>(this.attach_ClientPhones), new Action<ClientPhones>(this.detach_ClientPhones));
			this._ClientProducts = new EntitySet<ClientProducts>(new Action<ClientProducts>(this.attach_ClientProducts), new Action<ClientProducts>(this.detach_ClientProducts));
			this._ClientSpecialities = new EntitySet<ClientSpecialities>(new Action<ClientSpecialities>(this.attach_ClientSpecialities), new Action<ClientSpecialities>(this.detach_ClientSpecialities));
			this._Clients1 = default(EntityRef<Clients>);
			this._Countries = default(EntityRef<Countries>);
			this._States = default(EntityRef<States>);
			this._Editions = default(EntityRef<Editions>);
			this._ClientTypes = default(EntityRef<ClientTypes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					if (this._Clients1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIdChanging(value);
					this.SendPropertyChanging();
					this._ClientId = value;
					this.SendPropertyChanged("ClientId");
					this.OnClientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditionId", DbType="Int NOT NULL")]
		public int EditionId
		{
			get
			{
				return this._EditionId;
			}
			set
			{
				if ((this._EditionId != value))
				{
					if (this._Editions.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEditionIdChanging(value);
					this.SendPropertyChanging();
					this._EditionId = value;
					this.SendPropertyChanged("EditionId");
					this.OnEditionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientIdParent", DbType="Int")]
		public System.Nullable<int> ClientIdParent
		{
			get
			{
				return this._ClientIdParent;
			}
			set
			{
				if ((this._ClientIdParent != value))
				{
					this.OnClientIdParentChanging(value);
					this.SendPropertyChanging();
					this._ClientIdParent = value;
					this.SendPropertyChanged("ClientIdParent");
					this.OnClientIdParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientCode", DbType="NVarChar(MAX)", CanBeNull=false)]
		public string ClientCode
		{
			get
			{
				return this._ClientCode;
			}
			set
			{
				if ((this._ClientCode != value))
				{
					this.OnClientCodeChanging(value);
					this.SendPropertyChanging();
					this._ClientCode = value;
					this.SendPropertyChanged("ClientCode");
					this.OnClientCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(MAX)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suburb", DbType="NVarChar(MAX)")]
		public string Suburb
		{
			get
			{
				return this._Suburb;
			}
			set
			{
				if ((this._Suburb != value))
				{
					this.OnSuburbChanging(value);
					this.SendPropertyChanging();
					this._Suburb = value;
					this.SendPropertyChanged("Suburb");
					this.OnSuburbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(MAX)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(MAX)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="Int")]
		public System.Nullable<int> StateId
		{
			get
			{
				return this._StateId;
			}
			set
			{
				if ((this._StateId != value))
				{
					if (this._States.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStateIdChanging(value);
					this.SendPropertyChanging();
					this._StateId = value;
					this.SendPropertyChanged("StateId");
					this.OnStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Web", DbType="NVarChar(MAX)")]
		public string Web
		{
			get
			{
				return this._Web;
			}
			set
			{
				if ((this._Web != value))
				{
					this.OnWebChanging(value);
					this.SendPropertyChanging();
					this._Web = value;
					this.SendPropertyChanged("Web");
					this.OnWebChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientTypeId", DbType="TinyInt NOT NULL")]
		public byte ClientTypeId
		{
			get
			{
				return this._ClientTypeId;
			}
			set
			{
				if ((this._ClientTypeId != value))
				{
					if (this._ClientTypes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ClientTypeId = value;
					this.SendPropertyChanged("ClientTypeId");
					this.OnClientTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(MAX)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products", DbType="NVarChar(MAX)")]
		public string Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				if ((this._Products != value))
				{
					this.OnProductsChanging(value);
					this.SendPropertyChanging();
					this._Products = value;
					this.SendPropertyChanged("Products");
					this.OnProductsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="TinyInt")]
		public System.Nullable<byte> CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					if (this._Countries.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page", DbType="VarChar(100)")]
		public string Page
		{
			get
			{
				return this._Page;
			}
			set
			{
				if ((this._Page != value))
				{
					this.OnPageChanging(value);
					this.SendPropertyChanging();
					this._Page = value;
					this.SendPropertyChanged("Page");
					this.OnPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_Clients", Storage="_Clients2", ThisKey="ClientId", OtherKey="ClientId", IsUnique=true, IsForeignKey=false)]
		public Clients Clients2
		{
			get
			{
				return this._Clients2.Entity;
			}
			set
			{
				Clients previousValue = this._Clients2.Entity;
				if (((previousValue != value) 
							|| (this._Clients2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clients2.Entity = null;
						previousValue.Clients1 = null;
					}
					this._Clients2.Entity = value;
					if ((value != null))
					{
						value.Clients1 = this;
					}
					this.SendPropertyChanged("Clients2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_ClientPhones", Storage="_ClientPhones", ThisKey="ClientId", OtherKey="ClientId")]
		public EntitySet<ClientPhones> ClientPhones
		{
			get
			{
				return this._ClientPhones;
			}
			set
			{
				this._ClientPhones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_ClientProducts", Storage="_ClientProducts", ThisKey="ClientId", OtherKey="ClientId")]
		public EntitySet<ClientProducts> ClientProducts
		{
			get
			{
				return this._ClientProducts;
			}
			set
			{
				this._ClientProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_ClientSpecialities", Storage="_ClientSpecialities", ThisKey="ClientId", OtherKey="ClientId")]
		public EntitySet<ClientSpecialities> ClientSpecialities
		{
			get
			{
				return this._ClientSpecialities;
			}
			set
			{
				this._ClientSpecialities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_Clients", Storage="_Clients1", ThisKey="ClientId", OtherKey="ClientId", IsForeignKey=true)]
		public Clients Clients1
		{
			get
			{
				return this._Clients1.Entity;
			}
			set
			{
				Clients previousValue = this._Clients1.Entity;
				if (((previousValue != value) 
							|| (this._Clients1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clients1.Entity = null;
						previousValue.Clients2 = null;
					}
					this._Clients1.Entity = value;
					if ((value != null))
					{
						value.Clients2 = this;
						this._ClientId = value.ClientId;
					}
					else
					{
						this._ClientId = default(int);
					}
					this.SendPropertyChanged("Clients1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Countries_Clients", Storage="_Countries", ThisKey="CountryId", OtherKey="CountryId", IsForeignKey=true)]
		public Countries Countries
		{
			get
			{
				return this._Countries.Entity;
			}
			set
			{
				Countries previousValue = this._Countries.Entity;
				if (((previousValue != value) 
							|| (this._Countries.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Countries.Entity = null;
						previousValue.Clients.Remove(this);
					}
					this._Countries.Entity = value;
					if ((value != null))
					{
						value.Clients.Add(this);
						this._CountryId = value.CountryId;
					}
					else
					{
						this._CountryId = default(Nullable<byte>);
					}
					this.SendPropertyChanged("Countries");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="States_Clients", Storage="_States", ThisKey="StateId", OtherKey="StateId", IsForeignKey=true)]
		public States States
		{
			get
			{
				return this._States.Entity;
			}
			set
			{
				States previousValue = this._States.Entity;
				if (((previousValue != value) 
							|| (this._States.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._States.Entity = null;
						previousValue.Clients.Remove(this);
					}
					this._States.Entity = value;
					if ((value != null))
					{
						value.Clients.Add(this);
						this._StateId = value.StateId;
					}
					else
					{
						this._StateId = default(Nullable<int>);
					}
					this.SendPropertyChanged("States");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Editions_Clients", Storage="_Editions", ThisKey="EditionId", OtherKey="EditionId", IsForeignKey=true)]
		public Editions Editions
		{
			get
			{
				return this._Editions.Entity;
			}
			set
			{
				Editions previousValue = this._Editions.Entity;
				if (((previousValue != value) 
							|| (this._Editions.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Editions.Entity = null;
						previousValue.Clients.Remove(this);
					}
					this._Editions.Entity = value;
					if ((value != null))
					{
						value.Clients.Add(this);
						this._EditionId = value.EditionId;
					}
					else
					{
						this._EditionId = default(int);
					}
					this.SendPropertyChanged("Editions");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientTypes_Clients", Storage="_ClientTypes", ThisKey="ClientTypeId", OtherKey="ClientTypeId", IsForeignKey=true)]
		public ClientTypes ClientTypes
		{
			get
			{
				return this._ClientTypes.Entity;
			}
			set
			{
				ClientTypes previousValue = this._ClientTypes.Entity;
				if (((previousValue != value) 
							|| (this._ClientTypes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClientTypes.Entity = null;
						previousValue.Clients.Remove(this);
					}
					this._ClientTypes.Entity = value;
					if ((value != null))
					{
						value.Clients.Add(this);
						this._ClientTypeId = value.ClientTypeId;
					}
					else
					{
						this._ClientTypeId = default(byte);
					}
					this.SendPropertyChanged("ClientTypes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClientPhones(ClientPhones entity)
		{
			this.SendPropertyChanging();
			entity.Clients = this;
		}
		
		private void detach_ClientPhones(ClientPhones entity)
		{
			this.SendPropertyChanging();
			entity.Clients = null;
		}
		
		private void attach_ClientProducts(ClientProducts entity)
		{
			this.SendPropertyChanging();
			entity.Clients = this;
		}
		
		private void detach_ClientProducts(ClientProducts entity)
		{
			this.SendPropertyChanging();
			entity.Clients = null;
		}
		
		private void attach_ClientSpecialities(ClientSpecialities entity)
		{
			this.SendPropertyChanging();
			entity.Clients = this;
		}
		
		private void detach_ClientSpecialities(ClientSpecialities entity)
		{
			this.SendPropertyChanging();
			entity.Clients = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Countries")]
	public partial class Countries : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _CountryId;
		
		private string _CountryName;
		
		private System.Nullable<byte> _CountryCode;
		
		private string _ID;
		
		private bool _Active;
		
		private EntitySet<Clients> _Clients;
		
		private EntitySet<States> _States;
		
		private EntitySet<Editions> _Editions;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountryIdChanging(byte value);
    partial void OnCountryIdChanged();
    partial void OnCountryNameChanging(string value);
    partial void OnCountryNameChanged();
    partial void OnCountryCodeChanging(System.Nullable<byte> value);
    partial void OnCountryCodeChanged();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public Countries()
		{
			this._Clients = new EntitySet<Clients>(new Action<Clients>(this.attach_Clients), new Action<Clients>(this.detach_Clients));
			this._States = new EntitySet<States>(new Action<States>(this.attach_States), new Action<States>(this.detach_States));
			this._Editions = new EntitySet<Editions>(new Action<Editions>(this.attach_Editions), new Action<Editions>(this.detach_Editions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this.OnCountryNameChanging(value);
					this.SendPropertyChanging();
					this._CountryName = value;
					this.SendPropertyChanged("CountryName");
					this.OnCountryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryCode", DbType="TinyInt")]
		public System.Nullable<byte> CountryCode
		{
			get
			{
				return this._CountryCode;
			}
			set
			{
				if ((this._CountryCode != value))
				{
					this.OnCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryCode = value;
					this.SendPropertyChanged("CountryCode");
					this.OnCountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Countries_Clients", Storage="_Clients", ThisKey="CountryId", OtherKey="CountryId")]
		public EntitySet<Clients> Clients
		{
			get
			{
				return this._Clients;
			}
			set
			{
				this._Clients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Countries_States", Storage="_States", ThisKey="CountryId", OtherKey="CountryId")]
		public EntitySet<States> States
		{
			get
			{
				return this._States;
			}
			set
			{
				this._States.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Countries_Editions", Storage="_Editions", ThisKey="CountryId", OtherKey="CountryId")]
		public EntitySet<Editions> Editions
		{
			get
			{
				return this._Editions;
			}
			set
			{
				this._Editions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Clients(Clients entity)
		{
			this.SendPropertyChanging();
			entity.Countries = this;
		}
		
		private void detach_Clients(Clients entity)
		{
			this.SendPropertyChanging();
			entity.Countries = null;
		}
		
		private void attach_States(States entity)
		{
			this.SendPropertyChanging();
			entity.Countries = this;
		}
		
		private void detach_States(States entity)
		{
			this.SendPropertyChanging();
			entity.Countries = null;
		}
		
		private void attach_Editions(Editions entity)
		{
			this.SendPropertyChanging();
			entity.Countries = this;
		}
		
		private void detach_Editions(Editions entity)
		{
			this.SendPropertyChanging();
			entity.Countries = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.States")]
	public partial class States : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StateId;
		
		private byte _CountryId;
		
		private string _StateName;
		
		private bool _Active;
		
		private EntitySet<Clients> _Clients;
		
		private EntityRef<Countries> _Countries;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStateIdChanging(int value);
    partial void OnStateIdChanged();
    partial void OnCountryIdChanging(byte value);
    partial void OnCountryIdChanged();
    partial void OnStateNameChanging(string value);
    partial void OnStateNameChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public States()
		{
			this._Clients = new EntitySet<Clients>(new Action<Clients>(this.attach_Clients), new Action<Clients>(this.detach_Clients));
			this._Countries = default(EntityRef<Countries>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StateId
		{
			get
			{
				return this._StateId;
			}
			set
			{
				if ((this._StateId != value))
				{
					this.OnStateIdChanging(value);
					this.SendPropertyChanging();
					this._StateId = value;
					this.SendPropertyChanged("StateId");
					this.OnStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="TinyInt NOT NULL")]
		public byte CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					if (this._Countries.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this.OnStateNameChanging(value);
					this.SendPropertyChanging();
					this._StateName = value;
					this.SendPropertyChanged("StateName");
					this.OnStateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="States_Clients", Storage="_Clients", ThisKey="StateId", OtherKey="StateId")]
		public EntitySet<Clients> Clients
		{
			get
			{
				return this._Clients;
			}
			set
			{
				this._Clients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Countries_States", Storage="_Countries", ThisKey="CountryId", OtherKey="CountryId", IsForeignKey=true)]
		public Countries Countries
		{
			get
			{
				return this._Countries.Entity;
			}
			set
			{
				Countries previousValue = this._Countries.Entity;
				if (((previousValue != value) 
							|| (this._Countries.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Countries.Entity = null;
						previousValue.States.Remove(this);
					}
					this._Countries.Entity = value;
					if ((value != null))
					{
						value.States.Add(this);
						this._CountryId = value.CountryId;
					}
					else
					{
						this._CountryId = default(byte);
					}
					this.SendPropertyChanged("Countries");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Clients(Clients entity)
		{
			this.SendPropertyChanging();
			entity.States = this;
		}
		
		private void detach_Clients(Clients entity)
		{
			this.SendPropertyChanging();
			entity.States = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientPhones")]
	public partial class ClientPhones : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClientPhoneId;
		
		private int _ClientId;
		
		private byte _PhoneTypeId;
		
		private int _SpecialityId;
		
		private string _Number;
		
		private string _Lada;
		
		private bool _Active;
		
		private EntityRef<Clients> _Clients;
		
		private EntityRef<PhoneTypes> _PhoneTypes;
		
		private EntityRef<Specialities> _Specialities;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClientPhoneIdChanging(int value);
    partial void OnClientPhoneIdChanged();
    partial void OnClientIdChanging(int value);
    partial void OnClientIdChanged();
    partial void OnPhoneTypeIdChanging(byte value);
    partial void OnPhoneTypeIdChanged();
    partial void OnSpecialityIdChanging(int value);
    partial void OnSpecialityIdChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnLadaChanging(string value);
    partial void OnLadaChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public ClientPhones()
		{
			this._Clients = default(EntityRef<Clients>);
			this._PhoneTypes = default(EntityRef<PhoneTypes>);
			this._Specialities = default(EntityRef<Specialities>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientPhoneId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ClientPhoneId
		{
			get
			{
				return this._ClientPhoneId;
			}
			set
			{
				if ((this._ClientPhoneId != value))
				{
					this.OnClientPhoneIdChanging(value);
					this.SendPropertyChanging();
					this._ClientPhoneId = value;
					this.SendPropertyChanged("ClientPhoneId");
					this.OnClientPhoneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int NOT NULL")]
		public int ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					if (this._Clients.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIdChanging(value);
					this.SendPropertyChanging();
					this._ClientId = value;
					this.SendPropertyChanged("ClientId");
					this.OnClientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneTypeId", DbType="TinyInt NOT NULL")]
		public byte PhoneTypeId
		{
			get
			{
				return this._PhoneTypeId;
			}
			set
			{
				if ((this._PhoneTypeId != value))
				{
					if (this._PhoneTypes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhoneTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PhoneTypeId = value;
					this.SendPropertyChanged("PhoneTypeId");
					this.OnPhoneTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityId", DbType="Int NOT NULL")]
		public int SpecialityId
		{
			get
			{
				return this._SpecialityId;
			}
			set
			{
				if ((this._SpecialityId != value))
				{
					if (this._Specialities.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecialityIdChanging(value);
					this.SendPropertyChanging();
					this._SpecialityId = value;
					this.SendPropertyChanged("SpecialityId");
					this.OnSpecialityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lada", DbType="VarChar(10)")]
		public string Lada
		{
			get
			{
				return this._Lada;
			}
			set
			{
				if ((this._Lada != value))
				{
					this.OnLadaChanging(value);
					this.SendPropertyChanging();
					this._Lada = value;
					this.SendPropertyChanged("Lada");
					this.OnLadaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_ClientPhones", Storage="_Clients", ThisKey="ClientId", OtherKey="ClientId", IsForeignKey=true)]
		public Clients Clients
		{
			get
			{
				return this._Clients.Entity;
			}
			set
			{
				Clients previousValue = this._Clients.Entity;
				if (((previousValue != value) 
							|| (this._Clients.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clients.Entity = null;
						previousValue.ClientPhones.Remove(this);
					}
					this._Clients.Entity = value;
					if ((value != null))
					{
						value.ClientPhones.Add(this);
						this._ClientId = value.ClientId;
					}
					else
					{
						this._ClientId = default(int);
					}
					this.SendPropertyChanged("Clients");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhoneTypes_ClientPhones", Storage="_PhoneTypes", ThisKey="PhoneTypeId", OtherKey="PhoneTypeId", IsForeignKey=true)]
		public PhoneTypes PhoneTypes
		{
			get
			{
				return this._PhoneTypes.Entity;
			}
			set
			{
				PhoneTypes previousValue = this._PhoneTypes.Entity;
				if (((previousValue != value) 
							|| (this._PhoneTypes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhoneTypes.Entity = null;
						previousValue.ClientPhones.Remove(this);
					}
					this._PhoneTypes.Entity = value;
					if ((value != null))
					{
						value.ClientPhones.Add(this);
						this._PhoneTypeId = value.PhoneTypeId;
					}
					else
					{
						this._PhoneTypeId = default(byte);
					}
					this.SendPropertyChanged("PhoneTypes");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Specialities_ClientPhones", Storage="_Specialities", ThisKey="SpecialityId", OtherKey="SpecialityId", IsForeignKey=true)]
		public Specialities Specialities
		{
			get
			{
				return this._Specialities.Entity;
			}
			set
			{
				Specialities previousValue = this._Specialities.Entity;
				if (((previousValue != value) 
							|| (this._Specialities.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Specialities.Entity = null;
						previousValue.ClientPhones.Remove(this);
					}
					this._Specialities.Entity = value;
					if ((value != null))
					{
						value.ClientPhones.Add(this);
						this._SpecialityId = value.SpecialityId;
					}
					else
					{
						this._SpecialityId = default(int);
					}
					this.SendPropertyChanged("Specialities");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhoneTypes")]
	public partial class PhoneTypes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _PhoneTypeId;
		
		private string _Description;
		
		private bool _Active;
		
		private EntitySet<ClientPhones> _ClientPhones;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhoneTypeIdChanging(byte value);
    partial void OnPhoneTypeIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public PhoneTypes()
		{
			this._ClientPhones = new EntitySet<ClientPhones>(new Action<ClientPhones>(this.attach_ClientPhones), new Action<ClientPhones>(this.detach_ClientPhones));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneTypeId", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte PhoneTypeId
		{
			get
			{
				return this._PhoneTypeId;
			}
			set
			{
				if ((this._PhoneTypeId != value))
				{
					this.OnPhoneTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PhoneTypeId = value;
					this.SendPropertyChanged("PhoneTypeId");
					this.OnPhoneTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhoneTypes_ClientPhones", Storage="_ClientPhones", ThisKey="PhoneTypeId", OtherKey="PhoneTypeId")]
		public EntitySet<ClientPhones> ClientPhones
		{
			get
			{
				return this._ClientPhones;
			}
			set
			{
				this._ClientPhones.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClientPhones(ClientPhones entity)
		{
			this.SendPropertyChanging();
			entity.PhoneTypes = this;
		}
		
		private void detach_ClientPhones(ClientPhones entity)
		{
			this.SendPropertyChanging();
			entity.PhoneTypes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientProducts")]
	public partial class ClientProducts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClientProductId;
		
		private int _ClientId;
		
		private int _ProductId;
		
		private System.Nullable<int> _SubProductId;
		
		private string _Page;
		
		private bool _Active;
		
		private EntityRef<Clients> _Clients;
		
		private EntityRef<Products> _Products;
		
		private EntityRef<SubProducts> _SubProducts;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClientProductIdChanging(int value);
    partial void OnClientProductIdChanged();
    partial void OnClientIdChanging(int value);
    partial void OnClientIdChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnSubProductIdChanging(System.Nullable<int> value);
    partial void OnSubProductIdChanged();
    partial void OnPageChanging(string value);
    partial void OnPageChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public ClientProducts()
		{
			this._Clients = default(EntityRef<Clients>);
			this._Products = default(EntityRef<Products>);
			this._SubProducts = default(EntityRef<SubProducts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientProductId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ClientProductId
		{
			get
			{
				return this._ClientProductId;
			}
			set
			{
				if ((this._ClientProductId != value))
				{
					this.OnClientProductIdChanging(value);
					this.SendPropertyChanging();
					this._ClientProductId = value;
					this.SendPropertyChanged("ClientProductId");
					this.OnClientProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int NOT NULL")]
		public int ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					if (this._Clients.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIdChanging(value);
					this.SendPropertyChanging();
					this._ClientId = value;
					this.SendPropertyChanged("ClientId");
					this.OnClientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					if (this._Products.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubProductId", DbType="Int")]
		public System.Nullable<int> SubProductId
		{
			get
			{
				return this._SubProductId;
			}
			set
			{
				if ((this._SubProductId != value))
				{
					if (this._SubProducts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubProductIdChanging(value);
					this.SendPropertyChanging();
					this._SubProductId = value;
					this.SendPropertyChanged("SubProductId");
					this.OnSubProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page", DbType="VarChar(50)")]
		public string Page
		{
			get
			{
				return this._Page;
			}
			set
			{
				if ((this._Page != value))
				{
					this.OnPageChanging(value);
					this.SendPropertyChanging();
					this._Page = value;
					this.SendPropertyChanged("Page");
					this.OnPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_ClientProducts", Storage="_Clients", ThisKey="ClientId", OtherKey="ClientId", IsForeignKey=true)]
		public Clients Clients
		{
			get
			{
				return this._Clients.Entity;
			}
			set
			{
				Clients previousValue = this._Clients.Entity;
				if (((previousValue != value) 
							|| (this._Clients.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clients.Entity = null;
						previousValue.ClientProducts.Remove(this);
					}
					this._Clients.Entity = value;
					if ((value != null))
					{
						value.ClientProducts.Add(this);
						this._ClientId = value.ClientId;
					}
					else
					{
						this._ClientId = default(int);
					}
					this.SendPropertyChanged("Clients");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_ClientProducts", Storage="_Products", ThisKey="ProductId", OtherKey="ProductId", IsForeignKey=true)]
		public Products Products
		{
			get
			{
				return this._Products.Entity;
			}
			set
			{
				Products previousValue = this._Products.Entity;
				if (((previousValue != value) 
							|| (this._Products.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products.Entity = null;
						previousValue.ClientProducts.Remove(this);
					}
					this._Products.Entity = value;
					if ((value != null))
					{
						value.ClientProducts.Add(this);
						this._ProductId = value.ProductId;
					}
					else
					{
						this._ProductId = default(int);
					}
					this.SendPropertyChanged("Products");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubProducts_ClientProducts", Storage="_SubProducts", ThisKey="SubProductId", OtherKey="SubProductId", IsForeignKey=true)]
		public SubProducts SubProducts
		{
			get
			{
				return this._SubProducts.Entity;
			}
			set
			{
				SubProducts previousValue = this._SubProducts.Entity;
				if (((previousValue != value) 
							|| (this._SubProducts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubProducts.Entity = null;
						previousValue.ClientProducts.Remove(this);
					}
					this._SubProducts.Entity = value;
					if ((value != null))
					{
						value.ClientProducts.Add(this);
						this._SubProductId = value.SubProductId;
					}
					else
					{
						this._SubProductId = default(Nullable<int>);
					}
					this.SendPropertyChanged("SubProducts");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products")]
	public partial class Products : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductId;
		
		private System.Nullable<int> _ParentId;
		
		private string _ProductName;
		
		private bool _Active;
		
		private EntitySet<ClientProducts> _ClientProducts;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnParentIdChanging(System.Nullable<int> value);
    partial void OnParentIdChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public Products()
		{
			this._ClientProducts = new EntitySet<ClientProducts>(new Action<ClientProducts>(this.attach_ClientProducts), new Action<ClientProducts>(this.detach_ClientProducts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
		public System.Nullable<int> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_ClientProducts", Storage="_ClientProducts", ThisKey="ProductId", OtherKey="ProductId")]
		public EntitySet<ClientProducts> ClientProducts
		{
			get
			{
				return this._ClientProducts;
			}
			set
			{
				this._ClientProducts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClientProducts(ClientProducts entity)
		{
			this.SendPropertyChanging();
			entity.Products = this;
		}
		
		private void detach_ClientProducts(ClientProducts entity)
		{
			this.SendPropertyChanging();
			entity.Products = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubProducts")]
	public partial class SubProducts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SubProductId;
		
		private string _Description;
		
		private bool _Active;
		
		private EntitySet<ClientProducts> _ClientProducts;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubProductIdChanging(int value);
    partial void OnSubProductIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public SubProducts()
		{
			this._ClientProducts = new EntitySet<ClientProducts>(new Action<ClientProducts>(this.attach_ClientProducts), new Action<ClientProducts>(this.detach_ClientProducts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubProductId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SubProductId
		{
			get
			{
				return this._SubProductId;
			}
			set
			{
				if ((this._SubProductId != value))
				{
					this.OnSubProductIdChanging(value);
					this.SendPropertyChanging();
					this._SubProductId = value;
					this.SendPropertyChanged("SubProductId");
					this.OnSubProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubProducts_ClientProducts", Storage="_ClientProducts", ThisKey="SubProductId", OtherKey="SubProductId")]
		public EntitySet<ClientProducts> ClientProducts
		{
			get
			{
				return this._ClientProducts;
			}
			set
			{
				this._ClientProducts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClientProducts(ClientProducts entity)
		{
			this.SendPropertyChanging();
			entity.SubProducts = this;
		}
		
		private void detach_ClientProducts(ClientProducts entity)
		{
			this.SendPropertyChanging();
			entity.SubProducts = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class PhonesByClient
	{
		
		private byte _PhoneTypeId;
		
		private string _Number;
		
		private string _Lada;
		
		private string _PhoneType;
		
		public PhonesByClient()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneTypeId")]
		public byte PhoneTypeId
		{
			get
			{
				return this._PhoneTypeId;
			}
			set
			{
				if ((this._PhoneTypeId != value))
				{
					this._PhoneTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", CanBeNull=false)]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this._Number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lada", CanBeNull=false)]
		public string Lada
		{
			get
			{
				return this._Lada;
			}
			set
			{
				if ((this._Lada != value))
				{
					this._Lada = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneType", CanBeNull=false)]
		public string PhoneType
		{
			get
			{
				return this._PhoneType;
			}
			set
			{
				if ((this._PhoneType != value))
				{
					this._PhoneType = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Editions")]
	public partial class Editions : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EditionId;
		
		private byte _CountryId;
		
		private System.Nullable<int> _ParentId;
		
		private string _EditionCode;
		
		private int _BookId;
		
		private int _NumberEdition;
		
		private string _ISBN;
		
		private string _BarCode;
		
		private bool _Active;
		
		private EntitySet<Clients> _Clients;
		
		private EntityRef<Countries> _Countries;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEditionIdChanging(int value);
    partial void OnEditionIdChanged();
    partial void OnCountryIdChanging(byte value);
    partial void OnCountryIdChanged();
    partial void OnParentIdChanging(System.Nullable<int> value);
    partial void OnParentIdChanged();
    partial void OnEditionCodeChanging(string value);
    partial void OnEditionCodeChanged();
    partial void OnBookIdChanging(int value);
    partial void OnBookIdChanged();
    partial void OnNumberEditionChanging(int value);
    partial void OnNumberEditionChanged();
    partial void OnISBNChanging(string value);
    partial void OnISBNChanged();
    partial void OnBarCodeChanging(string value);
    partial void OnBarCodeChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public Editions()
		{
			this._Clients = new EntitySet<Clients>(new Action<Clients>(this.attach_Clients), new Action<Clients>(this.detach_Clients));
			this._Countries = default(EntityRef<Countries>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EditionId
		{
			get
			{
				return this._EditionId;
			}
			set
			{
				if ((this._EditionId != value))
				{
					this.OnEditionIdChanging(value);
					this.SendPropertyChanging();
					this._EditionId = value;
					this.SendPropertyChanged("EditionId");
					this.OnEditionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="TinyInt NOT NULL")]
		public byte CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					if (this._Countries.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
		public System.Nullable<int> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditionCode", DbType="VarChar(10)")]
		public string EditionCode
		{
			get
			{
				return this._EditionCode;
			}
			set
			{
				if ((this._EditionCode != value))
				{
					this.OnEditionCodeChanging(value);
					this.SendPropertyChanging();
					this._EditionCode = value;
					this.SendPropertyChanged("EditionCode");
					this.OnEditionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookId", DbType="Int NOT NULL")]
		public int BookId
		{
			get
			{
				return this._BookId;
			}
			set
			{
				if ((this._BookId != value))
				{
					this.OnBookIdChanging(value);
					this.SendPropertyChanging();
					this._BookId = value;
					this.SendPropertyChanged("BookId");
					this.OnBookIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberEdition", DbType="Int NOT NULL")]
		public int NumberEdition
		{
			get
			{
				return this._NumberEdition;
			}
			set
			{
				if ((this._NumberEdition != value))
				{
					this.OnNumberEditionChanging(value);
					this.SendPropertyChanging();
					this._NumberEdition = value;
					this.SendPropertyChanged("NumberEdition");
					this.OnNumberEditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISBN", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ISBN
		{
			get
			{
				return this._ISBN;
			}
			set
			{
				if ((this._ISBN != value))
				{
					this.OnISBNChanging(value);
					this.SendPropertyChanging();
					this._ISBN = value;
					this.SendPropertyChanged("ISBN");
					this.OnISBNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarCode", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string BarCode
		{
			get
			{
				return this._BarCode;
			}
			set
			{
				if ((this._BarCode != value))
				{
					this.OnBarCodeChanging(value);
					this.SendPropertyChanging();
					this._BarCode = value;
					this.SendPropertyChanged("BarCode");
					this.OnBarCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Editions_Clients", Storage="_Clients", ThisKey="EditionId", OtherKey="EditionId")]
		public EntitySet<Clients> Clients
		{
			get
			{
				return this._Clients;
			}
			set
			{
				this._Clients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Countries_Editions", Storage="_Countries", ThisKey="CountryId", OtherKey="CountryId", IsForeignKey=true)]
		public Countries Countries
		{
			get
			{
				return this._Countries.Entity;
			}
			set
			{
				Countries previousValue = this._Countries.Entity;
				if (((previousValue != value) 
							|| (this._Countries.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Countries.Entity = null;
						previousValue.Editions.Remove(this);
					}
					this._Countries.Entity = value;
					if ((value != null))
					{
						value.Editions.Add(this);
						this._CountryId = value.CountryId;
					}
					else
					{
						this._CountryId = default(byte);
					}
					this.SendPropertyChanged("Countries");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Clients(Clients entity)
		{
			this.SendPropertyChanging();
			entity.Editions = this;
		}
		
		private void detach_Clients(Clients entity)
		{
			this.SendPropertyChanging();
			entity.Editions = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientTypes")]
	public partial class ClientTypes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ClientTypeId;
		
		private string _TypeName;
		
		private bool _Active;
		
		private EntitySet<Clients> _Clients;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClientTypeIdChanging(byte value);
    partial void OnClientTypeIdChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public ClientTypes()
		{
			this._Clients = new EntitySet<Clients>(new Action<Clients>(this.attach_Clients), new Action<Clients>(this.detach_Clients));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientTypeId", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte ClientTypeId
		{
			get
			{
				return this._ClientTypeId;
			}
			set
			{
				if ((this._ClientTypeId != value))
				{
					this.OnClientTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ClientTypeId = value;
					this.SendPropertyChanged("ClientTypeId");
					this.OnClientTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientTypes_Clients", Storage="_Clients", ThisKey="ClientTypeId", OtherKey="ClientTypeId")]
		public EntitySet<Clients> Clients
		{
			get
			{
				return this._Clients;
			}
			set
			{
				this._Clients.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Clients(Clients entity)
		{
			this.SendPropertyChanging();
			entity.ClientTypes = this;
		}
		
		private void detach_Clients(Clients entity)
		{
			this.SendPropertyChanging();
			entity.ClientTypes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Specialities")]
	public partial class Specialities : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SpecialityId;
		
		private string _Description;
		
		private bool _Active;
		
		private EntitySet<ClientPhones> _ClientPhones;
		
		private EntitySet<ClientSpecialities> _ClientSpecialities;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpecialityIdChanging(int value);
    partial void OnSpecialityIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public Specialities()
		{
			this._ClientPhones = new EntitySet<ClientPhones>(new Action<ClientPhones>(this.attach_ClientPhones), new Action<ClientPhones>(this.detach_ClientPhones));
			this._ClientSpecialities = new EntitySet<ClientSpecialities>(new Action<ClientSpecialities>(this.attach_ClientSpecialities), new Action<ClientSpecialities>(this.detach_ClientSpecialities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SpecialityId
		{
			get
			{
				return this._SpecialityId;
			}
			set
			{
				if ((this._SpecialityId != value))
				{
					this.OnSpecialityIdChanging(value);
					this.SendPropertyChanging();
					this._SpecialityId = value;
					this.SendPropertyChanged("SpecialityId");
					this.OnSpecialityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Specialities_ClientPhones", Storage="_ClientPhones", ThisKey="SpecialityId", OtherKey="SpecialityId")]
		public EntitySet<ClientPhones> ClientPhones
		{
			get
			{
				return this._ClientPhones;
			}
			set
			{
				this._ClientPhones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Specialities_ClientSpecialities", Storage="_ClientSpecialities", ThisKey="SpecialityId", OtherKey="SpecialityId")]
		public EntitySet<ClientSpecialities> ClientSpecialities
		{
			get
			{
				return this._ClientSpecialities;
			}
			set
			{
				this._ClientSpecialities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClientPhones(ClientPhones entity)
		{
			this.SendPropertyChanging();
			entity.Specialities = this;
		}
		
		private void detach_ClientPhones(ClientPhones entity)
		{
			this.SendPropertyChanging();
			entity.Specialities = null;
		}
		
		private void attach_ClientSpecialities(ClientSpecialities entity)
		{
			this.SendPropertyChanging();
			entity.Specialities = this;
		}
		
		private void detach_ClientSpecialities(ClientSpecialities entity)
		{
			this.SendPropertyChanging();
			entity.Specialities = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientSpecialities")]
	public partial class ClientSpecialities : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClientSpecialityId;
		
		private int _ClientId;
		
		private int _SpecialityId;
		
		private string _Advertisement;
		
		private bool _Active;
		
		private EntityRef<Clients> _Clients;
		
		private EntityRef<Specialities> _Specialities;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClientSpecialityIdChanging(int value);
    partial void OnClientSpecialityIdChanged();
    partial void OnClientIdChanging(int value);
    partial void OnClientIdChanged();
    partial void OnSpecialityIdChanging(int value);
    partial void OnSpecialityIdChanged();
    partial void OnAdvertisementChanging(string value);
    partial void OnAdvertisementChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public ClientSpecialities()
		{
			this._Clients = default(EntityRef<Clients>);
			this._Specialities = default(EntityRef<Specialities>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientSpecialityId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ClientSpecialityId
		{
			get
			{
				return this._ClientSpecialityId;
			}
			set
			{
				if ((this._ClientSpecialityId != value))
				{
					this.OnClientSpecialityIdChanging(value);
					this.SendPropertyChanging();
					this._ClientSpecialityId = value;
					this.SendPropertyChanged("ClientSpecialityId");
					this.OnClientSpecialityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int NOT NULL")]
		public int ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					if (this._Clients.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIdChanging(value);
					this.SendPropertyChanging();
					this._ClientId = value;
					this.SendPropertyChanged("ClientId");
					this.OnClientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityId", DbType="Int NOT NULL")]
		public int SpecialityId
		{
			get
			{
				return this._SpecialityId;
			}
			set
			{
				if ((this._SpecialityId != value))
				{
					if (this._Specialities.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecialityIdChanging(value);
					this.SendPropertyChanging();
					this._SpecialityId = value;
					this.SendPropertyChanged("SpecialityId");
					this.OnSpecialityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Advertisement", DbType="NVarChar(MAX)")]
		public string Advertisement
		{
			get
			{
				return this._Advertisement;
			}
			set
			{
				if ((this._Advertisement != value))
				{
					this.OnAdvertisementChanging(value);
					this.SendPropertyChanging();
					this._Advertisement = value;
					this.SendPropertyChanged("Advertisement");
					this.OnAdvertisementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_ClientSpecialities", Storage="_Clients", ThisKey="ClientId", OtherKey="ClientId", IsForeignKey=true)]
		public Clients Clients
		{
			get
			{
				return this._Clients.Entity;
			}
			set
			{
				Clients previousValue = this._Clients.Entity;
				if (((previousValue != value) 
							|| (this._Clients.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clients.Entity = null;
						previousValue.ClientSpecialities.Remove(this);
					}
					this._Clients.Entity = value;
					if ((value != null))
					{
						value.ClientSpecialities.Add(this);
						this._ClientId = value.ClientId;
					}
					else
					{
						this._ClientId = default(int);
					}
					this.SendPropertyChanged("Clients");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Specialities_ClientSpecialities", Storage="_Specialities", ThisKey="SpecialityId", OtherKey="SpecialityId", IsForeignKey=true)]
		public Specialities Specialities
		{
			get
			{
				return this._Specialities.Entity;
			}
			set
			{
				Specialities previousValue = this._Specialities.Entity;
				if (((previousValue != value) 
							|| (this._Specialities.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Specialities.Entity = null;
						previousValue.ClientSpecialities.Remove(this);
					}
					this._Specialities.Entity = value;
					if ((value != null))
					{
						value.ClientSpecialities.Add(this);
						this._SpecialityId = value.SpecialityId;
					}
					else
					{
						this._SpecialityId = default(int);
					}
					this.SendPropertyChanged("Specialities");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class roc_spGetSpecialitiesResult
	{
		
		private int _SpecialityId;
		
		private string _Description;
		
		private bool _Active;
		
		public roc_spGetSpecialitiesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityId", DbType="Int NOT NULL")]
		public int SpecialityId
		{
			get
			{
				return this._SpecialityId;
			}
			set
			{
				if ((this._SpecialityId != value))
				{
					this._SpecialityId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
	}
	
	public partial class roc_spGetStatesByCountryResult
	{
		
		private int _StateId;
		
		private byte _CountryId;
		
		private string _StateName;
		
		private bool _Active;
		
		public roc_spGetStatesByCountryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="Int NOT NULL")]
		public int StateId
		{
			get
			{
				return this._StateId;
			}
			set
			{
				if ((this._StateId != value))
				{
					this._StateId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="TinyInt NOT NULL")]
		public byte CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this._CountryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this._StateName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
	}
	
	public partial class roc_spGetProductsResult
	{
		
		private System.Nullable<int> _TOTAL;
		
		private int _ProductId;
		
		private string _ProductName;
		
		private System.Nullable<long> _RowNumber;
		
		public roc_spGetProductsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Int")]
		public System.Nullable<int> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this._ProductId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this._ProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNumber", DbType="BigInt")]
		public System.Nullable<long> RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
	}
	
	public partial class roc_spGetProductsByLetterResult
	{
		
		private System.Nullable<int> _TOTAL;
		
		private int _ProductId;
		
		private string _ProductName;
		
		private System.Nullable<long> _RowNumber;
		
		public roc_spGetProductsByLetterResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Int")]
		public System.Nullable<int> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this._ProductId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this._ProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNumber", DbType="BigInt")]
		public System.Nullable<long> RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
	}
	
	public partial class roc_spGetProductsByEditionByTextResult
	{
		
		private System.Nullable<int> _TOTAL;
		
		private int _ProductId;
		
		private string _ProductName;
		
		private System.Nullable<long> _RowNumber;
		
		public roc_spGetProductsByEditionByTextResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Int")]
		public System.Nullable<int> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this._ProductId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this._ProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNumber", DbType="BigInt")]
		public System.Nullable<long> RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
	}
	
	public partial class roc_spGetClientsByBrandResult
	{
		
		private int _ClientId;
		
		private string _CompanyName;
		
		private string _ShortName;
		
		private byte _ClientTypeId;
		
		public roc_spGetClientsByBrandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int NOT NULL")]
		public int ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					this._ClientId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(MAX)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this._ShortName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientTypeId", DbType="TinyInt NOT NULL")]
		public byte ClientTypeId
		{
			get
			{
				return this._ClientTypeId;
			}
			set
			{
				if ((this._ClientTypeId != value))
				{
					this._ClientTypeId = value;
				}
			}
		}
	}
	
	public partial class roc_spGetProductResult
	{
		
		private System.Nullable<int> _TOTAL;
		
		private int _ProductId;
		
		private string _ProductName;
		
		private System.Nullable<long> _RowNumber;
		
		public roc_spGetProductResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Int")]
		public System.Nullable<int> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this._ProductId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this._ProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNumber", DbType="BigInt")]
		public System.Nullable<long> RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
	}
	
	public partial class roc_spGetSpecialityResult
	{
		
		private int _SpecialityId;
		
		private string _Description;
		
		private bool _Active;
		
		public roc_spGetSpecialityResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityId", DbType="Int NOT NULL")]
		public int SpecialityId
		{
			get
			{
				return this._SpecialityId;
			}
			set
			{
				if ((this._SpecialityId != value))
				{
					this._SpecialityId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
	}
	
	public partial class roc_spGetProductsByClientResult
	{
		
		private System.Nullable<int> _ClientProductId;
		
		private System.Nullable<int> _ClientId;
		
		private string _Page;
		
		private System.Nullable<bool> _ProductClientActive;
		
		private System.Nullable<int> _ProductId;
		
		private string _ProductName;
		
		private System.Nullable<bool> _ProductActive;
		
		private System.Nullable<int> _SubProductId;
		
		private string _SubProductName;
		
		private System.Nullable<bool> _SubProductActive;
		
		public roc_spGetProductsByClientResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientProductId", DbType="Int")]
		public System.Nullable<int> ClientProductId
		{
			get
			{
				return this._ClientProductId;
			}
			set
			{
				if ((this._ClientProductId != value))
				{
					this._ClientProductId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int")]
		public System.Nullable<int> ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					this._ClientId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page", DbType="VarChar(50)")]
		public string Page
		{
			get
			{
				return this._Page;
			}
			set
			{
				if ((this._Page != value))
				{
					this._Page = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductClientActive", DbType="Bit")]
		public System.Nullable<bool> ProductClientActive
		{
			get
			{
				return this._ProductClientActive;
			}
			set
			{
				if ((this._ProductClientActive != value))
				{
					this._ProductClientActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int")]
		public System.Nullable<int> ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this._ProductId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(MAX)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this._ProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductActive", DbType="Bit")]
		public System.Nullable<bool> ProductActive
		{
			get
			{
				return this._ProductActive;
			}
			set
			{
				if ((this._ProductActive != value))
				{
					this._ProductActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubProductId", DbType="Int")]
		public System.Nullable<int> SubProductId
		{
			get
			{
				return this._SubProductId;
			}
			set
			{
				if ((this._SubProductId != value))
				{
					this._SubProductId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubProductName", DbType="NVarChar(MAX)")]
		public string SubProductName
		{
			get
			{
				return this._SubProductName;
			}
			set
			{
				if ((this._SubProductName != value))
				{
					this._SubProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubProductActive", DbType="Bit")]
		public System.Nullable<bool> SubProductActive
		{
			get
			{
				return this._SubProductActive;
			}
			set
			{
				if ((this._SubProductActive != value))
				{
					this._SubProductActive = value;
				}
			}
		}
	}
	
	public partial class roc_spGetBrandsResult
	{
		
		private System.Nullable<int> _TOTAL;
		
		private int _BrandId;
		
		private string _BrandName;
		
		private string _Logo;
		
		private string _BaseUrl;
		
		private System.Nullable<long> _RowNumber;
		
		public roc_spGetBrandsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Int")]
		public System.Nullable<int> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandId", DbType="Int NOT NULL")]
		public int BrandId
		{
			get
			{
				return this._BrandId;
			}
			set
			{
				if ((this._BrandId != value))
				{
					this._BrandId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this._BrandName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="VarChar(60)")]
		public string Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this._Logo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseUrl", DbType="VarChar(255)")]
		public string BaseUrl
		{
			get
			{
				return this._BaseUrl;
			}
			set
			{
				if ((this._BaseUrl != value))
				{
					this._BaseUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNumber", DbType="BigInt")]
		public System.Nullable<long> RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
	}
	
	public partial class roc_spGetBrandsByLetterResult
	{
		
		private System.Nullable<int> _TOTAL;
		
		private int _BrandId;
		
		private string _BrandName;
		
		private string _Logo;
		
		private string _BaseUrl;
		
		private System.Nullable<long> _RowNumber;
		
		public roc_spGetBrandsByLetterResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Int")]
		public System.Nullable<int> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandId", DbType="Int NOT NULL")]
		public int BrandId
		{
			get
			{
				return this._BrandId;
			}
			set
			{
				if ((this._BrandId != value))
				{
					this._BrandId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this._BrandName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="VarChar(60)")]
		public string Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this._Logo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseUrl", DbType="VarChar(255)")]
		public string BaseUrl
		{
			get
			{
				return this._BaseUrl;
			}
			set
			{
				if ((this._BaseUrl != value))
				{
					this._BaseUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNumber", DbType="BigInt")]
		public System.Nullable<long> RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
	}
	
	public partial class roc_spGetClientsWithoutSubProductResult
	{
		
		private System.Nullable<int> _TOTAL;
		
		private int _ClientId;
		
		private byte _ClientTypeId;
		
		private string _CompanyName;
		
		private System.Nullable<long> _RowNumber;
		
		public roc_spGetClientsWithoutSubProductResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Int")]
		public System.Nullable<int> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int NOT NULL")]
		public int ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					this._ClientId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientTypeId", DbType="TinyInt NOT NULL")]
		public byte ClientTypeId
		{
			get
			{
				return this._ClientTypeId;
			}
			set
			{
				if ((this._ClientTypeId != value))
				{
					this._ClientTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNumber", DbType="BigInt")]
		public System.Nullable<long> RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
	}
	
	public partial class roc_spGetProductsByTextResult
	{
		
		private System.Nullable<int> _TOTAL;
		
		private System.Nullable<int> _ProductId;
		
		private System.Nullable<int> _SubProductId;
		
		private string _ProductName;
		
		private string _Description;
		
		private System.Nullable<long> _RowNumber;
		
		public roc_spGetProductsByTextResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Int")]
		public System.Nullable<int> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int")]
		public System.Nullable<int> ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this._ProductId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubProductId", DbType="Int")]
		public System.Nullable<int> SubProductId
		{
			get
			{
				return this._SubProductId;
			}
			set
			{
				if ((this._SubProductId != value))
				{
					this._SubProductId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(MAX)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this._ProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNumber", DbType="BigInt")]
		public System.Nullable<long> RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
	}
	
	public partial class roc_spGetSubProductByProductResult
	{
		
		private System.Nullable<int> _TOTAL;
		
		private int _SubProductId;
		
		private string _Description;
		
		private int _ClientId;
		
		private byte _ClientTypeId;
		
		private string _CompanyName;
		
		private System.Nullable<long> _RowNumber;
		
		public roc_spGetSubProductByProductResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Int")]
		public System.Nullable<int> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubProductId", DbType="Int NOT NULL")]
		public int SubProductId
		{
			get
			{
				return this._SubProductId;
			}
			set
			{
				if ((this._SubProductId != value))
				{
					this._SubProductId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int NOT NULL")]
		public int ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					this._ClientId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientTypeId", DbType="TinyInt NOT NULL")]
		public byte ClientTypeId
		{
			get
			{
				return this._ClientTypeId;
			}
			set
			{
				if ((this._ClientTypeId != value))
				{
					this._ClientTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNumber", DbType="BigInt")]
		public System.Nullable<long> RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
	}
	
	public partial class roc_spGetClientsBySpecByFullTextResult
	{
		
		private System.Nullable<int> _TOTAL;
		
		private int _ClientId;
		
		private int _EditionId;
		
		private System.Nullable<int> _ClientIdParent;
		
		private int _ClientCode;
		
		private string _CompanyName;
		
		private string _ShortName;
		
		private string _Address;
		
		private string _Suburb;
		
		private string _PostalCode;
		
		private string _City;
		
		private System.Nullable<int> _StateId;
		
		private string _Email;
		
		private string _Web;
		
		private byte _ClientTypeId;
		
		private string _Image;
		
		private string _Products;
		
		private System.Nullable<byte> _CountryId;
		
		private string _Page;
		
		private bool _Active;
		
		private System.Nullable<long> _RowNumber;
		
		public roc_spGetClientsBySpecByFullTextResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Int")]
		public System.Nullable<int> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int NOT NULL")]
		public int ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					this._ClientId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditionId", DbType="Int NOT NULL")]
		public int EditionId
		{
			get
			{
				return this._EditionId;
			}
			set
			{
				if ((this._EditionId != value))
				{
					this._EditionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientIdParent", DbType="Int")]
		public System.Nullable<int> ClientIdParent
		{
			get
			{
				return this._ClientIdParent;
			}
			set
			{
				if ((this._ClientIdParent != value))
				{
					this._ClientIdParent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientCode", DbType="Int NOT NULL")]
		public int ClientCode
		{
			get
			{
				return this._ClientCode;
			}
			set
			{
				if ((this._ClientCode != value))
				{
					this._ClientCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(MAX)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this._ShortName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suburb", DbType="NVarChar(MAX)")]
		public string Suburb
		{
			get
			{
				return this._Suburb;
			}
			set
			{
				if ((this._Suburb != value))
				{
					this._Suburb = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(MAX)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this._PostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(MAX)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="Int")]
		public System.Nullable<int> StateId
		{
			get
			{
				return this._StateId;
			}
			set
			{
				if ((this._StateId != value))
				{
					this._StateId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Web", DbType="NVarChar(MAX)")]
		public string Web
		{
			get
			{
				return this._Web;
			}
			set
			{
				if ((this._Web != value))
				{
					this._Web = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientTypeId", DbType="TinyInt NOT NULL")]
		public byte ClientTypeId
		{
			get
			{
				return this._ClientTypeId;
			}
			set
			{
				if ((this._ClientTypeId != value))
				{
					this._ClientTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(MAX)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this._Image = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products", DbType="NVarChar(MAX)")]
		public string Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				if ((this._Products != value))
				{
					this._Products = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="TinyInt")]
		public System.Nullable<byte> CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this._CountryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page", DbType="VarChar(100)")]
		public string Page
		{
			get
			{
				return this._Page;
			}
			set
			{
				if ((this._Page != value))
				{
					this._Page = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNumber", DbType="BigInt")]
		public System.Nullable<long> RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
	}
	
	public partial class roc_spGetBrandsByFullTextResult
	{
		
		private System.Nullable<int> _TOTAL;
		
		private int _BrandId;
		
		private string _BrandName;
		
		private string _Logo;
		
		private string _BaseUrl;
		
		private System.Nullable<long> _RowNumber;
		
		public roc_spGetBrandsByFullTextResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Int")]
		public System.Nullable<int> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandId", DbType="Int NOT NULL")]
		public int BrandId
		{
			get
			{
				return this._BrandId;
			}
			set
			{
				if ((this._BrandId != value))
				{
					this._BrandId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this._BrandName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="VarChar(60)")]
		public string Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this._Logo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseUrl", DbType="VarChar(255)")]
		public string BaseUrl
		{
			get
			{
				return this._BaseUrl;
			}
			set
			{
				if ((this._BaseUrl != value))
				{
					this._BaseUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNumber", DbType="BigInt")]
		public System.Nullable<long> RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
	}
	
	public partial class roc_spGetProductsByFullTextResult
	{
		
		private System.Nullable<int> _TOTAL;
		
		private System.Nullable<int> _ProductId;
		
		private System.Nullable<int> _SubProductId;
		
		private string _ProductName;
		
		private string _Description;
		
		private System.Nullable<long> _RowNumber;
		
		public roc_spGetProductsByFullTextResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Int")]
		public System.Nullable<int> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int")]
		public System.Nullable<int> ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this._ProductId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubProductId", DbType="Int")]
		public System.Nullable<int> SubProductId
		{
			get
			{
				return this._SubProductId;
			}
			set
			{
				if ((this._SubProductId != value))
				{
					this._SubProductId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(MAX)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this._ProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNumber", DbType="BigInt")]
		public System.Nullable<long> RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
	}
	
	public partial class roc_spGetClientsAndSpecialityByTextResult
	{
		
		private System.Nullable<int> _TOTAL;
		
		private int _ClientId;
		
		private string _CompanyName;
		
		private byte _ClientTypeId;
		
		private int _SpecialityId;
		
		private string _SpecialityDescription;
		
		private System.Nullable<long> _RowNumber;
		
		public roc_spGetClientsAndSpecialityByTextResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Int")]
		public System.Nullable<int> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int NOT NULL")]
		public int ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					this._ClientId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientTypeId", DbType="TinyInt NOT NULL")]
		public byte ClientTypeId
		{
			get
			{
				return this._ClientTypeId;
			}
			set
			{
				if ((this._ClientTypeId != value))
				{
					this._ClientTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityId", DbType="Int NOT NULL")]
		public int SpecialityId
		{
			get
			{
				return this._SpecialityId;
			}
			set
			{
				if ((this._SpecialityId != value))
				{
					this._SpecialityId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityDescription", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string SpecialityDescription
		{
			get
			{
				return this._SpecialityDescription;
			}
			set
			{
				if ((this._SpecialityDescription != value))
				{
					this._SpecialityDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNumber", DbType="BigInt")]
		public System.Nullable<long> RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
	}
	
	public partial class roc_spGetInternationalResult
	{
		
		private System.Nullable<int> _TOTAL;
		
		private int _IntClientId;
		
		private string _CompanyName;
		
		private System.Nullable<long> _RowNumber;
		
		public roc_spGetInternationalResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Int")]
		public System.Nullable<int> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntClientId", DbType="Int NOT NULL")]
		public int IntClientId
		{
			get
			{
				return this._IntClientId;
			}
			set
			{
				if ((this._IntClientId != value))
				{
					this._IntClientId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNumber", DbType="BigInt")]
		public System.Nullable<long> RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
	}
	
	public partial class roc_spGetInternationalByFullTextResult
	{
		
		private System.Nullable<int> _TOTAL;
		
		private int _IntClientId;
		
		private string _CompanyName;
		
		private System.Nullable<long> _RowNumber;
		
		public roc_spGetInternationalByFullTextResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Int")]
		public System.Nullable<int> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntClientId", DbType="Int NOT NULL")]
		public int IntClientId
		{
			get
			{
				return this._IntClientId;
			}
			set
			{
				if ((this._IntClientId != value))
				{
					this._IntClientId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNumber", DbType="BigInt")]
		public System.Nullable<long> RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
	}
	
	public partial class roc_spGetInternationalByLetterResult
	{
		
		private System.Nullable<int> _TOTAL;
		
		private int _IntClientId;
		
		private string _CompanyName;
		
		private System.Nullable<long> _RowNumber;
		
		public roc_spGetInternationalByLetterResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Int")]
		public System.Nullable<int> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntClientId", DbType="Int NOT NULL")]
		public int IntClientId
		{
			get
			{
				return this._IntClientId;
			}
			set
			{
				if ((this._IntClientId != value))
				{
					this._IntClientId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNumber", DbType="BigInt")]
		public System.Nullable<long> RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
	}
	
	public partial class roc_spGetInternationalByTextResult
	{
		
		private System.Nullable<int> _TOTAL;
		
		private int _IntClientId;
		
		private string _CompanyName;
		
		private System.Nullable<long> _RowNumber;
		
		public roc_spGetInternationalByTextResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Int")]
		public System.Nullable<int> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntClientId", DbType="Int NOT NULL")]
		public int IntClientId
		{
			get
			{
				return this._IntClientId;
			}
			set
			{
				if ((this._IntClientId != value))
				{
					this._IntClientId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNumber", DbType="BigInt")]
		public System.Nullable<long> RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
	}
	
	public partial class roc_spGetInternationalCategoriesByParentIdResult
	{
		
		private byte _CategoryId;
		
		private System.Nullable<byte> _ParentId;
		
		private string _Description;
		
		private bool _Active;
		
		public roc_spGetInternationalCategoriesByParentIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="TinyInt NOT NULL")]
		public byte CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this._CategoryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="TinyInt")]
		public System.Nullable<byte> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this._ParentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
	}
	
	public partial class roc_spGetInternationalProductsByParentIdResult
	{
		
		private System.Nullable<int> _ParentId;
		
		private int _IntProductId;
		
		private string _Description;
		
		private byte _CategoryId;
		
		public roc_spGetInternationalProductsByParentIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
		public System.Nullable<int> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this._ParentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntProductId", DbType="Int NOT NULL")]
		public int IntProductId
		{
			get
			{
				return this._IntProductId;
			}
			set
			{
				if ((this._IntProductId != value))
				{
					this._IntProductId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="TinyInt NOT NULL")]
		public byte CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this._CategoryId = value;
				}
			}
		}
	}
	
	public partial class roc_spGetPhonesByInternationalIdResult
	{
		
		private int _IntClientPhoneId;
		
		private byte _PhoneTypeId;
		
		private int _IntClientId;
		
		private string _Number;
		
		private string _Lada;
		
		private bool _Active;
		
		private string _Description;
		
		public roc_spGetPhonesByInternationalIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntClientPhoneId", DbType="Int NOT NULL")]
		public int IntClientPhoneId
		{
			get
			{
				return this._IntClientPhoneId;
			}
			set
			{
				if ((this._IntClientPhoneId != value))
				{
					this._IntClientPhoneId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneTypeId", DbType="TinyInt NOT NULL")]
		public byte PhoneTypeId
		{
			get
			{
				return this._PhoneTypeId;
			}
			set
			{
				if ((this._PhoneTypeId != value))
				{
					this._PhoneTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntClientId", DbType="Int NOT NULL")]
		public int IntClientId
		{
			get
			{
				return this._IntClientId;
			}
			set
			{
				if ((this._IntClientId != value))
				{
					this._IntClientId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this._Number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lada", DbType="VarChar(10)")]
		public string Lada
		{
			get
			{
				return this._Lada;
			}
			set
			{
				if ((this._Lada != value))
				{
					this._Lada = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	public partial class roc_spGetAddressByInternationalIdResult
	{
		
		private int _IntAddressesId;
		
		private string _Address;
		
		private string _ZipCode;
		
		private string _City;
		
		private string _State;
		
		private byte _CountryId;
		
		private string _Email;
		
		private string _Web;
		
		private bool _Active;
		
		private string _CountryName;
		
		public roc_spGetAddressByInternationalIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntAddressesId", DbType="Int NOT NULL")]
		public int IntAddressesId
		{
			get
			{
				return this._IntAddressesId;
			}
			set
			{
				if ((this._IntAddressesId != value))
				{
					this._IntAddressesId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="VarChar(30)")]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this._ZipCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(50)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="TinyInt NOT NULL")]
		public byte CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this._CountryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(200)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Web", DbType="VarChar(200)")]
		public string Web
		{
			get
			{
				return this._Web;
			}
			set
			{
				if ((this._Web != value))
				{
					this._Web = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this._CountryName = value;
				}
			}
		}
	}
	
	public partial class roc_spGetInternationalSubcategoriesByClientIdResult
	{
		
		private byte _CategoryId;
		
		private System.Nullable<byte> _ParentId;
		
		private string _Description;
		
		private bool _Active;
		
		public roc_spGetInternationalSubcategoriesByClientIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="TinyInt NOT NULL")]
		public byte CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this._CategoryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="TinyInt")]
		public System.Nullable<byte> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this._ParentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
	}
	
	public partial class roc_spGetCategoryByIdResult
	{
		
		private byte _CategoryId;
		
		private System.Nullable<byte> _ParentId;
		
		private string _Description;
		
		private bool _Active;
		
		public roc_spGetCategoryByIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="TinyInt NOT NULL")]
		public byte CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this._CategoryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="TinyInt")]
		public System.Nullable<byte> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this._ParentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
	}
	
	public partial class roc_spGetInternationalCategoriesByClientIdResult
	{
		
		private byte _CategoryId;
		
		private System.Nullable<byte> _ParentId;
		
		private string _Description;
		
		private bool _Active;
		
		public roc_spGetInternationalCategoriesByClientIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="TinyInt NOT NULL")]
		public byte CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this._CategoryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="TinyInt")]
		public System.Nullable<byte> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this._ParentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
	}
	
	public partial class roc_spGetInternationalCategoriesResult
	{
		
		private byte _CategoryId;
		
		private System.Nullable<byte> _ParentId;
		
		private string _Description;
		
		private bool _Active;
		
		public roc_spGetInternationalCategoriesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="TinyInt NOT NULL")]
		public byte CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this._CategoryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="TinyInt")]
		public System.Nullable<byte> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this._ParentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
	}
	
	public partial class roc_spGetInternationalProductsByClientAndCategoryResult
	{
		
		private System.Nullable<int> _ParentId;
		
		private int _IntProductId;
		
		private string _Description;
		
		private byte _CategoryId;
		
		public roc_spGetInternationalProductsByClientAndCategoryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
		public System.Nullable<int> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this._ParentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntProductId", DbType="Int NOT NULL")]
		public int IntProductId
		{
			get
			{
				return this._IntProductId;
			}
			set
			{
				if ((this._IntProductId != value))
				{
					this._IntProductId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="TinyInt NOT NULL")]
		public byte CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this._CategoryId = value;
				}
			}
		}
	}
	
	public partial class roc_spGetIntClientResult
	{
		
		private int _IntClientId;
		
		private string _CompanyName;
		
		private string _ShortName;
		
		private bool _Active;
		
		public roc_spGetIntClientResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntClientId", DbType="Int NOT NULL")]
		public int IntClientId
		{
			get
			{
				return this._IntClientId;
			}
			set
			{
				if ((this._IntClientId != value))
				{
					this._IntClientId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(MAX)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this._ShortName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
	}
	
	public partial class roc_spGetDrugsByClientIdResult
	{
		
		private int _DrugId;
		
		private int _ClientId;
		
		private string _DrugName;
		
		private string _ActiveSubstance;
		
		private string _PharmaceuticForm;
		
		private string _Presentation;
		
		private bool _Active;
		
		public roc_spGetDrugsByClientIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugId", DbType="Int NOT NULL")]
		public int DrugId
		{
			get
			{
				return this._DrugId;
			}
			set
			{
				if ((this._DrugId != value))
				{
					this._DrugId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int NOT NULL")]
		public int ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					this._ClientId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugName", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string DrugName
		{
			get
			{
				return this._DrugName;
			}
			set
			{
				if ((this._DrugName != value))
				{
					this._DrugName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveSubstance", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ActiveSubstance
		{
			get
			{
				return this._ActiveSubstance;
			}
			set
			{
				if ((this._ActiveSubstance != value))
				{
					this._ActiveSubstance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmaceuticForm", DbType="NVarChar(MAX)")]
		public string PharmaceuticForm
		{
			get
			{
				return this._PharmaceuticForm;
			}
			set
			{
				if ((this._PharmaceuticForm != value))
				{
					this._PharmaceuticForm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Presentation", DbType="NVarChar(MAX)")]
		public string Presentation
		{
			get
			{
				return this._Presentation;
			}
			set
			{
				if ((this._Presentation != value))
				{
					this._Presentation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
	}
	
	public partial class plm_spGetBrandsByClientResult
	{
		
		private int _BrandId;
		
		private string _BrandName;
		
		private string _Logo;
		
		private bool _Active;
		
		private string _BaseUrl;
		
		private int _ClientId;
		
		private int _EditionId;
		
		public plm_spGetBrandsByClientResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandId", DbType="Int NOT NULL")]
		public int BrandId
		{
			get
			{
				return this._BrandId;
			}
			set
			{
				if ((this._BrandId != value))
				{
					this._BrandId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this._BrandName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="VarChar(60)")]
		public string Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this._Logo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseUrl", DbType="VarChar(255)")]
		public string BaseUrl
		{
			get
			{
				return this._BaseUrl;
			}
			set
			{
				if ((this._BaseUrl != value))
				{
					this._BaseUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int NOT NULL")]
		public int ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					this._ClientId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditionId", DbType="Int NOT NULL")]
		public int EditionId
		{
			get
			{
				return this._EditionId;
			}
			set
			{
				if ((this._EditionId != value))
				{
					this._EditionId = value;
				}
			}
		}
	}
	
	public partial class plm_spGetDrugsResult
	{
		
		private int _DrugId;
		
		private string _DrugName;
		
		private string _PharmaceuticForm;
		
		private string _ActiveSubstance;
		
		private string _Presentation;
		
		private int _ClientId;
		
		private string _CompanyName;
		
		public plm_spGetDrugsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugId", DbType="Int NOT NULL")]
		public int DrugId
		{
			get
			{
				return this._DrugId;
			}
			set
			{
				if ((this._DrugId != value))
				{
					this._DrugId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugName", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string DrugName
		{
			get
			{
				return this._DrugName;
			}
			set
			{
				if ((this._DrugName != value))
				{
					this._DrugName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmaceuticForm", DbType="NVarChar(MAX)")]
		public string PharmaceuticForm
		{
			get
			{
				return this._PharmaceuticForm;
			}
			set
			{
				if ((this._PharmaceuticForm != value))
				{
					this._PharmaceuticForm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveSubstance", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ActiveSubstance
		{
			get
			{
				return this._ActiveSubstance;
			}
			set
			{
				if ((this._ActiveSubstance != value))
				{
					this._ActiveSubstance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Presentation", DbType="NVarChar(MAX)")]
		public string Presentation
		{
			get
			{
				return this._Presentation;
			}
			set
			{
				if ((this._Presentation != value))
				{
					this._Presentation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int NOT NULL")]
		public int ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					this._ClientId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
	}
	
	public partial class roc_spGetClientsByLetterResult
	{
		
		private System.Nullable<int> _TOTAL;
		
		private int _ClientId;
		
		private int _EditionId;
		
		private System.Nullable<int> _ClientIdParent;
		
		private string _ClientCode;
		
		private string _CompanyName;
		
		private string _ShortName;
		
		private string _Address;
		
		private string _Suburb;
		
		private string _PostalCode;
		
		private string _City;
		
		private System.Nullable<int> _StateId;
		
		private string _Email;
		
		private string _Web;
		
		private byte _ClientTypeId;
		
		private string _Image;
		
		private string _Products;
		
		private System.Nullable<byte> _CountryId;
		
		private string _Page;
		
		private string _Description;
		
		private bool _Active;
		
		private System.Nullable<long> _RowNumber;
		
		public roc_spGetClientsByLetterResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Int")]
		public System.Nullable<int> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int NOT NULL")]
		public int ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					this._ClientId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditionId", DbType="Int NOT NULL")]
		public int EditionId
		{
			get
			{
				return this._EditionId;
			}
			set
			{
				if ((this._EditionId != value))
				{
					this._EditionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientIdParent", DbType="Int")]
		public System.Nullable<int> ClientIdParent
		{
			get
			{
				return this._ClientIdParent;
			}
			set
			{
				if ((this._ClientIdParent != value))
				{
					this._ClientIdParent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientCode", DbType="VarChar(10)")]
		public string ClientCode
		{
			get
			{
				return this._ClientCode;
			}
			set
			{
				if ((this._ClientCode != value))
				{
					this._ClientCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(MAX)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this._ShortName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suburb", DbType="NVarChar(MAX)")]
		public string Suburb
		{
			get
			{
				return this._Suburb;
			}
			set
			{
				if ((this._Suburb != value))
				{
					this._Suburb = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(MAX)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this._PostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(MAX)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="Int")]
		public System.Nullable<int> StateId
		{
			get
			{
				return this._StateId;
			}
			set
			{
				if ((this._StateId != value))
				{
					this._StateId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Web", DbType="NVarChar(MAX)")]
		public string Web
		{
			get
			{
				return this._Web;
			}
			set
			{
				if ((this._Web != value))
				{
					this._Web = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientTypeId", DbType="TinyInt NOT NULL")]
		public byte ClientTypeId
		{
			get
			{
				return this._ClientTypeId;
			}
			set
			{
				if ((this._ClientTypeId != value))
				{
					this._ClientTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(MAX)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this._Image = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products", DbType="NVarChar(MAX)")]
		public string Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				if ((this._Products != value))
				{
					this._Products = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="TinyInt")]
		public System.Nullable<byte> CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this._CountryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page", DbType="VarChar(100)")]
		public string Page
		{
			get
			{
				return this._Page;
			}
			set
			{
				if ((this._Page != value))
				{
					this._Page = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNumber", DbType="BigInt")]
		public System.Nullable<long> RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
	}
	
	public partial class roc_spGetClientsByTypeResult
	{
		
		private System.Nullable<int> _TOTAL;
		
		private int _ClientId;
		
		private int _EditionId;
		
		private System.Nullable<int> _ClientIdParent;
		
		private string _ClientCode;
		
		private string _CompanyName;
		
		private string _ShortName;
		
		private string _Address;
		
		private string _Suburb;
		
		private string _PostalCode;
		
		private string _City;
		
		private System.Nullable<int> _StateId;
		
		private string _Email;
		
		private string _Web;
		
		private byte _ClientTypeId;
		
		private string _Image;
		
		private string _Products;
		
		private System.Nullable<byte> _CountryId;
		
		private string _Page;
		
		private string _Description;
		
		private bool _Active;
		
		private System.Nullable<long> _RowNumber;
		
		public roc_spGetClientsByTypeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Int")]
		public System.Nullable<int> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int NOT NULL")]
		public int ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					this._ClientId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditionId", DbType="Int NOT NULL")]
		public int EditionId
		{
			get
			{
				return this._EditionId;
			}
			set
			{
				if ((this._EditionId != value))
				{
					this._EditionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientIdParent", DbType="Int")]
		public System.Nullable<int> ClientIdParent
		{
			get
			{
				return this._ClientIdParent;
			}
			set
			{
				if ((this._ClientIdParent != value))
				{
					this._ClientIdParent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientCode", DbType="VarChar(10)")]
		public string ClientCode
		{
			get
			{
				return this._ClientCode;
			}
			set
			{
				if ((this._ClientCode != value))
				{
					this._ClientCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(MAX)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this._ShortName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suburb", DbType="NVarChar(MAX)")]
		public string Suburb
		{
			get
			{
				return this._Suburb;
			}
			set
			{
				if ((this._Suburb != value))
				{
					this._Suburb = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(MAX)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this._PostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(MAX)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="Int")]
		public System.Nullable<int> StateId
		{
			get
			{
				return this._StateId;
			}
			set
			{
				if ((this._StateId != value))
				{
					this._StateId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Web", DbType="NVarChar(MAX)")]
		public string Web
		{
			get
			{
				return this._Web;
			}
			set
			{
				if ((this._Web != value))
				{
					this._Web = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientTypeId", DbType="TinyInt NOT NULL")]
		public byte ClientTypeId
		{
			get
			{
				return this._ClientTypeId;
			}
			set
			{
				if ((this._ClientTypeId != value))
				{
					this._ClientTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(MAX)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this._Image = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products", DbType="NVarChar(MAX)")]
		public string Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				if ((this._Products != value))
				{
					this._Products = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="TinyInt")]
		public System.Nullable<byte> CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this._CountryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page", DbType="VarChar(100)")]
		public string Page
		{
			get
			{
				return this._Page;
			}
			set
			{
				if ((this._Page != value))
				{
					this._Page = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNumber", DbType="BigInt")]
		public System.Nullable<long> RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
	}
	
	public partial class roc_spGetClientsByTextResult
	{
		
		private System.Nullable<int> _TOTAL;
		
		private int _ClientId;
		
		private int _EditionId;
		
		private System.Nullable<int> _ClientIdParent;
		
		private string _ClientCode;
		
		private string _CompanyName;
		
		private string _ShortName;
		
		private string _Address;
		
		private string _Suburb;
		
		private string _PostalCode;
		
		private string _City;
		
		private System.Nullable<int> _StateId;
		
		private string _Email;
		
		private string _Web;
		
		private byte _ClientTypeId;
		
		private string _Image;
		
		private string _Products;
		
		private System.Nullable<byte> _CountryId;
		
		private string _Page;
		
		private string _Description;
		
		private bool _Active;
		
		private string _StateName;
		
		private System.Nullable<long> _RowNumber;
		
		public roc_spGetClientsByTextResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Int")]
		public System.Nullable<int> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int NOT NULL")]
		public int ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					this._ClientId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditionId", DbType="Int NOT NULL")]
		public int EditionId
		{
			get
			{
				return this._EditionId;
			}
			set
			{
				if ((this._EditionId != value))
				{
					this._EditionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientIdParent", DbType="Int")]
		public System.Nullable<int> ClientIdParent
		{
			get
			{
				return this._ClientIdParent;
			}
			set
			{
				if ((this._ClientIdParent != value))
				{
					this._ClientIdParent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientCode", DbType="VarChar(10)")]
		public string ClientCode
		{
			get
			{
				return this._ClientCode;
			}
			set
			{
				if ((this._ClientCode != value))
				{
					this._ClientCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(MAX)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this._ShortName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suburb", DbType="NVarChar(MAX)")]
		public string Suburb
		{
			get
			{
				return this._Suburb;
			}
			set
			{
				if ((this._Suburb != value))
				{
					this._Suburb = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(MAX)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this._PostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(MAX)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="Int")]
		public System.Nullable<int> StateId
		{
			get
			{
				return this._StateId;
			}
			set
			{
				if ((this._StateId != value))
				{
					this._StateId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Web", DbType="NVarChar(MAX)")]
		public string Web
		{
			get
			{
				return this._Web;
			}
			set
			{
				if ((this._Web != value))
				{
					this._Web = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientTypeId", DbType="TinyInt NOT NULL")]
		public byte ClientTypeId
		{
			get
			{
				return this._ClientTypeId;
			}
			set
			{
				if ((this._ClientTypeId != value))
				{
					this._ClientTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(MAX)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this._Image = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products", DbType="NVarChar(MAX)")]
		public string Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				if ((this._Products != value))
				{
					this._Products = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="TinyInt")]
		public System.Nullable<byte> CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this._CountryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page", DbType="VarChar(100)")]
		public string Page
		{
			get
			{
				return this._Page;
			}
			set
			{
				if ((this._Page != value))
				{
					this._Page = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this._StateName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNumber", DbType="BigInt")]
		public System.Nullable<long> RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
	}
	
	public partial class roc_spGetClientsBySpecialityResult
	{
		
		private System.Nullable<int> _TOTAL;
		
		private int _ClientId;
		
		private int _EditionId;
		
		private System.Nullable<int> _ClientIdParent;
		
		private string _ClientCode;
		
		private string _CompanyName;
		
		private string _ShortName;
		
		private string _Address;
		
		private string _Suburb;
		
		private string _PostalCode;
		
		private string _City;
		
		private System.Nullable<int> _StateId;
		
		private string _Email;
		
		private string _Web;
		
		private byte _ClientTypeId;
		
		private string _Image;
		
		private string _Products;
		
		private System.Nullable<byte> _CountryId;
		
		private string _Page;
		
		private string _Description;
		
		private bool _Active;
		
		private System.Nullable<long> _RowNumber;
		
		public roc_spGetClientsBySpecialityResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Int")]
		public System.Nullable<int> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int NOT NULL")]
		public int ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					this._ClientId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditionId", DbType="Int NOT NULL")]
		public int EditionId
		{
			get
			{
				return this._EditionId;
			}
			set
			{
				if ((this._EditionId != value))
				{
					this._EditionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientIdParent", DbType="Int")]
		public System.Nullable<int> ClientIdParent
		{
			get
			{
				return this._ClientIdParent;
			}
			set
			{
				if ((this._ClientIdParent != value))
				{
					this._ClientIdParent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientCode", DbType="VarChar(10)")]
		public string ClientCode
		{
			get
			{
				return this._ClientCode;
			}
			set
			{
				if ((this._ClientCode != value))
				{
					this._ClientCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(MAX)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this._ShortName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suburb", DbType="NVarChar(MAX)")]
		public string Suburb
		{
			get
			{
				return this._Suburb;
			}
			set
			{
				if ((this._Suburb != value))
				{
					this._Suburb = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(MAX)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this._PostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(MAX)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="Int")]
		public System.Nullable<int> StateId
		{
			get
			{
				return this._StateId;
			}
			set
			{
				if ((this._StateId != value))
				{
					this._StateId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Web", DbType="NVarChar(MAX)")]
		public string Web
		{
			get
			{
				return this._Web;
			}
			set
			{
				if ((this._Web != value))
				{
					this._Web = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientTypeId", DbType="TinyInt NOT NULL")]
		public byte ClientTypeId
		{
			get
			{
				return this._ClientTypeId;
			}
			set
			{
				if ((this._ClientTypeId != value))
				{
					this._ClientTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(MAX)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this._Image = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products", DbType="NVarChar(MAX)")]
		public string Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				if ((this._Products != value))
				{
					this._Products = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="TinyInt")]
		public System.Nullable<byte> CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this._CountryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page", DbType="VarChar(100)")]
		public string Page
		{
			get
			{
				return this._Page;
			}
			set
			{
				if ((this._Page != value))
				{
					this._Page = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNumber", DbType="BigInt")]
		public System.Nullable<long> RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
	}
	
	public partial class roc_spGetClientsBySpecByStateByTextResult
	{
		
		private System.Nullable<int> _TOTAL;
		
		private int _ClientId;
		
		private int _EditionId;
		
		private System.Nullable<int> _ClientIdParent;
		
		private string _ClientCode;
		
		private string _CompanyName;
		
		private string _ShortName;
		
		private string _Address;
		
		private string _Suburb;
		
		private string _PostalCode;
		
		private string _City;
		
		private System.Nullable<int> _StateId;
		
		private string _Email;
		
		private string _Web;
		
		private byte _ClientTypeId;
		
		private string _Image;
		
		private string _Products;
		
		private System.Nullable<byte> _CountryId;
		
		private string _Page;
		
		private string _Description;
		
		private bool _Active;
		
		private System.Nullable<long> _RowNumber;
		
		public roc_spGetClientsBySpecByStateByTextResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Int")]
		public System.Nullable<int> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int NOT NULL")]
		public int ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					this._ClientId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditionId", DbType="Int NOT NULL")]
		public int EditionId
		{
			get
			{
				return this._EditionId;
			}
			set
			{
				if ((this._EditionId != value))
				{
					this._EditionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientIdParent", DbType="Int")]
		public System.Nullable<int> ClientIdParent
		{
			get
			{
				return this._ClientIdParent;
			}
			set
			{
				if ((this._ClientIdParent != value))
				{
					this._ClientIdParent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientCode", DbType="VarChar(10)")]
		public string ClientCode
		{
			get
			{
				return this._ClientCode;
			}
			set
			{
				if ((this._ClientCode != value))
				{
					this._ClientCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(MAX)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this._ShortName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suburb", DbType="NVarChar(MAX)")]
		public string Suburb
		{
			get
			{
				return this._Suburb;
			}
			set
			{
				if ((this._Suburb != value))
				{
					this._Suburb = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(MAX)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this._PostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(MAX)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="Int")]
		public System.Nullable<int> StateId
		{
			get
			{
				return this._StateId;
			}
			set
			{
				if ((this._StateId != value))
				{
					this._StateId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Web", DbType="NVarChar(MAX)")]
		public string Web
		{
			get
			{
				return this._Web;
			}
			set
			{
				if ((this._Web != value))
				{
					this._Web = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientTypeId", DbType="TinyInt NOT NULL")]
		public byte ClientTypeId
		{
			get
			{
				return this._ClientTypeId;
			}
			set
			{
				if ((this._ClientTypeId != value))
				{
					this._ClientTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(MAX)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this._Image = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products", DbType="NVarChar(MAX)")]
		public string Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				if ((this._Products != value))
				{
					this._Products = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="TinyInt")]
		public System.Nullable<byte> CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this._CountryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page", DbType="VarChar(100)")]
		public string Page
		{
			get
			{
				return this._Page;
			}
			set
			{
				if ((this._Page != value))
				{
					this._Page = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNumber", DbType="BigInt")]
		public System.Nullable<long> RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
	}
	
	public partial class roc_spGetClientsBySpecByStateResult
	{
		
		private System.Nullable<int> _TOTAL;
		
		private int _ClientId;
		
		private int _EditionId;
		
		private System.Nullable<int> _ClientIdParent;
		
		private string _ClientCode;
		
		private string _CompanyName;
		
		private string _ShortName;
		
		private string _Address;
		
		private string _Suburb;
		
		private string _PostalCode;
		
		private string _City;
		
		private System.Nullable<int> _StateId;
		
		private string _Email;
		
		private string _Web;
		
		private byte _ClientTypeId;
		
		private string _Image;
		
		private string _Products;
		
		private System.Nullable<byte> _CountryId;
		
		private string _Page;
		
		private string _Description;
		
		private bool _Active;
		
		private System.Nullable<long> _RowNumber;
		
		public roc_spGetClientsBySpecByStateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Int")]
		public System.Nullable<int> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int NOT NULL")]
		public int ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					this._ClientId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditionId", DbType="Int NOT NULL")]
		public int EditionId
		{
			get
			{
				return this._EditionId;
			}
			set
			{
				if ((this._EditionId != value))
				{
					this._EditionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientIdParent", DbType="Int")]
		public System.Nullable<int> ClientIdParent
		{
			get
			{
				return this._ClientIdParent;
			}
			set
			{
				if ((this._ClientIdParent != value))
				{
					this._ClientIdParent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientCode", DbType="VarChar(10)")]
		public string ClientCode
		{
			get
			{
				return this._ClientCode;
			}
			set
			{
				if ((this._ClientCode != value))
				{
					this._ClientCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(MAX)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this._ShortName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suburb", DbType="NVarChar(MAX)")]
		public string Suburb
		{
			get
			{
				return this._Suburb;
			}
			set
			{
				if ((this._Suburb != value))
				{
					this._Suburb = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(MAX)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this._PostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(MAX)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="Int")]
		public System.Nullable<int> StateId
		{
			get
			{
				return this._StateId;
			}
			set
			{
				if ((this._StateId != value))
				{
					this._StateId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Web", DbType="NVarChar(MAX)")]
		public string Web
		{
			get
			{
				return this._Web;
			}
			set
			{
				if ((this._Web != value))
				{
					this._Web = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientTypeId", DbType="TinyInt NOT NULL")]
		public byte ClientTypeId
		{
			get
			{
				return this._ClientTypeId;
			}
			set
			{
				if ((this._ClientTypeId != value))
				{
					this._ClientTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(MAX)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this._Image = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products", DbType="NVarChar(MAX)")]
		public string Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				if ((this._Products != value))
				{
					this._Products = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="TinyInt")]
		public System.Nullable<byte> CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this._CountryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page", DbType="VarChar(100)")]
		public string Page
		{
			get
			{
				return this._Page;
			}
			set
			{
				if ((this._Page != value))
				{
					this._Page = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNumber", DbType="BigInt")]
		public System.Nullable<long> RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
	}
	
	public partial class roc_spGetClientsBySpecByTextResult
	{
		
		private System.Nullable<int> _TOTAL;
		
		private int _ClientId;
		
		private int _EditionId;
		
		private System.Nullable<int> _ClientIdParent;
		
		private string _ClientCode;
		
		private string _CompanyName;
		
		private string _ShortName;
		
		private string _Address;
		
		private string _Suburb;
		
		private string _PostalCode;
		
		private string _City;
		
		private System.Nullable<int> _StateId;
		
		private string _Email;
		
		private string _Web;
		
		private byte _ClientTypeId;
		
		private string _Image;
		
		private string _Products;
		
		private System.Nullable<byte> _CountryId;
		
		private string _Page;
		
		private string _Description;
		
		private bool _Active;
		
		private System.Nullable<long> _RowNumber;
		
		public roc_spGetClientsBySpecByTextResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Int")]
		public System.Nullable<int> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int NOT NULL")]
		public int ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					this._ClientId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditionId", DbType="Int NOT NULL")]
		public int EditionId
		{
			get
			{
				return this._EditionId;
			}
			set
			{
				if ((this._EditionId != value))
				{
					this._EditionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientIdParent", DbType="Int")]
		public System.Nullable<int> ClientIdParent
		{
			get
			{
				return this._ClientIdParent;
			}
			set
			{
				if ((this._ClientIdParent != value))
				{
					this._ClientIdParent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientCode", DbType="VarChar(10)")]
		public string ClientCode
		{
			get
			{
				return this._ClientCode;
			}
			set
			{
				if ((this._ClientCode != value))
				{
					this._ClientCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(MAX)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this._ShortName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suburb", DbType="NVarChar(MAX)")]
		public string Suburb
		{
			get
			{
				return this._Suburb;
			}
			set
			{
				if ((this._Suburb != value))
				{
					this._Suburb = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(MAX)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this._PostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(MAX)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="Int")]
		public System.Nullable<int> StateId
		{
			get
			{
				return this._StateId;
			}
			set
			{
				if ((this._StateId != value))
				{
					this._StateId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Web", DbType="NVarChar(MAX)")]
		public string Web
		{
			get
			{
				return this._Web;
			}
			set
			{
				if ((this._Web != value))
				{
					this._Web = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientTypeId", DbType="TinyInt NOT NULL")]
		public byte ClientTypeId
		{
			get
			{
				return this._ClientTypeId;
			}
			set
			{
				if ((this._ClientTypeId != value))
				{
					this._ClientTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(MAX)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this._Image = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products", DbType="NVarChar(MAX)")]
		public string Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				if ((this._Products != value))
				{
					this._Products = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="TinyInt")]
		public System.Nullable<byte> CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this._CountryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page", DbType="VarChar(100)")]
		public string Page
		{
			get
			{
				return this._Page;
			}
			set
			{
				if ((this._Page != value))
				{
					this._Page = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNumber", DbType="BigInt")]
		public System.Nullable<long> RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
	}
	
	public partial class roc_spGetBrandsByEditionTextResult
	{
		
		private System.Nullable<int> _TOTAL;
		
		private int _BrandId;
		
		private string _BrandName;
		
		private string _Logo;
		
		private string _BaseUrl;
		
		private System.Nullable<long> _RowNumber;
		
		public roc_spGetBrandsByEditionTextResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Int")]
		public System.Nullable<int> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandId", DbType="Int NOT NULL")]
		public int BrandId
		{
			get
			{
				return this._BrandId;
			}
			set
			{
				if ((this._BrandId != value))
				{
					this._BrandId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this._BrandName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="VarChar(60)")]
		public string Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this._Logo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseUrl", DbType="VarChar(255)")]
		public string BaseUrl
		{
			get
			{
				return this._BaseUrl;
			}
			set
			{
				if ((this._BaseUrl != value))
				{
					this._BaseUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNumber", DbType="BigInt")]
		public System.Nullable<long> RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
	}
	
	public partial class roc_spGetBrandResult
	{
		
		private System.Nullable<int> _TOTAL;
		
		private int _BrandId;
		
		private string _BrandName;
		
		private string _Logo;
		
		private string _BaseUrl;
		
		private System.Nullable<long> _RowNumber;
		
		public roc_spGetBrandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Int")]
		public System.Nullable<int> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandId", DbType="Int NOT NULL")]
		public int BrandId
		{
			get
			{
				return this._BrandId;
			}
			set
			{
				if ((this._BrandId != value))
				{
					this._BrandId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this._BrandName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="VarChar(60)")]
		public string Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this._Logo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseUrl", DbType="VarChar(255)")]
		public string BaseUrl
		{
			get
			{
				return this._BaseUrl;
			}
			set
			{
				if ((this._BaseUrl != value))
				{
					this._BaseUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNumber", DbType="BigInt")]
		public System.Nullable<long> RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
	}
	
	public partial class roc_spGetAdvertisementsByClientResult
	{
		
		private int _AdvertId;
		
		private int _ClientId;
		
		private string _AdvertName;
		
		private string _BaseUrl;
		
		private int _Orden;
		
		private bool _Active;
		
		public roc_spGetAdvertisementsByClientResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertId", DbType="Int NOT NULL")]
		public int AdvertId
		{
			get
			{
				return this._AdvertId;
			}
			set
			{
				if ((this._AdvertId != value))
				{
					this._AdvertId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int NOT NULL")]
		public int ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					this._ClientId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string AdvertName
		{
			get
			{
				return this._AdvertName;
			}
			set
			{
				if ((this._AdvertName != value))
				{
					this._AdvertName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseUrl", DbType="VarChar(255)")]
		public string BaseUrl
		{
			get
			{
				return this._BaseUrl;
			}
			set
			{
				if ((this._BaseUrl != value))
				{
					this._BaseUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Orden", DbType="Int NOT NULL")]
		public int Orden
		{
			get
			{
				return this._Orden;
			}
			set
			{
				if ((this._Orden != value))
				{
					this._Orden = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
	}
	
	public partial class roc_spGetBrandsByTextResult
	{
		
		private System.Nullable<int> _TOTAL;
		
		private int _BrandId;
		
		private string _BrandName;
		
		private string _Logo;
		
		private string _BaseUrl;
		
		private System.Nullable<long> _RowNumber;
		
		public roc_spGetBrandsByTextResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Int")]
		public System.Nullable<int> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandId", DbType="Int NOT NULL")]
		public int BrandId
		{
			get
			{
				return this._BrandId;
			}
			set
			{
				if ((this._BrandId != value))
				{
					this._BrandId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this._BrandName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="VarChar(60)")]
		public string Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this._Logo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseUrl", DbType="VarChar(255)")]
		public string BaseUrl
		{
			get
			{
				return this._BaseUrl;
			}
			set
			{
				if ((this._BaseUrl != value))
				{
					this._BaseUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNumber", DbType="BigInt")]
		public System.Nullable<long> RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
	}
	
	public partial class roc_spGetClientsByFullTextResult
	{
		
		private System.Nullable<int> _TOTAL;
		
		private int _ClientId;
		
		private int _EditionId;
		
		private System.Nullable<int> _ClientIdParent;
		
		private string _ClientCode;
		
		private string _CompanyName;
		
		private string _ShortName;
		
		private string _Address;
		
		private string _Suburb;
		
		private string _PostalCode;
		
		private string _City;
		
		private System.Nullable<int> _StateId;
		
		private string _Email;
		
		private string _Web;
		
		private byte _ClientTypeId;
		
		private string _Image;
		
		private string _Products;
		
		private System.Nullable<byte> _CountryId;
		
		private string _Page;
		
		private string _Description;
		
		private bool _Active;
		
		private string _StateName;
		
		private System.Nullable<long> _RowNumber;
		
		public roc_spGetClientsByFullTextResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Int")]
		public System.Nullable<int> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int NOT NULL")]
		public int ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					this._ClientId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditionId", DbType="Int NOT NULL")]
		public int EditionId
		{
			get
			{
				return this._EditionId;
			}
			set
			{
				if ((this._EditionId != value))
				{
					this._EditionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientIdParent", DbType="Int")]
		public System.Nullable<int> ClientIdParent
		{
			get
			{
				return this._ClientIdParent;
			}
			set
			{
				if ((this._ClientIdParent != value))
				{
					this._ClientIdParent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientCode", DbType="VarChar(10)")]
		public string ClientCode
		{
			get
			{
				return this._ClientCode;
			}
			set
			{
				if ((this._ClientCode != value))
				{
					this._ClientCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(MAX)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this._ShortName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suburb", DbType="NVarChar(MAX)")]
		public string Suburb
		{
			get
			{
				return this._Suburb;
			}
			set
			{
				if ((this._Suburb != value))
				{
					this._Suburb = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(MAX)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this._PostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(MAX)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="Int")]
		public System.Nullable<int> StateId
		{
			get
			{
				return this._StateId;
			}
			set
			{
				if ((this._StateId != value))
				{
					this._StateId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Web", DbType="NVarChar(MAX)")]
		public string Web
		{
			get
			{
				return this._Web;
			}
			set
			{
				if ((this._Web != value))
				{
					this._Web = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientTypeId", DbType="TinyInt NOT NULL")]
		public byte ClientTypeId
		{
			get
			{
				return this._ClientTypeId;
			}
			set
			{
				if ((this._ClientTypeId != value))
				{
					this._ClientTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(MAX)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this._Image = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products", DbType="NVarChar(MAX)")]
		public string Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				if ((this._Products != value))
				{
					this._Products = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="TinyInt")]
		public System.Nullable<byte> CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this._CountryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page", DbType="VarChar(100)")]
		public string Page
		{
			get
			{
				return this._Page;
			}
			set
			{
				if ((this._Page != value))
				{
					this._Page = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this._StateName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNumber", DbType="BigInt")]
		public System.Nullable<long> RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
	}
	
	public partial class roc_spGetClientsBySpecByStateByFullTextResult
	{
		
		private System.Nullable<int> _TOTAL;
		
		private int _ClientId;
		
		private int _EditionId;
		
		private System.Nullable<int> _ClientIdParent;
		
		private string _ClientCode;
		
		private string _CompanyName;
		
		private string _ShortName;
		
		private string _Address;
		
		private string _Suburb;
		
		private string _PostalCode;
		
		private string _City;
		
		private System.Nullable<int> _StateId;
		
		private string _Email;
		
		private string _Web;
		
		private byte _ClientTypeId;
		
		private string _Image;
		
		private string _Products;
		
		private System.Nullable<byte> _CountryId;
		
		private string _Page;
		
		private string _Description;
		
		private bool _Active;
		
		private System.Nullable<long> _RowNumber;
		
		public roc_spGetClientsBySpecByStateByFullTextResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Int")]
		public System.Nullable<int> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int NOT NULL")]
		public int ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					this._ClientId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditionId", DbType="Int NOT NULL")]
		public int EditionId
		{
			get
			{
				return this._EditionId;
			}
			set
			{
				if ((this._EditionId != value))
				{
					this._EditionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientIdParent", DbType="Int")]
		public System.Nullable<int> ClientIdParent
		{
			get
			{
				return this._ClientIdParent;
			}
			set
			{
				if ((this._ClientIdParent != value))
				{
					this._ClientIdParent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientCode", DbType="VarChar(10)")]
		public string ClientCode
		{
			get
			{
				return this._ClientCode;
			}
			set
			{
				if ((this._ClientCode != value))
				{
					this._ClientCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(MAX)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this._ShortName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suburb", DbType="NVarChar(MAX)")]
		public string Suburb
		{
			get
			{
				return this._Suburb;
			}
			set
			{
				if ((this._Suburb != value))
				{
					this._Suburb = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(MAX)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this._PostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(MAX)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="Int")]
		public System.Nullable<int> StateId
		{
			get
			{
				return this._StateId;
			}
			set
			{
				if ((this._StateId != value))
				{
					this._StateId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Web", DbType="NVarChar(MAX)")]
		public string Web
		{
			get
			{
				return this._Web;
			}
			set
			{
				if ((this._Web != value))
				{
					this._Web = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientTypeId", DbType="TinyInt NOT NULL")]
		public byte ClientTypeId
		{
			get
			{
				return this._ClientTypeId;
			}
			set
			{
				if ((this._ClientTypeId != value))
				{
					this._ClientTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(MAX)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this._Image = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products", DbType="NVarChar(MAX)")]
		public string Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				if ((this._Products != value))
				{
					this._Products = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="TinyInt")]
		public System.Nullable<byte> CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this._CountryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page", DbType="VarChar(100)")]
		public string Page
		{
			get
			{
				return this._Page;
			}
			set
			{
				if ((this._Page != value))
				{
					this._Page = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNumber", DbType="BigInt")]
		public System.Nullable<long> RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
	}
	
	public partial class roc_spGetClientsAndSpecialityByFullTextResult
	{
		
		private System.Nullable<int> _TOTAL;
		
		private int _ClientId;
		
		private string _CompanyName;
		
		private byte _ClientTypeId;
		
		private int _SpecialityId;
		
		private string _SpecialityDescription;
		
		private System.Nullable<long> _RowNumber;
		
		public roc_spGetClientsAndSpecialityByFullTextResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Int")]
		public System.Nullable<int> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int NOT NULL")]
		public int ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					this._ClientId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientTypeId", DbType="TinyInt NOT NULL")]
		public byte ClientTypeId
		{
			get
			{
				return this._ClientTypeId;
			}
			set
			{
				if ((this._ClientTypeId != value))
				{
					this._ClientTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityId", DbType="Int NOT NULL")]
		public int SpecialityId
		{
			get
			{
				return this._SpecialityId;
			}
			set
			{
				if ((this._SpecialityId != value))
				{
					this._SpecialityId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityDescription", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string SpecialityDescription
		{
			get
			{
				return this._SpecialityDescription;
			}
			set
			{
				if ((this._SpecialityDescription != value))
				{
					this._SpecialityDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNumber", DbType="BigInt")]
		public System.Nullable<long> RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
