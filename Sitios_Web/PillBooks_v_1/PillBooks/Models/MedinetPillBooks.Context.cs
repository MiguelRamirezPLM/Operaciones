//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PillBooks.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MedinetPB : DbContext
    {
        public MedinetPB()
            : base("name=MedinetPB")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<PillBookAssociated> PillBookAssociated { get; set; }
        public virtual DbSet<PillBookEncyclopedias> PillBookEncyclopedias { get; set; }
        public virtual DbSet<PillBook> PillBook { get; set; }
        public virtual DbSet<PillBookSubstances> PillBookSubstances { get; set; }
        public virtual DbSet<Countries> Countries { get; set; }
        public virtual DbSet<ActiveSubstances> ActiveSubstances { get; set; }
        public virtual DbSet<INNActiveSubstances> INNActiveSubstances { get; set; }
        public virtual DbSet<ProductSubstances> ProductSubstances { get; set; }
        public virtual DbSet<Encyclopedias> Encyclopedias { get; set; }
        public virtual DbSet<PillBookATC> PillBookATC { get; set; }
        public virtual DbSet<PillBookProducts> PillBookProducts { get; set; }
        public virtual DbSet<PillBookINNSubstances> PillBookINNSubstances { get; set; }
        public virtual DbSet<Products> Products { get; set; }
        public virtual DbSet<PharmaceuticalForms> PharmaceuticalForms { get; set; }
        public virtual DbSet<ICD> ICD { get; set; }
        public virtual DbSet<Therapeutics> Therapeutics { get; set; }
        public virtual DbSet<ProductICD> ProductICD { get; set; }
        public virtual DbSet<PLMINNSubstances> PLMINNSubstances { get; set; }
        public virtual DbSet<ProductPharmaForms> ProductPharmaForms { get; set; }
        public virtual DbSet<ProductPharmaFormSubstances> ProductPharmaFormSubstances { get; set; }
        public virtual DbSet<PillBookICD> PillBookICD { get; set; }
        public virtual DbSet<plm_vwProductsByEdition> plm_vwProductsByEdition { get; set; }
        public virtual DbSet<AttributeGroup> AttributeGroup { get; set; }
        public virtual DbSet<Attributes> Attributes { get; set; }
        public virtual DbSet<EditionAttributeGroup> EditionAttributeGroup { get; set; }
        public virtual DbSet<EditionAttributes> EditionAttributes { get; set; }
        public virtual DbSet<Editions> Editions { get; set; }
        public virtual DbSet<EditionPillBookAttributes> EditionPillBookAttributes { get; set; }
        public virtual DbSet<PillBookIconAnswers> PillBookIconAnswers { get; set; }
        public virtual DbSet<PillBookIcons> PillBookIcons { get; set; }
        public virtual DbSet<ClinicalReferences> ClinicalReferences { get; set; }
        public virtual DbSet<PillBookReferences> PillBookReferences { get; set; }
        public virtual DbSet<TherapeuticOMS> TherapeuticOMS { get; set; }
        public virtual DbSet<PillBookATCOMS> PillBookATCOMS { get; set; }
    
        public virtual ObjectResult<plm_spGetCountries_Result> plm_spGetCountries()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<plm_spGetCountries_Result>("plm_spGetCountries");
        }
    
        public virtual ObjectResult<plm_spGetProductsByPillBook_Result> plm_spGetProductsByPillBook(Nullable<int> pillbookid, Nullable<int> countryid)
        {
            var pillbookidParameter = pillbookid.HasValue ?
                new ObjectParameter("pillbookid", pillbookid) :
                new ObjectParameter("pillbookid", typeof(int));
    
            var countryidParameter = countryid.HasValue ?
                new ObjectParameter("countryid", countryid) :
                new ObjectParameter("countryid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<plm_spGetProductsByPillBook_Result>("plm_spGetProductsByPillBook", pillbookidParameter, countryidParameter);
        }
    
        public virtual ObjectResult<plm_spGetBrandsByPillBook_Result> plm_spGetBrandsByPillBook(Nullable<int> pillbookid, Nullable<int> countryid)
        {
            var pillbookidParameter = pillbookid.HasValue ?
                new ObjectParameter("pillbookid", pillbookid) :
                new ObjectParameter("pillbookid", typeof(int));
    
            var countryidParameter = countryid.HasValue ?
                new ObjectParameter("countryid", countryid) :
                new ObjectParameter("countryid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<plm_spGetBrandsByPillBook_Result>("plm_spGetBrandsByPillBook", pillbookidParameter, countryidParameter);
        }
    
        public virtual ObjectResult<plm_spGetTherapeuticsByPillBook_Result> plm_spGetTherapeuticsByPillBook(Nullable<int> pillbookid)
        {
            var pillbookidParameter = pillbookid.HasValue ?
                new ObjectParameter("pillbookid", pillbookid) :
                new ObjectParameter("pillbookid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<plm_spGetTherapeuticsByPillBook_Result>("plm_spGetTherapeuticsByPillBook", pillbookidParameter);
        }
    
        public virtual ObjectResult<plm_spGetICDByPillBook_Result> plm_spGetICDByPillBook(Nullable<int> pillbookid)
        {
            var pillbookidParameter = pillbookid.HasValue ?
                new ObjectParameter("pillbookid", pillbookid) :
                new ObjectParameter("pillbookid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<plm_spGetICDByPillBook_Result>("plm_spGetICDByPillBook", pillbookidParameter);
        }
    
        public virtual ObjectResult<string> plm_spGetReferencePillBookAsociate(Nullable<int> atttgid, Nullable<int> attrid, Nullable<int> eid, Nullable<int> pbid, string pILLBOOK, Nullable<bool> flag)
        {
            var atttgidParameter = atttgid.HasValue ?
                new ObjectParameter("atttgid", atttgid) :
                new ObjectParameter("atttgid", typeof(int));
    
            var attridParameter = attrid.HasValue ?
                new ObjectParameter("attrid", attrid) :
                new ObjectParameter("attrid", typeof(int));
    
            var eidParameter = eid.HasValue ?
                new ObjectParameter("eid", eid) :
                new ObjectParameter("eid", typeof(int));
    
            var pbidParameter = pbid.HasValue ?
                new ObjectParameter("pbid", pbid) :
                new ObjectParameter("pbid", typeof(int));
    
            var pILLBOOKParameter = pILLBOOK != null ?
                new ObjectParameter("PILLBOOK", pILLBOOK) :
                new ObjectParameter("PILLBOOK", typeof(string));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("flag", flag) :
                new ObjectParameter("flag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("plm_spGetReferencePillBookAsociate", atttgidParameter, attridParameter, eidParameter, pbidParameter, pILLBOOKParameter, flagParameter);
        }
    
        public virtual ObjectResult<plm_spGetINNSubstancesByPillBook_Result> plm_spGetINNSubstancesByPillBook(Nullable<int> pillbookid)
        {
            var pillbookidParameter = pillbookid.HasValue ?
                new ObjectParameter("pillbookid", pillbookid) :
                new ObjectParameter("pillbookid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<plm_spGetINNSubstancesByPillBook_Result>("plm_spGetINNSubstancesByPillBook", pillbookidParameter);
        }
    
        public virtual ObjectResult<plm_spGetActiveSubstanceByProduct_Result> plm_spGetActiveSubstanceByProduct(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<plm_spGetActiveSubstanceByProduct_Result>("plm_spGetActiveSubstanceByProduct", productIdParameter);
        }
    
        public virtual ObjectResult<string> plm_spGetActiveSubstancesByBrand(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("plm_spGetActiveSubstancesByBrand", productIdParameter);
        }
    
        public virtual ObjectResult<plm_spGetINNSubstancesBySearch_Result> plm_spGetINNSubstancesBySearch(string param)
        {
            var paramParameter = param != null ?
                new ObjectParameter("param", param) :
                new ObjectParameter("param", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<plm_spGetINNSubstancesBySearch_Result>("plm_spGetINNSubstancesBySearch", paramParameter);
        }
    
        public virtual ObjectResult<plm_spGetPLMSubstancesBySearch_Result> plm_spGetPLMSubstancesBySearch(string param)
        {
            var paramParameter = param != null ?
                new ObjectParameter("param", param) :
                new ObjectParameter("param", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<plm_spGetPLMSubstancesBySearch_Result>("plm_spGetPLMSubstancesBySearch", paramParameter);
        }
    
        public virtual ObjectResult<plm_spGetEncyclopediasBySearch_Result> plm_spGetEncyclopediasBySearch(string param)
        {
            var paramParameter = param != null ?
                new ObjectParameter("param", param) :
                new ObjectParameter("param", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<plm_spGetEncyclopediasBySearch_Result>("plm_spGetEncyclopediasBySearch", paramParameter);
        }
    
        public virtual ObjectResult<plm_spGetPillBooksBySearch_Result> plm_spGetPillBooksBySearch(string param)
        {
            var paramParameter = param != null ?
                new ObjectParameter("param", param) :
                new ObjectParameter("param", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<plm_spGetPillBooksBySearch_Result>("plm_spGetPillBooksBySearch", paramParameter);
        }
    
        public virtual ObjectResult<plm_spGetTherapeuticsOMSByPillBook_Result> plm_spGetTherapeuticsOMSByPillBook(Nullable<int> pillbookid)
        {
            var pillbookidParameter = pillbookid.HasValue ?
                new ObjectParameter("pillbookid", pillbookid) :
                new ObjectParameter("pillbookid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<plm_spGetTherapeuticsOMSByPillBook_Result>("plm_spGetTherapeuticsOMSByPillBook", pillbookidParameter);
        }
    }
}
