#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.18444
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="OTC")]
public partial class OTCDataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Definiciones de métodos de extensibilidad
  partial void OnCreated();
  partial void InsertAdvertisements(Advertisements instance);
  partial void UpdateAdvertisements(Advertisements instance);
  partial void DeleteAdvertisements(Advertisements instance);
  partial void InsertSymptoms(Symptoms instance);
  partial void UpdateSymptoms(Symptoms instance);
  partial void DeleteSymptoms(Symptoms instance);
  partial void InsertProductSymptoms(ProductSymptoms instance);
  partial void UpdateProductSymptoms(ProductSymptoms instance);
  partial void DeleteProductSymptoms(ProductSymptoms instance);
  partial void InsertProductSubstances(ProductSubstances instance);
  partial void UpdateProductSubstances(ProductSubstances instance);
  partial void DeleteProductSubstances(ProductSubstances instance);
  partial void InsertActiveSubstances(ActiveSubstances instance);
  partial void UpdateActiveSubstances(ActiveSubstances instance);
  partial void DeleteActiveSubstances(ActiveSubstances instance);
  partial void InsertEditionDivisionAds(EditionDivisionAds instance);
  partial void UpdateEditionDivisionAds(EditionDivisionAds instance);
  partial void DeleteEditionDivisionAds(EditionDivisionAds instance);
  partial void InsertEditionSymptoms(EditionSymptoms instance);
  partial void UpdateEditionSymptoms(EditionSymptoms instance);
  partial void DeleteEditionSymptoms(EditionSymptoms instance);
  partial void InsertDivisions(Divisions instance);
  partial void UpdateDivisions(Divisions instance);
  partial void DeleteDivisions(Divisions instance);
  partial void InsertDivisionInformation(DivisionInformation instance);
  partial void UpdateDivisionInformation(DivisionInformation instance);
  partial void DeleteDivisionInformation(DivisionInformation instance);
  #endregion
	
	public OTCDataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["OTCConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public OTCDataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public OTCDataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public OTCDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public OTCDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<plm_vwProductsByEdition> plm_vwProductsByEdition
	{
		get
		{
			return this.GetTable<plm_vwProductsByEdition>();
		}
	}
	
	public System.Data.Linq.Table<Advertisements> Advertisements
	{
		get
		{
			return this.GetTable<Advertisements>();
		}
	}
	
	public System.Data.Linq.Table<Symptoms> Symptoms
	{
		get
		{
			return this.GetTable<Symptoms>();
		}
	}
	
	public System.Data.Linq.Table<ProductSymptoms> ProductSymptoms
	{
		get
		{
			return this.GetTable<ProductSymptoms>();
		}
	}
	
	public System.Data.Linq.Table<ProductSubstances> ProductSubstances
	{
		get
		{
			return this.GetTable<ProductSubstances>();
		}
	}
	
	public System.Data.Linq.Table<ActiveSubstances> ActiveSubstances
	{
		get
		{
			return this.GetTable<ActiveSubstances>();
		}
	}
	
	public System.Data.Linq.Table<ProductByEdition> ProductByEdition
	{
		get
		{
			return this.GetTable<ProductByEdition>();
		}
	}
	
	public System.Data.Linq.Table<SymptomByEdition> SymptomByEdition
	{
		get
		{
			return this.GetTable<SymptomByEdition>();
		}
	}
	
	public System.Data.Linq.Table<SubstanceByEdition> SubstanceByEdition
	{
		get
		{
			return this.GetTable<SubstanceByEdition>();
		}
	}
	
	public System.Data.Linq.Table<EditionDivisionAds> EditionDivisionAds
	{
		get
		{
			return this.GetTable<EditionDivisionAds>();
		}
	}
	
	public System.Data.Linq.Table<EditionSymptoms> EditionSymptoms
	{
		get
		{
			return this.GetTable<EditionSymptoms>();
		}
	}
	
	public System.Data.Linq.Table<Divisions> Divisions
	{
		get
		{
			return this.GetTable<Divisions>();
		}
	}
	
	public System.Data.Linq.Table<DivisionInformation> DivisionInformation
	{
		get
		{
			return this.GetTable<DivisionInformation>();
		}
	}
	
	public System.Data.Linq.Table<AdsByEdition> AdsByEdition
	{
		get
		{
			return this.GetTable<AdsByEdition>();
		}
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.plm_dfGetPagesByProduct", IsComposable=true)]
	public string plm_dfGetPagesByProduct([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> productId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> editionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> divisionId)
	{
		return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productId, editionId, divisionId).ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.plm_dfGetActiveSubsByProduct", IsComposable=true)]
	public string plm_dfGetActiveSubsByProduct([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> productId)
	{
		return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productId).ReturnValue));
	}

    [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.plm_dfGetPharmaFormsByProductName", IsComposable = true)]
    public string plm_dfGetPharmaFormsByProductName([global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Int")] System.Nullable<int> editionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "VarChar(200)")] string brand)
	{
        return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), editionId, brand).ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.plm_dfProductsByPage", IsComposable=true)]
	public string plm_dfProductsByPage([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> editionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string page)
	{
		return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), editionId, page).ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.plm_dfGetPagesBySymptom", IsComposable=true)]
	public string plm_dfGetPagesBySymptom([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> symptomId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> editionId)
	{
		return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), symptomId, editionId).ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.plm_dfGetActiveSubstancesByProductBySubstance", IsComposable=true)]
	public string plm_dfGetActiveSubstancesByProductBySubstance([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> productId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> substanceId)
	{
		return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productId, substanceId).ReturnValue));
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.plm_vwProductsByEdition")]
public partial class plm_vwProductsByEdition
{
	
	private byte _CountryId;
	
	private string _CountryName;
	
	private int _CompanyId;
	
	private string _CompanyName;
	
	private bool _LabActive;
	
	private int _DivisionId;
	
	private string _DivisionName;
	
	private string _DivisionShortName;
	
	private bool _DivisionActive;
	
	private int _CategoryId;
	
	private string _CategoryName;
	
	private bool _CategoryActive;
	
	private int _ProductId;
	
	private string _Brand;
	
	private string _ProductDescription;
	
	private bool _ProductActive;
	
	private int _PharmaFormId;
	
	private string _FormName;
	
	private bool _PharmaFormActive;
	
	private System.Nullable<int> _EditionId;
	
	private System.Nullable<int> _NumberEdition;
	
	private string _ISBN;
	
	private string _BarCode;
	
	private System.Nullable<bool> _EditionActive;
	
	private string _TypeInEdition;
	
	private string _Page;
	
	private int _NewProduct;
	
	private int _BookId;
	
	private string _BookName;
	
	private bool _BookActive;
	
	private System.Nullable<int> _NumberOfActiveSubstances;
	
	private System.Nullable<int> _NumberOfIndications;
	
	public plm_vwProductsByEdition()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="TinyInt NOT NULL")]
	public byte CountryId
	{
		get
		{
			return this._CountryId;
		}
		set
		{
			if ((this._CountryId != value))
			{
				this._CountryId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string CountryName
	{
		get
		{
			return this._CountryName;
		}
		set
		{
			if ((this._CountryName != value))
			{
				this._CountryName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
	public int CompanyId
	{
		get
		{
			return this._CompanyId;
		}
		set
		{
			if ((this._CompanyId != value))
			{
				this._CompanyId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
	public string CompanyName
	{
		get
		{
			return this._CompanyName;
		}
		set
		{
			if ((this._CompanyName != value))
			{
				this._CompanyName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabActive", DbType="Bit NOT NULL")]
	public bool LabActive
	{
		get
		{
			return this._LabActive;
		}
		set
		{
			if ((this._LabActive != value))
			{
				this._LabActive = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionId", DbType="Int NOT NULL")]
	public int DivisionId
	{
		get
		{
			return this._DivisionId;
		}
		set
		{
			if ((this._DivisionId != value))
			{
				this._DivisionId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionName", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
	public string DivisionName
	{
		get
		{
			return this._DivisionName;
		}
		set
		{
			if ((this._DivisionName != value))
			{
				this._DivisionName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionShortName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string DivisionShortName
	{
		get
		{
			return this._DivisionShortName;
		}
		set
		{
			if ((this._DivisionShortName != value))
			{
				this._DivisionShortName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionActive", DbType="Bit NOT NULL")]
	public bool DivisionActive
	{
		get
		{
			return this._DivisionActive;
		}
		set
		{
			if ((this._DivisionActive != value))
			{
				this._DivisionActive = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int NOT NULL")]
	public int CategoryId
	{
		get
		{
			return this._CategoryId;
		}
		set
		{
			if ((this._CategoryId != value))
			{
				this._CategoryId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
	public string CategoryName
	{
		get
		{
			return this._CategoryName;
		}
		set
		{
			if ((this._CategoryName != value))
			{
				this._CategoryName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryActive", DbType="Bit NOT NULL")]
	public bool CategoryActive
	{
		get
		{
			return this._CategoryActive;
		}
		set
		{
			if ((this._CategoryActive != value))
			{
				this._CategoryActive = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
	public int ProductId
	{
		get
		{
			return this._ProductId;
		}
		set
		{
			if ((this._ProductId != value))
			{
				this._ProductId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Brand
	{
		get
		{
			return this._Brand;
		}
		set
		{
			if ((this._Brand != value))
			{
				this._Brand = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductDescription", DbType="VarChar(200)")]
	public string ProductDescription
	{
		get
		{
			return this._ProductDescription;
		}
		set
		{
			if ((this._ProductDescription != value))
			{
				this._ProductDescription = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductActive", DbType="Bit NOT NULL")]
	public bool ProductActive
	{
		get
		{
			return this._ProductActive;
		}
		set
		{
			if ((this._ProductActive != value))
			{
				this._ProductActive = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmaFormId", DbType="Int NOT NULL")]
	public int PharmaFormId
	{
		get
		{
			return this._PharmaFormId;
		}
		set
		{
			if ((this._PharmaFormId != value))
			{
				this._PharmaFormId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string FormName
	{
		get
		{
			return this._FormName;
		}
		set
		{
			if ((this._FormName != value))
			{
				this._FormName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmaFormActive", DbType="Bit NOT NULL")]
	public bool PharmaFormActive
	{
		get
		{
			return this._PharmaFormActive;
		}
		set
		{
			if ((this._PharmaFormActive != value))
			{
				this._PharmaFormActive = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditionId", DbType="Int")]
	public System.Nullable<int> EditionId
	{
		get
		{
			return this._EditionId;
		}
		set
		{
			if ((this._EditionId != value))
			{
				this._EditionId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberEdition", DbType="Int")]
	public System.Nullable<int> NumberEdition
	{
		get
		{
			return this._NumberEdition;
		}
		set
		{
			if ((this._NumberEdition != value))
			{
				this._NumberEdition = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISBN", DbType="VarChar(20)")]
	public string ISBN
	{
		get
		{
			return this._ISBN;
		}
		set
		{
			if ((this._ISBN != value))
			{
				this._ISBN = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarCode", DbType="VarChar(80)")]
	public string BarCode
	{
		get
		{
			return this._BarCode;
		}
		set
		{
			if ((this._BarCode != value))
			{
				this._BarCode = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditionActive", DbType="Bit")]
	public System.Nullable<bool> EditionActive
	{
		get
		{
			return this._EditionActive;
		}
		set
		{
			if ((this._EditionActive != value))
			{
				this._EditionActive = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeInEdition", DbType="VarChar(1)")]
	public string TypeInEdition
	{
		get
		{
			return this._TypeInEdition;
		}
		set
		{
			if ((this._TypeInEdition != value))
			{
				this._TypeInEdition = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page", DbType="VarChar(30)")]
	public string Page
	{
		get
		{
			return this._Page;
		}
		set
		{
			if ((this._Page != value))
			{
				this._Page = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewProduct", DbType="Int NOT NULL")]
	public int NewProduct
	{
		get
		{
			return this._NewProduct;
		}
		set
		{
			if ((this._NewProduct != value))
			{
				this._NewProduct = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookId", DbType="Int NOT NULL")]
	public int BookId
	{
		get
		{
			return this._BookId;
		}
		set
		{
			if ((this._BookId != value))
			{
				this._BookId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
	public string BookName
	{
		get
		{
			return this._BookName;
		}
		set
		{
			if ((this._BookName != value))
			{
				this._BookName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookActive", DbType="Bit NOT NULL")]
	public bool BookActive
	{
		get
		{
			return this._BookActive;
		}
		set
		{
			if ((this._BookActive != value))
			{
				this._BookActive = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfActiveSubstances", DbType="Int")]
	public System.Nullable<int> NumberOfActiveSubstances
	{
		get
		{
			return this._NumberOfActiveSubstances;
		}
		set
		{
			if ((this._NumberOfActiveSubstances != value))
			{
				this._NumberOfActiveSubstances = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfIndications", DbType="Int")]
	public System.Nullable<int> NumberOfIndications
	{
		get
		{
			return this._NumberOfIndications;
		}
		set
		{
			if ((this._NumberOfIndications != value))
			{
				this._NumberOfIndications = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Advertisements")]
public partial class Advertisements : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _AdId;
	
	private string _AdName;
	
	private string _ImageFile;
	
	private bool _Active;
	
	private EntitySet<EditionDivisionAds> _EditionDivisionAds;
	
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdIdChanging(int value);
    partial void OnAdIdChanged();
    partial void OnAdNameChanging(string value);
    partial void OnAdNameChanged();
    partial void OnImageFileChanging(string value);
    partial void OnImageFileChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
	
	public Advertisements()
	{
		this._EditionDivisionAds = new EntitySet<EditionDivisionAds>(new Action<EditionDivisionAds>(this.attach_EditionDivisionAds), new Action<EditionDivisionAds>(this.detach_EditionDivisionAds));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int AdId
	{
		get
		{
			return this._AdId;
		}
		set
		{
			if ((this._AdId != value))
			{
				this.OnAdIdChanging(value);
				this.SendPropertyChanging();
				this._AdId = value;
				this.SendPropertyChanged("AdId");
				this.OnAdIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string AdName
	{
		get
		{
			return this._AdName;
		}
		set
		{
			if ((this._AdName != value))
			{
				this.OnAdNameChanging(value);
				this.SendPropertyChanging();
				this._AdName = value;
				this.SendPropertyChanged("AdName");
				this.OnAdNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageFile", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string ImageFile
	{
		get
		{
			return this._ImageFile;
		}
		set
		{
			if ((this._ImageFile != value))
			{
				this.OnImageFileChanging(value);
				this.SendPropertyChanging();
				this._ImageFile = value;
				this.SendPropertyChanged("ImageFile");
				this.OnImageFileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this.OnActiveChanging(value);
				this.SendPropertyChanging();
				this._Active = value;
				this.SendPropertyChanged("Active");
				this.OnActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Advertisements_EditionDivisionAds", Storage="_EditionDivisionAds", ThisKey="AdId", OtherKey="AdId")]
	public EntitySet<EditionDivisionAds> EditionDivisionAds
	{
		get
		{
			return this._EditionDivisionAds;
		}
		set
		{
			this._EditionDivisionAds.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_EditionDivisionAds(EditionDivisionAds entity)
	{
		this.SendPropertyChanging();
		entity.Advertisements = this;
	}
	
	private void detach_EditionDivisionAds(EditionDivisionAds entity)
	{
		this.SendPropertyChanging();
		entity.Advertisements = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Symptoms")]
public partial class Symptoms : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SymptomId;

    private string _SymptomName;
	
	private bool _Active;
	
	private EntitySet<ProductSymptoms> _ProductSymptoms;
	
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSymptomIdChanging(int value);
    partial void OnSymptomIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
	
	public Symptoms()
	{
		this._ProductSymptoms = new EntitySet<ProductSymptoms>(new Action<ProductSymptoms>(this.attach_ProductSymptoms), new Action<ProductSymptoms>(this.detach_ProductSymptoms));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymptomId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int SymptomId
	{
		get
		{
			return this._SymptomId;
		}
		set
		{
			if ((this._SymptomId != value))
			{
				this.OnSymptomIdChanging(value);
				this.SendPropertyChanging();
				this._SymptomId = value;
				this.SendPropertyChanged("SymptomId");
				this.OnSymptomIdChanged();
			}
		}
	}

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SymptomName", DbType = "VarChar(80) NOT NULL", CanBeNull = false)]
    public string SymptomName
	{
		get
		{
            return this._SymptomName;
		}
		set
		{
            if ((this._SymptomName != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
                this._SymptomName = value;
                this.SendPropertyChanged("SymptomName");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this.OnActiveChanging(value);
				this.SendPropertyChanging();
				this._Active = value;
				this.SendPropertyChanged("Active");
				this.OnActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Symptoms_ProductSymptoms", Storage="_ProductSymptoms", ThisKey="SymptomId", OtherKey="SymptomId")]
	public EntitySet<ProductSymptoms> ProductSymptoms
	{
		get
		{
			return this._ProductSymptoms;
		}
		set
		{
			this._ProductSymptoms.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ProductSymptoms(ProductSymptoms entity)
	{
		this.SendPropertyChanging();
		entity.Symptoms = this;
	}
	
	private void detach_ProductSymptoms(ProductSymptoms entity)
	{
		this.SendPropertyChanging();
		entity.Symptoms = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductSymptoms")]
public partial class ProductSymptoms : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProductId;
	
	private int _SymptomId;
	
	private EntitySet<EditionSymptoms> _EditionSymptoms;
	
	private EntityRef<Symptoms> _Symptoms;
	
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnSymptomIdChanging(int value);
    partial void OnSymptomIdChanged();
    #endregion
	
	public ProductSymptoms()
	{
		this._EditionSymptoms = new EntitySet<EditionSymptoms>(new Action<EditionSymptoms>(this.attach_EditionSymptoms), new Action<EditionSymptoms>(this.detach_EditionSymptoms));
		this._Symptoms = default(EntityRef<Symptoms>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ProductId
	{
		get
		{
			return this._ProductId;
		}
		set
		{
			if ((this._ProductId != value))
			{
				this.OnProductIdChanging(value);
				this.SendPropertyChanging();
				this._ProductId = value;
				this.SendPropertyChanged("ProductId");
				this.OnProductIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymptomId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int SymptomId
	{
		get
		{
			return this._SymptomId;
		}
		set
		{
			if ((this._SymptomId != value))
			{
				if (this._Symptoms.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSymptomIdChanging(value);
				this.SendPropertyChanging();
				this._SymptomId = value;
				this.SendPropertyChanged("SymptomId");
				this.OnSymptomIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductSymptoms_EditionSymptoms", Storage="_EditionSymptoms", ThisKey="ProductId,SymptomId", OtherKey="ProductId,SymptomId")]
	public EntitySet<EditionSymptoms> EditionSymptoms
	{
		get
		{
			return this._EditionSymptoms;
		}
		set
		{
			this._EditionSymptoms.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Symptoms_ProductSymptoms", Storage="_Symptoms", ThisKey="SymptomId", OtherKey="SymptomId", IsForeignKey=true)]
	public Symptoms Symptoms
	{
		get
		{
			return this._Symptoms.Entity;
		}
		set
		{
			Symptoms previousValue = this._Symptoms.Entity;
			if (((previousValue != value) 
						|| (this._Symptoms.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Symptoms.Entity = null;
					previousValue.ProductSymptoms.Remove(this);
				}
				this._Symptoms.Entity = value;
				if ((value != null))
				{
					value.ProductSymptoms.Add(this);
					this._SymptomId = value.SymptomId;
				}
				else
				{
					this._SymptomId = default(int);
				}
				this.SendPropertyChanged("Symptoms");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_EditionSymptoms(EditionSymptoms entity)
	{
		this.SendPropertyChanging();
		entity.ProductSymptoms = this;
	}
	
	private void detach_EditionSymptoms(EditionSymptoms entity)
	{
		this.SendPropertyChanging();
		entity.ProductSymptoms = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductSubstances")]
public partial class ProductSubstances : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProductId;
	
	private int _ActiveSubstanceId;
	
	private EntityRef<ActiveSubstances> _ActiveSubstances;
	
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnActiveSubstanceIdChanging(int value);
    partial void OnActiveSubstanceIdChanged();
    #endregion
	
	public ProductSubstances()
	{
		this._ActiveSubstances = default(EntityRef<ActiveSubstances>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ProductId
	{
		get
		{
			return this._ProductId;
		}
		set
		{
			if ((this._ProductId != value))
			{
				this.OnProductIdChanging(value);
				this.SendPropertyChanging();
				this._ProductId = value;
				this.SendPropertyChanged("ProductId");
				this.OnProductIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveSubstanceId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ActiveSubstanceId
	{
		get
		{
			return this._ActiveSubstanceId;
		}
		set
		{
			if ((this._ActiveSubstanceId != value))
			{
				if (this._ActiveSubstances.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnActiveSubstanceIdChanging(value);
				this.SendPropertyChanging();
				this._ActiveSubstanceId = value;
				this.SendPropertyChanged("ActiveSubstanceId");
				this.OnActiveSubstanceIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActiveSubstances_ProductSubstances", Storage="_ActiveSubstances", ThisKey="ActiveSubstanceId", OtherKey="ActiveSubstanceId", IsForeignKey=true)]
	public ActiveSubstances ActiveSubstances
	{
		get
		{
			return this._ActiveSubstances.Entity;
		}
		set
		{
			ActiveSubstances previousValue = this._ActiveSubstances.Entity;
			if (((previousValue != value) 
						|| (this._ActiveSubstances.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ActiveSubstances.Entity = null;
					previousValue.ProductSubstances.Remove(this);
				}
				this._ActiveSubstances.Entity = value;
				if ((value != null))
				{
					value.ProductSubstances.Add(this);
					this._ActiveSubstanceId = value.ActiveSubstanceId;
				}
				else
				{
					this._ActiveSubstanceId = default(int);
				}
				this.SendPropertyChanged("ActiveSubstances");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActiveSubstances")]
public partial class ActiveSubstances : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ActiveSubstanceId;
	
	private string _SubstanceKey;
	
	private string _Description;
	
	private string _EnglishDescription;
	
	private bool _Active;
	
	private bool _Enunciative;
	
	private EntitySet<ProductSubstances> _ProductSubstances;
	
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActiveSubstanceIdChanging(int value);
    partial void OnActiveSubstanceIdChanged();
    partial void OnSubstanceKeyChanging(string value);
    partial void OnSubstanceKeyChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnEnglishDescriptionChanging(string value);
    partial void OnEnglishDescriptionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnEnunciativeChanging(bool value);
    partial void OnEnunciativeChanged();
    #endregion
	
	public ActiveSubstances()
	{
		this._ProductSubstances = new EntitySet<ProductSubstances>(new Action<ProductSubstances>(this.attach_ProductSubstances), new Action<ProductSubstances>(this.detach_ProductSubstances));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveSubstanceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ActiveSubstanceId
	{
		get
		{
			return this._ActiveSubstanceId;
		}
		set
		{
			if ((this._ActiveSubstanceId != value))
			{
				this.OnActiveSubstanceIdChanging(value);
				this.SendPropertyChanging();
				this._ActiveSubstanceId = value;
				this.SendPropertyChanged("ActiveSubstanceId");
				this.OnActiveSubstanceIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubstanceKey", DbType="VarChar(8)")]
	public string SubstanceKey
	{
		get
		{
			return this._SubstanceKey;
		}
		set
		{
			if ((this._SubstanceKey != value))
			{
				this.OnSubstanceKeyChanging(value);
				this.SendPropertyChanging();
				this._SubstanceKey = value;
				this.SendPropertyChanged("SubstanceKey");
				this.OnSubstanceKeyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnglishDescription", DbType="VarChar(200)")]
	public string EnglishDescription
	{
		get
		{
			return this._EnglishDescription;
		}
		set
		{
			if ((this._EnglishDescription != value))
			{
				this.OnEnglishDescriptionChanging(value);
				this.SendPropertyChanging();
				this._EnglishDescription = value;
				this.SendPropertyChanged("EnglishDescription");
				this.OnEnglishDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this.OnActiveChanging(value);
				this.SendPropertyChanging();
				this._Active = value;
				this.SendPropertyChanged("Active");
				this.OnActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enunciative", DbType="Bit NOT NULL")]
	public bool Enunciative
	{
		get
		{
			return this._Enunciative;
		}
		set
		{
			if ((this._Enunciative != value))
			{
				this.OnEnunciativeChanging(value);
				this.SendPropertyChanging();
				this._Enunciative = value;
				this.SendPropertyChanged("Enunciative");
				this.OnEnunciativeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActiveSubstances_ProductSubstances", Storage="_ProductSubstances", ThisKey="ActiveSubstanceId", OtherKey="ActiveSubstanceId")]
	public EntitySet<ProductSubstances> ProductSubstances
	{
		get
		{
			return this._ProductSubstances;
		}
		set
		{
			this._ProductSubstances.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ProductSubstances(ProductSubstances entity)
	{
		this.SendPropertyChanging();
		entity.ActiveSubstances = this;
	}
	
	private void detach_ProductSubstances(ProductSubstances entity)
	{
		this.SendPropertyChanging();
		entity.ActiveSubstances = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
public partial class ProductByEdition
{
	
	private string _Brand;
	
	private string _Substances;
	
	private string _Description;
	
	private string _PharmaForm;
	
	private string _Division;
	
	private string _Pages;
	
	public ProductByEdition()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", CanBeNull=false)]
	public string Brand
	{
		get
		{
			return this._Brand;
		}
		set
		{
			if ((this._Brand != value))
			{
				this._Brand = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Substances", CanBeNull=false)]
	public string Substances
	{
		get
		{
			return this._Substances;
		}
		set
		{
			if ((this._Substances != value))
			{
				this._Substances = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", CanBeNull=false)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmaForm", CanBeNull=false)]
	public string PharmaForm
	{
		get
		{
			return this._PharmaForm;
		}
		set
		{
			if ((this._PharmaForm != value))
			{
				this._PharmaForm = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Division", CanBeNull=false)]
	public string Division
	{
		get
		{
			return this._Division;
		}
		set
		{
			if ((this._Division != value))
			{
				this._Division = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pages", CanBeNull=false)]
	public string Pages
	{
		get
		{
			return this._Pages;
		}
		set
		{
			if ((this._Pages != value))
			{
				this._Pages = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
public partial class SymptomByEdition
{
	
	private string _Symptom;
	
	private string _Page;
	
	private string _SymptomId;
	
	public SymptomByEdition()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symptom", CanBeNull=false)]
	public string Symptom
	{
		get
		{
			return this._Symptom;
		}
		set
		{
			if ((this._Symptom != value))
			{
				this._Symptom = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page", CanBeNull=false)]
	public string Page
	{
		get
		{
			return this._Page;
		}
		set
		{
			if ((this._Page != value))
			{
				this._Page = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymptomId", CanBeNull=false)]
	public string SymptomId
	{
		get
		{
			return this._SymptomId;
		}
		set
		{
			if ((this._SymptomId != value))
			{
				this._SymptomId = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
public partial class SubstanceByEdition
{
	
	private string _SubstanceId;
	
	private string _Substance;
	
	public SubstanceByEdition()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubstanceId", CanBeNull=false)]
	public string SubstanceId
	{
		get
		{
			return this._SubstanceId;
		}
		set
		{
			if ((this._SubstanceId != value))
			{
				this._SubstanceId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Substance", CanBeNull=false)]
	public string Substance
	{
		get
		{
			return this._Substance;
		}
		set
		{
			if ((this._Substance != value))
			{
				this._Substance = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EditionDivisionAds")]
public partial class EditionDivisionAds : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _AdId;
	
	private int _DivisionId;
	
	private int _EditionId;
	
	private string _Page;
	
	private bool _Active;
	
	private EntityRef<Advertisements> _Advertisements;
	
	private EntityRef<Divisions> _Divisions;
	
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdIdChanging(int value);
    partial void OnAdIdChanged();
    partial void OnDivisionIdChanging(int value);
    partial void OnDivisionIdChanged();
    partial void OnEditionIdChanging(int value);
    partial void OnEditionIdChanged();
    partial void OnPageChanging(string value);
    partial void OnPageChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
	
	public EditionDivisionAds()
	{
		this._Advertisements = default(EntityRef<Advertisements>);
		this._Divisions = default(EntityRef<Divisions>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int AdId
	{
		get
		{
			return this._AdId;
		}
		set
		{
			if ((this._AdId != value))
			{
				if (this._Advertisements.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAdIdChanging(value);
				this.SendPropertyChanging();
				this._AdId = value;
				this.SendPropertyChanged("AdId");
				this.OnAdIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int DivisionId
	{
		get
		{
			return this._DivisionId;
		}
		set
		{
			if ((this._DivisionId != value))
			{
				if (this._Divisions.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnDivisionIdChanging(value);
				this.SendPropertyChanging();
				this._DivisionId = value;
				this.SendPropertyChanged("DivisionId");
				this.OnDivisionIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int EditionId
	{
		get
		{
			return this._EditionId;
		}
		set
		{
			if ((this._EditionId != value))
			{
				this.OnEditionIdChanging(value);
				this.SendPropertyChanging();
				this._EditionId = value;
				this.SendPropertyChanged("EditionId");
				this.OnEditionIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page", DbType="VarChar(50)")]
	public string Page
	{
		get
		{
			return this._Page;
		}
		set
		{
			if ((this._Page != value))
			{
				this.OnPageChanging(value);
				this.SendPropertyChanging();
				this._Page = value;
				this.SendPropertyChanged("Page");
				this.OnPageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this.OnActiveChanging(value);
				this.SendPropertyChanging();
				this._Active = value;
				this.SendPropertyChanged("Active");
				this.OnActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Advertisements_EditionDivisionAds", Storage="_Advertisements", ThisKey="AdId", OtherKey="AdId", IsForeignKey=true)]
	public Advertisements Advertisements
	{
		get
		{
			return this._Advertisements.Entity;
		}
		set
		{
			Advertisements previousValue = this._Advertisements.Entity;
			if (((previousValue != value) 
						|| (this._Advertisements.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Advertisements.Entity = null;
					previousValue.EditionDivisionAds.Remove(this);
				}
				this._Advertisements.Entity = value;
				if ((value != null))
				{
					value.EditionDivisionAds.Add(this);
					this._AdId = value.AdId;
				}
				else
				{
					this._AdId = default(int);
				}
				this.SendPropertyChanged("Advertisements");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Divisions_EditionDivisionAds", Storage="_Divisions", ThisKey="DivisionId", OtherKey="DivisionId", IsForeignKey=true)]
	public Divisions Divisions
	{
		get
		{
			return this._Divisions.Entity;
		}
		set
		{
			Divisions previousValue = this._Divisions.Entity;
			if (((previousValue != value) 
						|| (this._Divisions.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Divisions.Entity = null;
					previousValue.EditionDivisionAds.Remove(this);
				}
				this._Divisions.Entity = value;
				if ((value != null))
				{
					value.EditionDivisionAds.Add(this);
					this._DivisionId = value.DivisionId;
				}
				else
				{
					this._DivisionId = default(int);
				}
				this.SendPropertyChanged("Divisions");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EditionSymptoms")]
public partial class EditionSymptoms : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _EditionId;
	
	private int _ProductId;
	
	private int _SymptomId;
	
	private string _Page;
	
	private EntityRef<ProductSymptoms> _ProductSymptoms;
	
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEditionIdChanging(int value);
    partial void OnEditionIdChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnSymptomIdChanging(int value);
    partial void OnSymptomIdChanged();
    partial void OnPageChanging(string value);
    partial void OnPageChanged();
    #endregion
	
	public EditionSymptoms()
	{
		this._ProductSymptoms = default(EntityRef<ProductSymptoms>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int EditionId
	{
		get
		{
			return this._EditionId;
		}
		set
		{
			if ((this._EditionId != value))
			{
				this.OnEditionIdChanging(value);
				this.SendPropertyChanging();
				this._EditionId = value;
				this.SendPropertyChanged("EditionId");
				this.OnEditionIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ProductId
	{
		get
		{
			return this._ProductId;
		}
		set
		{
			if ((this._ProductId != value))
			{
				if (this._ProductSymptoms.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductIdChanging(value);
				this.SendPropertyChanging();
				this._ProductId = value;
				this.SendPropertyChanged("ProductId");
				this.OnProductIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymptomId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int SymptomId
	{
		get
		{
			return this._SymptomId;
		}
		set
		{
			if ((this._SymptomId != value))
			{
				if (this._ProductSymptoms.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSymptomIdChanging(value);
				this.SendPropertyChanging();
				this._SymptomId = value;
				this.SendPropertyChanged("SymptomId");
				this.OnSymptomIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page", DbType="VarChar(50)")]
	public string Page
	{
		get
		{
			return this._Page;
		}
		set
		{
			if ((this._Page != value))
			{
				this.OnPageChanging(value);
				this.SendPropertyChanging();
				this._Page = value;
				this.SendPropertyChanged("Page");
				this.OnPageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductSymptoms_EditionSymptoms", Storage="_ProductSymptoms", ThisKey="ProductId,SymptomId", OtherKey="ProductId,SymptomId", IsForeignKey=true)]
	public ProductSymptoms ProductSymptoms
	{
		get
		{
			return this._ProductSymptoms.Entity;
		}
		set
		{
			ProductSymptoms previousValue = this._ProductSymptoms.Entity;
			if (((previousValue != value) 
						|| (this._ProductSymptoms.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ProductSymptoms.Entity = null;
					previousValue.EditionSymptoms.Remove(this);
				}
				this._ProductSymptoms.Entity = value;
				if ((value != null))
				{
					value.EditionSymptoms.Add(this);
					this._ProductId = value.ProductId;
					this._SymptomId = value.SymptomId;
				}
				else
				{
					this._ProductId = default(int);
					this._SymptomId = default(int);
				}
				this.SendPropertyChanged("ProductSymptoms");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Divisions")]
public partial class Divisions : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _DivisionId;
	
	private System.Nullable<int> _ParentId;
	
	private byte _CountryId;
	
	private int _CompanyId;
	
	private string _ShortName;
	
	private string _Description;
	
	private bool _Active;
	
	private EntitySet<EditionDivisionAds> _EditionDivisionAds;
	
	private EntitySet<Divisions> _Divisions2;
	
	private EntitySet<DivisionInformation> _DivisionInformation;
	
	private EntityRef<Divisions> _Divisions1;
	
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDivisionIdChanging(int value);
    partial void OnDivisionIdChanged();
    partial void OnParentIdChanging(System.Nullable<int> value);
    partial void OnParentIdChanged();
    partial void OnCountryIdChanging(byte value);
    partial void OnCountryIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
	
	public Divisions()
	{
		this._EditionDivisionAds = new EntitySet<EditionDivisionAds>(new Action<EditionDivisionAds>(this.attach_EditionDivisionAds), new Action<EditionDivisionAds>(this.detach_EditionDivisionAds));
		this._Divisions2 = new EntitySet<Divisions>(new Action<Divisions>(this.attach_Divisions2), new Action<Divisions>(this.detach_Divisions2));
		this._DivisionInformation = new EntitySet<DivisionInformation>(new Action<DivisionInformation>(this.attach_DivisionInformation), new Action<DivisionInformation>(this.detach_DivisionInformation));
		this._Divisions1 = default(EntityRef<Divisions>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int DivisionId
	{
		get
		{
			return this._DivisionId;
		}
		set
		{
			if ((this._DivisionId != value))
			{
				this.OnDivisionIdChanging(value);
				this.SendPropertyChanging();
				this._DivisionId = value;
				this.SendPropertyChanged("DivisionId");
				this.OnDivisionIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
	public System.Nullable<int> ParentId
	{
		get
		{
			return this._ParentId;
		}
		set
		{
			if ((this._ParentId != value))
			{
				if (this._Divisions1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnParentIdChanging(value);
				this.SendPropertyChanging();
				this._ParentId = value;
				this.SendPropertyChanged("ParentId");
				this.OnParentIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="TinyInt NOT NULL")]
	public byte CountryId
	{
		get
		{
			return this._CountryId;
		}
		set
		{
			if ((this._CountryId != value))
			{
				this.OnCountryIdChanging(value);
				this.SendPropertyChanging();
				this._CountryId = value;
				this.SendPropertyChanged("CountryId");
				this.OnCountryIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
	public int CompanyId
	{
		get
		{
			return this._CompanyId;
		}
		set
		{
			if ((this._CompanyId != value))
			{
				this.OnCompanyIdChanging(value);
				this.SendPropertyChanging();
				this._CompanyId = value;
				this.SendPropertyChanged("CompanyId");
				this.OnCompanyIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string ShortName
	{
		get
		{
			return this._ShortName;
		}
		set
		{
			if ((this._ShortName != value))
			{
				this.OnShortNameChanging(value);
				this.SendPropertyChanging();
				this._ShortName = value;
				this.SendPropertyChanged("ShortName");
				this.OnShortNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this.OnActiveChanging(value);
				this.SendPropertyChanging();
				this._Active = value;
				this.SendPropertyChanged("Active");
				this.OnActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Divisions_EditionDivisionAds", Storage="_EditionDivisionAds", ThisKey="DivisionId", OtherKey="DivisionId")]
	public EntitySet<EditionDivisionAds> EditionDivisionAds
	{
		get
		{
			return this._EditionDivisionAds;
		}
		set
		{
			this._EditionDivisionAds.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Divisions_Divisions", Storage="_Divisions2", ThisKey="DivisionId", OtherKey="ParentId")]
	public EntitySet<Divisions> Divisions2
	{
		get
		{
			return this._Divisions2;
		}
		set
		{
			this._Divisions2.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Divisions_DivisionInformation", Storage="_DivisionInformation", ThisKey="DivisionId", OtherKey="DivisionId")]
	public EntitySet<DivisionInformation> DivisionInformation
	{
		get
		{
			return this._DivisionInformation;
		}
		set
		{
			this._DivisionInformation.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Divisions_Divisions", Storage="_Divisions1", ThisKey="ParentId", OtherKey="DivisionId", IsForeignKey=true)]
	public Divisions Divisions1
	{
		get
		{
			return this._Divisions1.Entity;
		}
		set
		{
			Divisions previousValue = this._Divisions1.Entity;
			if (((previousValue != value) 
						|| (this._Divisions1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Divisions1.Entity = null;
					previousValue.Divisions2.Remove(this);
				}
				this._Divisions1.Entity = value;
				if ((value != null))
				{
					value.Divisions2.Add(this);
					this._ParentId = value.DivisionId;
				}
				else
				{
					this._ParentId = default(Nullable<int>);
				}
				this.SendPropertyChanged("Divisions1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_EditionDivisionAds(EditionDivisionAds entity)
	{
		this.SendPropertyChanging();
		entity.Divisions = this;
	}
	
	private void detach_EditionDivisionAds(EditionDivisionAds entity)
	{
		this.SendPropertyChanging();
		entity.Divisions = null;
	}
	
	private void attach_Divisions2(Divisions entity)
	{
		this.SendPropertyChanging();
		entity.Divisions1 = this;
	}
	
	private void detach_Divisions2(Divisions entity)
	{
		this.SendPropertyChanging();
		entity.Divisions1 = null;
	}
	
	private void attach_DivisionInformation(DivisionInformation entity)
	{
		this.SendPropertyChanging();
		entity.Divisions = this;
	}
	
	private void detach_DivisionInformation(DivisionInformation entity)
	{
		this.SendPropertyChanging();
		entity.Divisions = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DivisionInformation")]
public partial class DivisionInformation : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _DivisionInfoId;
	
	private int _DivisionId;
	
	private string _Address;
	
	private string _Image;
	
	private string _Suburb;
	
	private string _ZipCode;
	
	private string _Telephone;
	
	private string _Fax;
	
	private string _Web;
	
	private string _Email;
	
	private string _City;
	
	private string _State;
	
	private bool _Active;
	
	private EntityRef<Divisions> _Divisions;
	
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDivisionInfoIdChanging(int value);
    partial void OnDivisionInfoIdChanged();
    partial void OnDivisionIdChanging(int value);
    partial void OnDivisionIdChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnSuburbChanging(string value);
    partial void OnSuburbChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnWebChanging(string value);
    partial void OnWebChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
	
	public DivisionInformation()
	{
		this._Divisions = default(EntityRef<Divisions>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionInfoId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int DivisionInfoId
	{
		get
		{
			return this._DivisionInfoId;
		}
		set
		{
			if ((this._DivisionInfoId != value))
			{
				this.OnDivisionInfoIdChanging(value);
				this.SendPropertyChanging();
				this._DivisionInfoId = value;
				this.SendPropertyChanged("DivisionInfoId");
				this.OnDivisionInfoIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionId", DbType="Int NOT NULL")]
	public int DivisionId
	{
		get
		{
			return this._DivisionId;
		}
		set
		{
			if ((this._DivisionId != value))
			{
				if (this._Divisions.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnDivisionIdChanging(value);
				this.SendPropertyChanging();
				this._DivisionId = value;
				this.SendPropertyChanged("DivisionId");
				this.OnDivisionIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(200)")]
	public string Image
	{
		get
		{
			return this._Image;
		}
		set
		{
			if ((this._Image != value))
			{
				this.OnImageChanging(value);
				this.SendPropertyChanging();
				this._Image = value;
				this.SendPropertyChanged("Image");
				this.OnImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suburb", DbType="VarChar(200)")]
	public string Suburb
	{
		get
		{
			return this._Suburb;
		}
		set
		{
			if ((this._Suburb != value))
			{
				this.OnSuburbChanging(value);
				this.SendPropertyChanging();
				this._Suburb = value;
				this.SendPropertyChanged("Suburb");
				this.OnSuburbChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="VarChar(50)")]
	public string ZipCode
	{
		get
		{
			return this._ZipCode;
		}
		set
		{
			if ((this._ZipCode != value))
			{
				this.OnZipCodeChanging(value);
				this.SendPropertyChanging();
				this._ZipCode = value;
				this.SendPropertyChanged("ZipCode");
				this.OnZipCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="VarChar(50)")]
	public string Telephone
	{
		get
		{
			return this._Telephone;
		}
		set
		{
			if ((this._Telephone != value))
			{
				this.OnTelephoneChanging(value);
				this.SendPropertyChanging();
				this._Telephone = value;
				this.SendPropertyChanged("Telephone");
				this.OnTelephoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="VarChar(50)")]
	public string Fax
	{
		get
		{
			return this._Fax;
		}
		set
		{
			if ((this._Fax != value))
			{
				this.OnFaxChanging(value);
				this.SendPropertyChanging();
				this._Fax = value;
				this.SendPropertyChanged("Fax");
				this.OnFaxChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Web", DbType="VarChar(100)")]
	public string Web
	{
		get
		{
			return this._Web;
		}
		set
		{
			if ((this._Web != value))
			{
				this.OnWebChanging(value);
				this.SendPropertyChanging();
				this._Web = value;
				this.SendPropertyChanged("Web");
				this.OnWebChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(100)")]
	public string City
	{
		get
		{
			return this._City;
		}
		set
		{
			if ((this._City != value))
			{
				this.OnCityChanging(value);
				this.SendPropertyChanging();
				this._City = value;
				this.SendPropertyChanged("City");
				this.OnCityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(100)")]
	public string State
	{
		get
		{
			return this._State;
		}
		set
		{
			if ((this._State != value))
			{
				this.OnStateChanging(value);
				this.SendPropertyChanging();
				this._State = value;
				this.SendPropertyChanged("State");
				this.OnStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this.OnActiveChanging(value);
				this.SendPropertyChanging();
				this._Active = value;
				this.SendPropertyChanged("Active");
				this.OnActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Divisions_DivisionInformation", Storage="_Divisions", ThisKey="DivisionId", OtherKey="DivisionId", IsForeignKey=true)]
	public Divisions Divisions
	{
		get
		{
			return this._Divisions.Entity;
		}
		set
		{
			Divisions previousValue = this._Divisions.Entity;
			if (((previousValue != value) 
						|| (this._Divisions.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Divisions.Entity = null;
					previousValue.DivisionInformation.Remove(this);
				}
				this._Divisions.Entity = value;
				if ((value != null))
				{
					value.DivisionInformation.Add(this);
					this._DivisionId = value.DivisionId;
				}
				else
				{
					this._DivisionId = default(int);
				}
				this.SendPropertyChanged("Divisions");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
public partial class AdsByEdition
{
	
	private string _AdName;
	
	private string _Page;
	
	public AdsByEdition()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdName", CanBeNull=false)]
	public string AdName
	{
		get
		{
			return this._AdName;
		}
		set
		{
			if ((this._AdName != value))
			{
				this._AdName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page", CanBeNull=false)]
	public string Page
	{
		get
		{
			return this._Page;
		}
		set
		{
			if ((this._Page != value))
			{
				this._Page = value;
			}
		}
	}
}
#pragma warning restore 1591
