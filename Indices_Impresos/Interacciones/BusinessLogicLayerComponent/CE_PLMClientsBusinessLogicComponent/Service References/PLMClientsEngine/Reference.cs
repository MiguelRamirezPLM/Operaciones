//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.225
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CE_PLMClientsBusinessLogicComponent.PLMClientsEngine {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaultExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/PLMExceptionsBusinessEntities")]
    [System.SerializableAttribute()]
    public partial class FaultExceptionInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FolioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Folio {
            get {
                return this.FolioField;
            }
            set {
                if ((object.ReferenceEquals(this.FolioField, value) != true)) {
                    this.FolioField = value;
                    this.RaisePropertyChanged("Folio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PLMClientsEngine.IPLMClients")]
    public interface IPLMClients {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMClients/getClientByCode", ReplyAction="http://tempuri.org/IPLMClients/getClientByCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CE_PLMClientsBusinessLogicComponent.PLMClientsEngine.FaultExceptionInfo), Action="http://tempuri.org/IPLMClients/getClientByCodeFaultExceptionInfoFault", Name="FaultExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/PLMExceptionsBusinessEntities")]
        PLMClientsBusinessEntities.ClientDetailInfo getClientByCode(string codeString);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPLMClients/getClientByCode", ReplyAction="http://tempuri.org/IPLMClients/getClientByCodeResponse")]
        System.IAsyncResult BegingetClientByCode(string codeString, System.AsyncCallback callback, object asyncState);
        
        PLMClientsBusinessEntities.ClientDetailInfo EndgetClientByCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMClients/saveClientInfo", ReplyAction="http://tempuri.org/IPLMClients/saveClientInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CE_PLMClientsBusinessLogicComponent.PLMClientsEngine.FaultExceptionInfo), Action="http://tempuri.org/IPLMClients/saveClientInfoFaultExceptionInfoFault", Name="FaultExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/PLMExceptionsBusinessEntities")]
        string saveClientInfo(string firstName, string lastName, string slastName, string email, PLMClientsBusinessEntities.Catalogs.Professions profession, System.Nullable<PLMClientsBusinessEntities.Catalogs.Specialities> speciality, string specialityName, string professionalLicense, string codePrefix, string codeString, PLMClientsBusinessEntities.Catalogs.EntrySources source, string macAddresses);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPLMClients/saveClientInfo", ReplyAction="http://tempuri.org/IPLMClients/saveClientInfoResponse")]
        System.IAsyncResult BeginsaveClientInfo(string firstName, string lastName, string slastName, string email, PLMClientsBusinessEntities.Catalogs.Professions profession, System.Nullable<PLMClientsBusinessEntities.Catalogs.Specialities> speciality, string specialityName, string professionalLicense, string codePrefix, string codeString, PLMClientsBusinessEntities.Catalogs.EntrySources source, string macAddresses, System.AsyncCallback callback, object asyncState);
        
        string EndsaveClientInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMClients/updateClientInfo", ReplyAction="http://tempuri.org/IPLMClients/updateClientInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CE_PLMClientsBusinessLogicComponent.PLMClientsEngine.FaultExceptionInfo), Action="http://tempuri.org/IPLMClients/updateClientInfoFaultExceptionInfoFault", Name="FaultExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/PLMExceptionsBusinessEntities")]
        void updateClientInfo(string firstName, string lastName, string slastName, string email, PLMClientsBusinessEntities.Catalogs.Professions profession, System.Nullable<PLMClientsBusinessEntities.Catalogs.Specialities> speciality, string specialityName, string professionalLicense, string codePrefix, string codeString, PLMClientsBusinessEntities.Catalogs.EntrySources source, string macAddresses);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPLMClients/updateClientInfo", ReplyAction="http://tempuri.org/IPLMClients/updateClientInfoResponse")]
        System.IAsyncResult BeginupdateClientInfo(string firstName, string lastName, string slastName, string email, PLMClientsBusinessEntities.Catalogs.Professions profession, System.Nullable<PLMClientsBusinessEntities.Catalogs.Specialities> speciality, string specialityName, string professionalLicense, string codePrefix, string codeString, PLMClientsBusinessEntities.Catalogs.EntrySources source, string macAddresses, System.AsyncCallback callback, object asyncState);
        
        void EndupdateClientInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMClients/validCode", ReplyAction="http://tempuri.org/IPLMClients/validCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CE_PLMClientsBusinessLogicComponent.PLMClientsEngine.FaultExceptionInfo), Action="http://tempuri.org/IPLMClients/validCodeFaultExceptionInfoFault", Name="FaultExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/PLMExceptionsBusinessEntities")]
        PLMClientsBusinessEntities.ValidCodeInfo validCode(string codeString);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPLMClients/validCode", ReplyAction="http://tempuri.org/IPLMClients/validCodeResponse")]
        System.IAsyncResult BeginvalidCode(string codeString, System.AsyncCallback callback, object asyncState);
        
        PLMClientsBusinessEntities.ValidCodeInfo EndvalidCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMClients/getToolsByCode", ReplyAction="http://tempuri.org/IPLMClients/getToolsByCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CE_PLMClientsBusinessLogicComponent.PLMClientsEngine.FaultExceptionInfo), Action="http://tempuri.org/IPLMClients/getToolsByCodeFaultExceptionInfoFault", Name="FaultExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/PLMExceptionsBusinessEntities")]
        System.Collections.Generic.List<PLMClientsBusinessEntities.ToolsByTargetInfo> getToolsByCode(string codeString, string country, PLMClientsBusinessEntities.Catalogs.TargetOutputs targetId, PLMClientsBusinessEntities.Catalogs.ElectronicToolTypes toolTypeId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPLMClients/getToolsByCode", ReplyAction="http://tempuri.org/IPLMClients/getToolsByCodeResponse")]
        System.IAsyncResult BegingetToolsByCode(string codeString, string country, PLMClientsBusinessEntities.Catalogs.TargetOutputs targetId, PLMClientsBusinessEntities.Catalogs.ElectronicToolTypes toolTypeId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<PLMClientsBusinessEntities.ToolsByTargetInfo> EndgetToolsByCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMClients/getBannersByCode", ReplyAction="http://tempuri.org/IPLMClients/getBannersByCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CE_PLMClientsBusinessLogicComponent.PLMClientsEngine.FaultExceptionInfo), Action="http://tempuri.org/IPLMClients/getBannersByCodeFaultExceptionInfoFault", Name="FaultExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/PLMExceptionsBusinessEntities")]
        System.Collections.Generic.List<PLMClientsBusinessEntities.BannersByTargetInfo> getBannersByCode(string codeString, string country, PLMClientsBusinessEntities.Catalogs.TargetOutputs targetId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPLMClients/getBannersByCode", ReplyAction="http://tempuri.org/IPLMClients/getBannersByCodeResponse")]
        System.IAsyncResult BegingetBannersByCode(string codeString, string country, PLMClientsBusinessEntities.Catalogs.TargetOutputs targetId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<PLMClientsBusinessEntities.BannersByTargetInfo> EndgetBannersByCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMClients/getProfessions", ReplyAction="http://tempuri.org/IPLMClients/getProfessionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CE_PLMClientsBusinessLogicComponent.PLMClientsEngine.FaultExceptionInfo), Action="http://tempuri.org/IPLMClients/getProfessionsFaultExceptionInfoFault", Name="FaultExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/PLMExceptionsBusinessEntities")]
        System.Collections.Generic.List<PLMClientsBusinessEntities.ProfessionInfo> getProfessions();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPLMClients/getProfessions", ReplyAction="http://tempuri.org/IPLMClients/getProfessionsResponse")]
        System.IAsyncResult BegingetProfessions(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<PLMClientsBusinessEntities.ProfessionInfo> EndgetProfessions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMClients/getSpecialities", ReplyAction="http://tempuri.org/IPLMClients/getSpecialitiesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CE_PLMClientsBusinessLogicComponent.PLMClientsEngine.FaultExceptionInfo), Action="http://tempuri.org/IPLMClients/getSpecialitiesFaultExceptionInfoFault", Name="FaultExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/PLMExceptionsBusinessEntities")]
        System.Collections.Generic.List<PLMClientsBusinessEntities.SpecialityInfo> getSpecialities(short professionId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPLMClients/getSpecialities", ReplyAction="http://tempuri.org/IPLMClients/getSpecialitiesResponse")]
        System.IAsyncResult BegingetSpecialities(short professionId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<PLMClientsBusinessEntities.SpecialityInfo> EndgetSpecialities(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPLMClientsChannel : CE_PLMClientsBusinessLogicComponent.PLMClientsEngine.IPLMClients, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getClientByCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getClientByCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PLMClientsBusinessEntities.ClientDetailInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PLMClientsBusinessEntities.ClientDetailInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class saveClientInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public saveClientInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class validCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public validCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PLMClientsBusinessEntities.ValidCodeInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PLMClientsBusinessEntities.ValidCodeInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getToolsByCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getToolsByCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<PLMClientsBusinessEntities.ToolsByTargetInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<PLMClientsBusinessEntities.ToolsByTargetInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getBannersByCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getBannersByCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<PLMClientsBusinessEntities.BannersByTargetInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<PLMClientsBusinessEntities.BannersByTargetInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getProfessionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getProfessionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<PLMClientsBusinessEntities.ProfessionInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<PLMClientsBusinessEntities.ProfessionInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getSpecialitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getSpecialitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<PLMClientsBusinessEntities.SpecialityInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<PLMClientsBusinessEntities.SpecialityInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PLMClientsClient : System.ServiceModel.ClientBase<CE_PLMClientsBusinessLogicComponent.PLMClientsEngine.IPLMClients>, CE_PLMClientsBusinessLogicComponent.PLMClientsEngine.IPLMClients {
        
        private BeginOperationDelegate onBegingetClientByCodeDelegate;
        
        private EndOperationDelegate onEndgetClientByCodeDelegate;
        
        private System.Threading.SendOrPostCallback ongetClientByCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginsaveClientInfoDelegate;
        
        private EndOperationDelegate onEndsaveClientInfoDelegate;
        
        private System.Threading.SendOrPostCallback onsaveClientInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginupdateClientInfoDelegate;
        
        private EndOperationDelegate onEndupdateClientInfoDelegate;
        
        private System.Threading.SendOrPostCallback onupdateClientInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginvalidCodeDelegate;
        
        private EndOperationDelegate onEndvalidCodeDelegate;
        
        private System.Threading.SendOrPostCallback onvalidCodeCompletedDelegate;
        
        private BeginOperationDelegate onBegingetToolsByCodeDelegate;
        
        private EndOperationDelegate onEndgetToolsByCodeDelegate;
        
        private System.Threading.SendOrPostCallback ongetToolsByCodeCompletedDelegate;
        
        private BeginOperationDelegate onBegingetBannersByCodeDelegate;
        
        private EndOperationDelegate onEndgetBannersByCodeDelegate;
        
        private System.Threading.SendOrPostCallback ongetBannersByCodeCompletedDelegate;
        
        private BeginOperationDelegate onBegingetProfessionsDelegate;
        
        private EndOperationDelegate onEndgetProfessionsDelegate;
        
        private System.Threading.SendOrPostCallback ongetProfessionsCompletedDelegate;
        
        private BeginOperationDelegate onBegingetSpecialitiesDelegate;
        
        private EndOperationDelegate onEndgetSpecialitiesDelegate;
        
        private System.Threading.SendOrPostCallback ongetSpecialitiesCompletedDelegate;
        
        public PLMClientsClient() {
        }
        
        public PLMClientsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PLMClientsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PLMClientsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PLMClientsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<getClientByCodeCompletedEventArgs> getClientByCodeCompleted;
        
        public event System.EventHandler<saveClientInfoCompletedEventArgs> saveClientInfoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> updateClientInfoCompleted;
        
        public event System.EventHandler<validCodeCompletedEventArgs> validCodeCompleted;
        
        public event System.EventHandler<getToolsByCodeCompletedEventArgs> getToolsByCodeCompleted;
        
        public event System.EventHandler<getBannersByCodeCompletedEventArgs> getBannersByCodeCompleted;
        
        public event System.EventHandler<getProfessionsCompletedEventArgs> getProfessionsCompleted;
        
        public event System.EventHandler<getSpecialitiesCompletedEventArgs> getSpecialitiesCompleted;
        
        public PLMClientsBusinessEntities.ClientDetailInfo getClientByCode(string codeString) {
            return base.Channel.getClientByCode(codeString);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetClientByCode(string codeString, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetClientByCode(codeString, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public PLMClientsBusinessEntities.ClientDetailInfo EndgetClientByCode(System.IAsyncResult result) {
            return base.Channel.EndgetClientByCode(result);
        }
        
        private System.IAsyncResult OnBegingetClientByCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string codeString = ((string)(inValues[0]));
            return this.BegingetClientByCode(codeString, callback, asyncState);
        }
        
        private object[] OnEndgetClientByCode(System.IAsyncResult result) {
            PLMClientsBusinessEntities.ClientDetailInfo retVal = this.EndgetClientByCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetClientByCodeCompleted(object state) {
            if ((this.getClientByCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getClientByCodeCompleted(this, new getClientByCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getClientByCodeAsync(string codeString) {
            this.getClientByCodeAsync(codeString, null);
        }
        
        public void getClientByCodeAsync(string codeString, object userState) {
            if ((this.onBegingetClientByCodeDelegate == null)) {
                this.onBegingetClientByCodeDelegate = new BeginOperationDelegate(this.OnBegingetClientByCode);
            }
            if ((this.onEndgetClientByCodeDelegate == null)) {
                this.onEndgetClientByCodeDelegate = new EndOperationDelegate(this.OnEndgetClientByCode);
            }
            if ((this.ongetClientByCodeCompletedDelegate == null)) {
                this.ongetClientByCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetClientByCodeCompleted);
            }
            base.InvokeAsync(this.onBegingetClientByCodeDelegate, new object[] {
                        codeString}, this.onEndgetClientByCodeDelegate, this.ongetClientByCodeCompletedDelegate, userState);
        }
        
        public string saveClientInfo(string firstName, string lastName, string slastName, string email, PLMClientsBusinessEntities.Catalogs.Professions profession, System.Nullable<PLMClientsBusinessEntities.Catalogs.Specialities> speciality, string specialityName, string professionalLicense, string codePrefix, string codeString, PLMClientsBusinessEntities.Catalogs.EntrySources source, string macAddresses) {
            return base.Channel.saveClientInfo(firstName, lastName, slastName, email, profession, speciality, specialityName, professionalLicense, codePrefix, codeString, source, macAddresses);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginsaveClientInfo(string firstName, string lastName, string slastName, string email, PLMClientsBusinessEntities.Catalogs.Professions profession, System.Nullable<PLMClientsBusinessEntities.Catalogs.Specialities> speciality, string specialityName, string professionalLicense, string codePrefix, string codeString, PLMClientsBusinessEntities.Catalogs.EntrySources source, string macAddresses, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginsaveClientInfo(firstName, lastName, slastName, email, profession, speciality, specialityName, professionalLicense, codePrefix, codeString, source, macAddresses, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndsaveClientInfo(System.IAsyncResult result) {
            return base.Channel.EndsaveClientInfo(result);
        }
        
        private System.IAsyncResult OnBeginsaveClientInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string firstName = ((string)(inValues[0]));
            string lastName = ((string)(inValues[1]));
            string slastName = ((string)(inValues[2]));
            string email = ((string)(inValues[3]));
            PLMClientsBusinessEntities.Catalogs.Professions profession = ((PLMClientsBusinessEntities.Catalogs.Professions)(inValues[4]));
            System.Nullable<PLMClientsBusinessEntities.Catalogs.Specialities> speciality = ((System.Nullable<PLMClientsBusinessEntities.Catalogs.Specialities>)(inValues[5]));
            string specialityName = ((string)(inValues[6]));
            string professionalLicense = ((string)(inValues[7]));
            string codePrefix = ((string)(inValues[8]));
            string codeString = ((string)(inValues[9]));
            PLMClientsBusinessEntities.Catalogs.EntrySources source = ((PLMClientsBusinessEntities.Catalogs.EntrySources)(inValues[10]));
            string macAddresses = ((string)(inValues[11]));
            return this.BeginsaveClientInfo(firstName, lastName, slastName, email, profession, speciality, specialityName, professionalLicense, codePrefix, codeString, source, macAddresses, callback, asyncState);
        }
        
        private object[] OnEndsaveClientInfo(System.IAsyncResult result) {
            string retVal = this.EndsaveClientInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnsaveClientInfoCompleted(object state) {
            if ((this.saveClientInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.saveClientInfoCompleted(this, new saveClientInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void saveClientInfoAsync(string firstName, string lastName, string slastName, string email, PLMClientsBusinessEntities.Catalogs.Professions profession, System.Nullable<PLMClientsBusinessEntities.Catalogs.Specialities> speciality, string specialityName, string professionalLicense, string codePrefix, string codeString, PLMClientsBusinessEntities.Catalogs.EntrySources source, string macAddresses) {
            this.saveClientInfoAsync(firstName, lastName, slastName, email, profession, speciality, specialityName, professionalLicense, codePrefix, codeString, source, macAddresses, null);
        }
        
        public void saveClientInfoAsync(string firstName, string lastName, string slastName, string email, PLMClientsBusinessEntities.Catalogs.Professions profession, System.Nullable<PLMClientsBusinessEntities.Catalogs.Specialities> speciality, string specialityName, string professionalLicense, string codePrefix, string codeString, PLMClientsBusinessEntities.Catalogs.EntrySources source, string macAddresses, object userState) {
            if ((this.onBeginsaveClientInfoDelegate == null)) {
                this.onBeginsaveClientInfoDelegate = new BeginOperationDelegate(this.OnBeginsaveClientInfo);
            }
            if ((this.onEndsaveClientInfoDelegate == null)) {
                this.onEndsaveClientInfoDelegate = new EndOperationDelegate(this.OnEndsaveClientInfo);
            }
            if ((this.onsaveClientInfoCompletedDelegate == null)) {
                this.onsaveClientInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnsaveClientInfoCompleted);
            }
            base.InvokeAsync(this.onBeginsaveClientInfoDelegate, new object[] {
                        firstName,
                        lastName,
                        slastName,
                        email,
                        profession,
                        speciality,
                        specialityName,
                        professionalLicense,
                        codePrefix,
                        codeString,
                        source,
                        macAddresses}, this.onEndsaveClientInfoDelegate, this.onsaveClientInfoCompletedDelegate, userState);
        }
        
        public void updateClientInfo(string firstName, string lastName, string slastName, string email, PLMClientsBusinessEntities.Catalogs.Professions profession, System.Nullable<PLMClientsBusinessEntities.Catalogs.Specialities> speciality, string specialityName, string professionalLicense, string codePrefix, string codeString, PLMClientsBusinessEntities.Catalogs.EntrySources source, string macAddresses) {
            base.Channel.updateClientInfo(firstName, lastName, slastName, email, profession, speciality, specialityName, professionalLicense, codePrefix, codeString, source, macAddresses);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginupdateClientInfo(string firstName, string lastName, string slastName, string email, PLMClientsBusinessEntities.Catalogs.Professions profession, System.Nullable<PLMClientsBusinessEntities.Catalogs.Specialities> speciality, string specialityName, string professionalLicense, string codePrefix, string codeString, PLMClientsBusinessEntities.Catalogs.EntrySources source, string macAddresses, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginupdateClientInfo(firstName, lastName, slastName, email, profession, speciality, specialityName, professionalLicense, codePrefix, codeString, source, macAddresses, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndupdateClientInfo(System.IAsyncResult result) {
            base.Channel.EndupdateClientInfo(result);
        }
        
        private System.IAsyncResult OnBeginupdateClientInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string firstName = ((string)(inValues[0]));
            string lastName = ((string)(inValues[1]));
            string slastName = ((string)(inValues[2]));
            string email = ((string)(inValues[3]));
            PLMClientsBusinessEntities.Catalogs.Professions profession = ((PLMClientsBusinessEntities.Catalogs.Professions)(inValues[4]));
            System.Nullable<PLMClientsBusinessEntities.Catalogs.Specialities> speciality = ((System.Nullable<PLMClientsBusinessEntities.Catalogs.Specialities>)(inValues[5]));
            string specialityName = ((string)(inValues[6]));
            string professionalLicense = ((string)(inValues[7]));
            string codePrefix = ((string)(inValues[8]));
            string codeString = ((string)(inValues[9]));
            PLMClientsBusinessEntities.Catalogs.EntrySources source = ((PLMClientsBusinessEntities.Catalogs.EntrySources)(inValues[10]));
            string macAddresses = ((string)(inValues[11]));
            return this.BeginupdateClientInfo(firstName, lastName, slastName, email, profession, speciality, specialityName, professionalLicense, codePrefix, codeString, source, macAddresses, callback, asyncState);
        }
        
        private object[] OnEndupdateClientInfo(System.IAsyncResult result) {
            this.EndupdateClientInfo(result);
            return null;
        }
        
        private void OnupdateClientInfoCompleted(object state) {
            if ((this.updateClientInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.updateClientInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void updateClientInfoAsync(string firstName, string lastName, string slastName, string email, PLMClientsBusinessEntities.Catalogs.Professions profession, System.Nullable<PLMClientsBusinessEntities.Catalogs.Specialities> speciality, string specialityName, string professionalLicense, string codePrefix, string codeString, PLMClientsBusinessEntities.Catalogs.EntrySources source, string macAddresses) {
            this.updateClientInfoAsync(firstName, lastName, slastName, email, profession, speciality, specialityName, professionalLicense, codePrefix, codeString, source, macAddresses, null);
        }
        
        public void updateClientInfoAsync(string firstName, string lastName, string slastName, string email, PLMClientsBusinessEntities.Catalogs.Professions profession, System.Nullable<PLMClientsBusinessEntities.Catalogs.Specialities> speciality, string specialityName, string professionalLicense, string codePrefix, string codeString, PLMClientsBusinessEntities.Catalogs.EntrySources source, string macAddresses, object userState) {
            if ((this.onBeginupdateClientInfoDelegate == null)) {
                this.onBeginupdateClientInfoDelegate = new BeginOperationDelegate(this.OnBeginupdateClientInfo);
            }
            if ((this.onEndupdateClientInfoDelegate == null)) {
                this.onEndupdateClientInfoDelegate = new EndOperationDelegate(this.OnEndupdateClientInfo);
            }
            if ((this.onupdateClientInfoCompletedDelegate == null)) {
                this.onupdateClientInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnupdateClientInfoCompleted);
            }
            base.InvokeAsync(this.onBeginupdateClientInfoDelegate, new object[] {
                        firstName,
                        lastName,
                        slastName,
                        email,
                        profession,
                        speciality,
                        specialityName,
                        professionalLicense,
                        codePrefix,
                        codeString,
                        source,
                        macAddresses}, this.onEndupdateClientInfoDelegate, this.onupdateClientInfoCompletedDelegate, userState);
        }
        
        public PLMClientsBusinessEntities.ValidCodeInfo validCode(string codeString) {
            return base.Channel.validCode(codeString);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginvalidCode(string codeString, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginvalidCode(codeString, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public PLMClientsBusinessEntities.ValidCodeInfo EndvalidCode(System.IAsyncResult result) {
            return base.Channel.EndvalidCode(result);
        }
        
        private System.IAsyncResult OnBeginvalidCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string codeString = ((string)(inValues[0]));
            return this.BeginvalidCode(codeString, callback, asyncState);
        }
        
        private object[] OnEndvalidCode(System.IAsyncResult result) {
            PLMClientsBusinessEntities.ValidCodeInfo retVal = this.EndvalidCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnvalidCodeCompleted(object state) {
            if ((this.validCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.validCodeCompleted(this, new validCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void validCodeAsync(string codeString) {
            this.validCodeAsync(codeString, null);
        }
        
        public void validCodeAsync(string codeString, object userState) {
            if ((this.onBeginvalidCodeDelegate == null)) {
                this.onBeginvalidCodeDelegate = new BeginOperationDelegate(this.OnBeginvalidCode);
            }
            if ((this.onEndvalidCodeDelegate == null)) {
                this.onEndvalidCodeDelegate = new EndOperationDelegate(this.OnEndvalidCode);
            }
            if ((this.onvalidCodeCompletedDelegate == null)) {
                this.onvalidCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnvalidCodeCompleted);
            }
            base.InvokeAsync(this.onBeginvalidCodeDelegate, new object[] {
                        codeString}, this.onEndvalidCodeDelegate, this.onvalidCodeCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<PLMClientsBusinessEntities.ToolsByTargetInfo> getToolsByCode(string codeString, string country, PLMClientsBusinessEntities.Catalogs.TargetOutputs targetId, PLMClientsBusinessEntities.Catalogs.ElectronicToolTypes toolTypeId) {
            return base.Channel.getToolsByCode(codeString, country, targetId, toolTypeId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetToolsByCode(string codeString, string country, PLMClientsBusinessEntities.Catalogs.TargetOutputs targetId, PLMClientsBusinessEntities.Catalogs.ElectronicToolTypes toolTypeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetToolsByCode(codeString, country, targetId, toolTypeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<PLMClientsBusinessEntities.ToolsByTargetInfo> EndgetToolsByCode(System.IAsyncResult result) {
            return base.Channel.EndgetToolsByCode(result);
        }
        
        private System.IAsyncResult OnBegingetToolsByCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string codeString = ((string)(inValues[0]));
            string country = ((string)(inValues[1]));
            PLMClientsBusinessEntities.Catalogs.TargetOutputs targetId = ((PLMClientsBusinessEntities.Catalogs.TargetOutputs)(inValues[2]));
            PLMClientsBusinessEntities.Catalogs.ElectronicToolTypes toolTypeId = ((PLMClientsBusinessEntities.Catalogs.ElectronicToolTypes)(inValues[3]));
            return this.BegingetToolsByCode(codeString, country, targetId, toolTypeId, callback, asyncState);
        }
        
        private object[] OnEndgetToolsByCode(System.IAsyncResult result) {
            System.Collections.Generic.List<PLMClientsBusinessEntities.ToolsByTargetInfo> retVal = this.EndgetToolsByCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetToolsByCodeCompleted(object state) {
            if ((this.getToolsByCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getToolsByCodeCompleted(this, new getToolsByCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getToolsByCodeAsync(string codeString, string country, PLMClientsBusinessEntities.Catalogs.TargetOutputs targetId, PLMClientsBusinessEntities.Catalogs.ElectronicToolTypes toolTypeId) {
            this.getToolsByCodeAsync(codeString, country, targetId, toolTypeId, null);
        }
        
        public void getToolsByCodeAsync(string codeString, string country, PLMClientsBusinessEntities.Catalogs.TargetOutputs targetId, PLMClientsBusinessEntities.Catalogs.ElectronicToolTypes toolTypeId, object userState) {
            if ((this.onBegingetToolsByCodeDelegate == null)) {
                this.onBegingetToolsByCodeDelegate = new BeginOperationDelegate(this.OnBegingetToolsByCode);
            }
            if ((this.onEndgetToolsByCodeDelegate == null)) {
                this.onEndgetToolsByCodeDelegate = new EndOperationDelegate(this.OnEndgetToolsByCode);
            }
            if ((this.ongetToolsByCodeCompletedDelegate == null)) {
                this.ongetToolsByCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetToolsByCodeCompleted);
            }
            base.InvokeAsync(this.onBegingetToolsByCodeDelegate, new object[] {
                        codeString,
                        country,
                        targetId,
                        toolTypeId}, this.onEndgetToolsByCodeDelegate, this.ongetToolsByCodeCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<PLMClientsBusinessEntities.BannersByTargetInfo> getBannersByCode(string codeString, string country, PLMClientsBusinessEntities.Catalogs.TargetOutputs targetId) {
            return base.Channel.getBannersByCode(codeString, country, targetId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetBannersByCode(string codeString, string country, PLMClientsBusinessEntities.Catalogs.TargetOutputs targetId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetBannersByCode(codeString, country, targetId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<PLMClientsBusinessEntities.BannersByTargetInfo> EndgetBannersByCode(System.IAsyncResult result) {
            return base.Channel.EndgetBannersByCode(result);
        }
        
        private System.IAsyncResult OnBegingetBannersByCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string codeString = ((string)(inValues[0]));
            string country = ((string)(inValues[1]));
            PLMClientsBusinessEntities.Catalogs.TargetOutputs targetId = ((PLMClientsBusinessEntities.Catalogs.TargetOutputs)(inValues[2]));
            return this.BegingetBannersByCode(codeString, country, targetId, callback, asyncState);
        }
        
        private object[] OnEndgetBannersByCode(System.IAsyncResult result) {
            System.Collections.Generic.List<PLMClientsBusinessEntities.BannersByTargetInfo> retVal = this.EndgetBannersByCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetBannersByCodeCompleted(object state) {
            if ((this.getBannersByCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getBannersByCodeCompleted(this, new getBannersByCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getBannersByCodeAsync(string codeString, string country, PLMClientsBusinessEntities.Catalogs.TargetOutputs targetId) {
            this.getBannersByCodeAsync(codeString, country, targetId, null);
        }
        
        public void getBannersByCodeAsync(string codeString, string country, PLMClientsBusinessEntities.Catalogs.TargetOutputs targetId, object userState) {
            if ((this.onBegingetBannersByCodeDelegate == null)) {
                this.onBegingetBannersByCodeDelegate = new BeginOperationDelegate(this.OnBegingetBannersByCode);
            }
            if ((this.onEndgetBannersByCodeDelegate == null)) {
                this.onEndgetBannersByCodeDelegate = new EndOperationDelegate(this.OnEndgetBannersByCode);
            }
            if ((this.ongetBannersByCodeCompletedDelegate == null)) {
                this.ongetBannersByCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetBannersByCodeCompleted);
            }
            base.InvokeAsync(this.onBegingetBannersByCodeDelegate, new object[] {
                        codeString,
                        country,
                        targetId}, this.onEndgetBannersByCodeDelegate, this.ongetBannersByCodeCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<PLMClientsBusinessEntities.ProfessionInfo> getProfessions() {
            return base.Channel.getProfessions();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetProfessions(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetProfessions(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<PLMClientsBusinessEntities.ProfessionInfo> EndgetProfessions(System.IAsyncResult result) {
            return base.Channel.EndgetProfessions(result);
        }
        
        private System.IAsyncResult OnBegingetProfessions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetProfessions(callback, asyncState);
        }
        
        private object[] OnEndgetProfessions(System.IAsyncResult result) {
            System.Collections.Generic.List<PLMClientsBusinessEntities.ProfessionInfo> retVal = this.EndgetProfessions(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetProfessionsCompleted(object state) {
            if ((this.getProfessionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getProfessionsCompleted(this, new getProfessionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getProfessionsAsync() {
            this.getProfessionsAsync(null);
        }
        
        public void getProfessionsAsync(object userState) {
            if ((this.onBegingetProfessionsDelegate == null)) {
                this.onBegingetProfessionsDelegate = new BeginOperationDelegate(this.OnBegingetProfessions);
            }
            if ((this.onEndgetProfessionsDelegate == null)) {
                this.onEndgetProfessionsDelegate = new EndOperationDelegate(this.OnEndgetProfessions);
            }
            if ((this.ongetProfessionsCompletedDelegate == null)) {
                this.ongetProfessionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetProfessionsCompleted);
            }
            base.InvokeAsync(this.onBegingetProfessionsDelegate, null, this.onEndgetProfessionsDelegate, this.ongetProfessionsCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<PLMClientsBusinessEntities.SpecialityInfo> getSpecialities(short professionId) {
            return base.Channel.getSpecialities(professionId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetSpecialities(short professionId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetSpecialities(professionId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<PLMClientsBusinessEntities.SpecialityInfo> EndgetSpecialities(System.IAsyncResult result) {
            return base.Channel.EndgetSpecialities(result);
        }
        
        private System.IAsyncResult OnBegingetSpecialities(object[] inValues, System.AsyncCallback callback, object asyncState) {
            short professionId = ((short)(inValues[0]));
            return this.BegingetSpecialities(professionId, callback, asyncState);
        }
        
        private object[] OnEndgetSpecialities(System.IAsyncResult result) {
            System.Collections.Generic.List<PLMClientsBusinessEntities.SpecialityInfo> retVal = this.EndgetSpecialities(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetSpecialitiesCompleted(object state) {
            if ((this.getSpecialitiesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getSpecialitiesCompleted(this, new getSpecialitiesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getSpecialitiesAsync(short professionId) {
            this.getSpecialitiesAsync(professionId, null);
        }
        
        public void getSpecialitiesAsync(short professionId, object userState) {
            if ((this.onBegingetSpecialitiesDelegate == null)) {
                this.onBegingetSpecialitiesDelegate = new BeginOperationDelegate(this.OnBegingetSpecialities);
            }
            if ((this.onEndgetSpecialitiesDelegate == null)) {
                this.onEndgetSpecialitiesDelegate = new EndOperationDelegate(this.OnEndgetSpecialities);
            }
            if ((this.ongetSpecialitiesCompletedDelegate == null)) {
                this.ongetSpecialitiesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetSpecialitiesCompleted);
            }
            base.InvokeAsync(this.onBegingetSpecialitiesDelegate, new object[] {
                        professionId}, this.onEndgetSpecialitiesDelegate, this.ongetSpecialitiesCompletedDelegate, userState);
        }
    }
}
