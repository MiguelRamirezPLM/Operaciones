//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.235
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CE_PSELogsBusinessLogicComponent.PLMLogsEngine {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Info_TrackingListInfo", Namespace="http://schemas.datacontract.org/2004/07/InfoLogsBusinessEntries")]
    [System.SerializableAttribute()]
    public partial class Info_TrackingListInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EntityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JSONFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReplicateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SearchDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchParametersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte SearchTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte SourceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TrackIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeString {
            get {
                return this.CodeStringField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeStringField, value) != true)) {
                    this.CodeStringField = value;
                    this.RaisePropertyChanged("CodeString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EntityId {
            get {
                return this.EntityIdField;
            }
            set {
                if ((this.EntityIdField.Equals(value) != true)) {
                    this.EntityIdField = value;
                    this.RaisePropertyChanged("EntityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JSONFormat {
            get {
                return this.JSONFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.JSONFormatField, value) != true)) {
                    this.JSONFormatField = value;
                    this.RaisePropertyChanged("JSONFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Replicate {
            get {
                return this.ReplicateField;
            }
            set {
                if ((this.ReplicateField.Equals(value) != true)) {
                    this.ReplicateField = value;
                    this.RaisePropertyChanged("Replicate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SearchDate {
            get {
                return this.SearchDateField;
            }
            set {
                if ((this.SearchDateField.Equals(value) != true)) {
                    this.SearchDateField = value;
                    this.RaisePropertyChanged("SearchDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchParameters {
            get {
                return this.SearchParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchParametersField, value) != true)) {
                    this.SearchParametersField = value;
                    this.RaisePropertyChanged("SearchParameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte SearchTypeId {
            get {
                return this.SearchTypeIdField;
            }
            set {
                if ((this.SearchTypeIdField.Equals(value) != true)) {
                    this.SearchTypeIdField = value;
                    this.RaisePropertyChanged("SearchTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte SourceId {
            get {
                return this.SourceIdField;
            }
            set {
                if ((this.SourceIdField.Equals(value) != true)) {
                    this.SourceIdField = value;
                    this.RaisePropertyChanged("SourceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TrackId {
            get {
                return this.TrackIdField;
            }
            set {
                if ((this.TrackIdField.Equals(value) != true)) {
                    this.TrackIdField = value;
                    this.RaisePropertyChanged("TrackId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PLMLogsEngine.IPLMLogs")]
    public interface IPLMLogs {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMLogs/addLogActivity", ReplyAction="http://tempuri.org/IPLMLogs/addLogActivityResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PSELogsBusinessEntities.PSE_TrackingParentInfo))]
        void addLogActivity(PSELogsBusinessEntities.PSE_TrackingListInfo track);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPLMLogs/addLogActivity", ReplyAction="http://tempuri.org/IPLMLogs/addLogActivityResponse")]
        System.IAsyncResult BeginaddLogActivity(PSELogsBusinessEntities.PSE_TrackingListInfo track, System.AsyncCallback callback, object asyncState);
        
        void EndaddLogActivity(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMLogs/logsAddActivities", ReplyAction="http://tempuri.org/IPLMLogs/logsAddActivitiesResponse")]
        System.Collections.Generic.List<PSELogsBusinessEntities.PSE_TrackingListInfo> logsAddActivities(System.Collections.Generic.List<PSELogsBusinessEntities.PSE_TrackingListInfo> trackList);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPLMLogs/logsAddActivities", ReplyAction="http://tempuri.org/IPLMLogs/logsAddActivitiesResponse")]
        System.IAsyncResult BeginlogsAddActivities(System.Collections.Generic.List<PSELogsBusinessEntities.PSE_TrackingListInfo> trackList, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<PSELogsBusinessEntities.PSE_TrackingListInfo> EndlogsAddActivities(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMLogs/addLogParentActivity", ReplyAction="http://tempuri.org/IPLMLogs/addLogParentActivityResponse")]
        void addLogParentActivity(PSELogsBusinessEntities.PSE_TrackingParentInfo parentTrack);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPLMLogs/addLogParentActivity", ReplyAction="http://tempuri.org/IPLMLogs/addLogParentActivityResponse")]
        System.IAsyncResult BeginaddLogParentActivity(PSELogsBusinessEntities.PSE_TrackingParentInfo parentTrack, System.AsyncCallback callback, object asyncState);
        
        void EndaddLogParentActivity(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMLogs/logsAddParentActivities", ReplyAction="http://tempuri.org/IPLMLogs/logsAddParentActivitiesResponse")]
        void logsAddParentActivities(System.Collections.Generic.List<PSELogsBusinessEntities.PSE_TrackingParentInfo> parentTrackList);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPLMLogs/logsAddParentActivities", ReplyAction="http://tempuri.org/IPLMLogs/logsAddParentActivitiesResponse")]
        System.IAsyncResult BeginlogsAddParentActivities(System.Collections.Generic.List<PSELogsBusinessEntities.PSE_TrackingParentInfo> parentTrackList, System.AsyncCallback callback, object asyncState);
        
        void EndlogsAddParentActivities(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMLogs/addTrackingActivity", ReplyAction="http://tempuri.org/IPLMLogs/addTrackingActivityResponse")]
        void addTrackingActivity(CE_PSELogsBusinessLogicComponent.PLMLogsEngine.Info_TrackingListInfo track);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPLMLogs/addTrackingActivity", ReplyAction="http://tempuri.org/IPLMLogs/addTrackingActivityResponse")]
        System.IAsyncResult BeginaddTrackingActivity(CE_PSELogsBusinessLogicComponent.PLMLogsEngine.Info_TrackingListInfo track, System.AsyncCallback callback, object asyncState);
        
        void EndaddTrackingActivity(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMLogs/addTrackingActivities", ReplyAction="http://tempuri.org/IPLMLogs/addTrackingActivitiesResponse")]
        void addTrackingActivities(System.Collections.Generic.List<CE_PSELogsBusinessLogicComponent.PLMLogsEngine.Info_TrackingListInfo> trackList);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPLMLogs/addTrackingActivities", ReplyAction="http://tempuri.org/IPLMLogs/addTrackingActivitiesResponse")]
        System.IAsyncResult BeginaddTrackingActivities(System.Collections.Generic.List<CE_PSELogsBusinessLogicComponent.PLMLogsEngine.Info_TrackingListInfo> trackList, System.AsyncCallback callback, object asyncState);
        
        void EndaddTrackingActivities(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPLMLogsChannel : CE_PSELogsBusinessLogicComponent.PLMLogsEngine.IPLMLogs, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class logsAddActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public logsAddActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<PSELogsBusinessEntities.PSE_TrackingListInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<PSELogsBusinessEntities.PSE_TrackingListInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PLMLogsClient : System.ServiceModel.ClientBase<CE_PSELogsBusinessLogicComponent.PLMLogsEngine.IPLMLogs>, CE_PSELogsBusinessLogicComponent.PLMLogsEngine.IPLMLogs {
        
        private BeginOperationDelegate onBeginaddLogActivityDelegate;
        
        private EndOperationDelegate onEndaddLogActivityDelegate;
        
        private System.Threading.SendOrPostCallback onaddLogActivityCompletedDelegate;
        
        private BeginOperationDelegate onBeginlogsAddActivitiesDelegate;
        
        private EndOperationDelegate onEndlogsAddActivitiesDelegate;
        
        private System.Threading.SendOrPostCallback onlogsAddActivitiesCompletedDelegate;
        
        private BeginOperationDelegate onBeginaddLogParentActivityDelegate;
        
        private EndOperationDelegate onEndaddLogParentActivityDelegate;
        
        private System.Threading.SendOrPostCallback onaddLogParentActivityCompletedDelegate;
        
        private BeginOperationDelegate onBeginlogsAddParentActivitiesDelegate;
        
        private EndOperationDelegate onEndlogsAddParentActivitiesDelegate;
        
        private System.Threading.SendOrPostCallback onlogsAddParentActivitiesCompletedDelegate;
        
        private BeginOperationDelegate onBeginaddTrackingActivityDelegate;
        
        private EndOperationDelegate onEndaddTrackingActivityDelegate;
        
        private System.Threading.SendOrPostCallback onaddTrackingActivityCompletedDelegate;
        
        private BeginOperationDelegate onBeginaddTrackingActivitiesDelegate;
        
        private EndOperationDelegate onEndaddTrackingActivitiesDelegate;
        
        private System.Threading.SendOrPostCallback onaddTrackingActivitiesCompletedDelegate;
        
        public PLMLogsClient() {
        }
        
        public PLMLogsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PLMLogsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PLMLogsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PLMLogsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> addLogActivityCompleted;
        
        public event System.EventHandler<logsAddActivitiesCompletedEventArgs> logsAddActivitiesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> addLogParentActivityCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> logsAddParentActivitiesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> addTrackingActivityCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> addTrackingActivitiesCompleted;
        
        public void addLogActivity(PSELogsBusinessEntities.PSE_TrackingListInfo track) {
            base.Channel.addLogActivity(track);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginaddLogActivity(PSELogsBusinessEntities.PSE_TrackingListInfo track, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginaddLogActivity(track, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndaddLogActivity(System.IAsyncResult result) {
            base.Channel.EndaddLogActivity(result);
        }
        
        private System.IAsyncResult OnBeginaddLogActivity(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PSELogsBusinessEntities.PSE_TrackingListInfo track = ((PSELogsBusinessEntities.PSE_TrackingListInfo)(inValues[0]));
            return this.BeginaddLogActivity(track, callback, asyncState);
        }
        
        private object[] OnEndaddLogActivity(System.IAsyncResult result) {
            this.EndaddLogActivity(result);
            return null;
        }
        
        private void OnaddLogActivityCompleted(object state) {
            if ((this.addLogActivityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.addLogActivityCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void addLogActivityAsync(PSELogsBusinessEntities.PSE_TrackingListInfo track) {
            this.addLogActivityAsync(track, null);
        }
        
        public void addLogActivityAsync(PSELogsBusinessEntities.PSE_TrackingListInfo track, object userState) {
            if ((this.onBeginaddLogActivityDelegate == null)) {
                this.onBeginaddLogActivityDelegate = new BeginOperationDelegate(this.OnBeginaddLogActivity);
            }
            if ((this.onEndaddLogActivityDelegate == null)) {
                this.onEndaddLogActivityDelegate = new EndOperationDelegate(this.OnEndaddLogActivity);
            }
            if ((this.onaddLogActivityCompletedDelegate == null)) {
                this.onaddLogActivityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnaddLogActivityCompleted);
            }
            base.InvokeAsync(this.onBeginaddLogActivityDelegate, new object[] {
                        track}, this.onEndaddLogActivityDelegate, this.onaddLogActivityCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<PSELogsBusinessEntities.PSE_TrackingListInfo> logsAddActivities(System.Collections.Generic.List<PSELogsBusinessEntities.PSE_TrackingListInfo> trackList) {
            return base.Channel.logsAddActivities(trackList);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginlogsAddActivities(System.Collections.Generic.List<PSELogsBusinessEntities.PSE_TrackingListInfo> trackList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginlogsAddActivities(trackList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<PSELogsBusinessEntities.PSE_TrackingListInfo> EndlogsAddActivities(System.IAsyncResult result) {
            return base.Channel.EndlogsAddActivities(result);
        }
        
        private System.IAsyncResult OnBeginlogsAddActivities(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<PSELogsBusinessEntities.PSE_TrackingListInfo> trackList = ((System.Collections.Generic.List<PSELogsBusinessEntities.PSE_TrackingListInfo>)(inValues[0]));
            return this.BeginlogsAddActivities(trackList, callback, asyncState);
        }
        
        private object[] OnEndlogsAddActivities(System.IAsyncResult result) {
            System.Collections.Generic.List<PSELogsBusinessEntities.PSE_TrackingListInfo> retVal = this.EndlogsAddActivities(result);
            return new object[] {
                    retVal};
        }
        
        private void OnlogsAddActivitiesCompleted(object state) {
            if ((this.logsAddActivitiesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.logsAddActivitiesCompleted(this, new logsAddActivitiesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void logsAddActivitiesAsync(System.Collections.Generic.List<PSELogsBusinessEntities.PSE_TrackingListInfo> trackList) {
            this.logsAddActivitiesAsync(trackList, null);
        }
        
        public void logsAddActivitiesAsync(System.Collections.Generic.List<PSELogsBusinessEntities.PSE_TrackingListInfo> trackList, object userState) {
            if ((this.onBeginlogsAddActivitiesDelegate == null)) {
                this.onBeginlogsAddActivitiesDelegate = new BeginOperationDelegate(this.OnBeginlogsAddActivities);
            }
            if ((this.onEndlogsAddActivitiesDelegate == null)) {
                this.onEndlogsAddActivitiesDelegate = new EndOperationDelegate(this.OnEndlogsAddActivities);
            }
            if ((this.onlogsAddActivitiesCompletedDelegate == null)) {
                this.onlogsAddActivitiesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnlogsAddActivitiesCompleted);
            }
            base.InvokeAsync(this.onBeginlogsAddActivitiesDelegate, new object[] {
                        trackList}, this.onEndlogsAddActivitiesDelegate, this.onlogsAddActivitiesCompletedDelegate, userState);
        }
        
        public void addLogParentActivity(PSELogsBusinessEntities.PSE_TrackingParentInfo parentTrack) {
            base.Channel.addLogParentActivity(parentTrack);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginaddLogParentActivity(PSELogsBusinessEntities.PSE_TrackingParentInfo parentTrack, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginaddLogParentActivity(parentTrack, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndaddLogParentActivity(System.IAsyncResult result) {
            base.Channel.EndaddLogParentActivity(result);
        }
        
        private System.IAsyncResult OnBeginaddLogParentActivity(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PSELogsBusinessEntities.PSE_TrackingParentInfo parentTrack = ((PSELogsBusinessEntities.PSE_TrackingParentInfo)(inValues[0]));
            return this.BeginaddLogParentActivity(parentTrack, callback, asyncState);
        }
        
        private object[] OnEndaddLogParentActivity(System.IAsyncResult result) {
            this.EndaddLogParentActivity(result);
            return null;
        }
        
        private void OnaddLogParentActivityCompleted(object state) {
            if ((this.addLogParentActivityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.addLogParentActivityCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void addLogParentActivityAsync(PSELogsBusinessEntities.PSE_TrackingParentInfo parentTrack) {
            this.addLogParentActivityAsync(parentTrack, null);
        }
        
        public void addLogParentActivityAsync(PSELogsBusinessEntities.PSE_TrackingParentInfo parentTrack, object userState) {
            if ((this.onBeginaddLogParentActivityDelegate == null)) {
                this.onBeginaddLogParentActivityDelegate = new BeginOperationDelegate(this.OnBeginaddLogParentActivity);
            }
            if ((this.onEndaddLogParentActivityDelegate == null)) {
                this.onEndaddLogParentActivityDelegate = new EndOperationDelegate(this.OnEndaddLogParentActivity);
            }
            if ((this.onaddLogParentActivityCompletedDelegate == null)) {
                this.onaddLogParentActivityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnaddLogParentActivityCompleted);
            }
            base.InvokeAsync(this.onBeginaddLogParentActivityDelegate, new object[] {
                        parentTrack}, this.onEndaddLogParentActivityDelegate, this.onaddLogParentActivityCompletedDelegate, userState);
        }
        
        public void logsAddParentActivities(System.Collections.Generic.List<PSELogsBusinessEntities.PSE_TrackingParentInfo> parentTrackList) {
            base.Channel.logsAddParentActivities(parentTrackList);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginlogsAddParentActivities(System.Collections.Generic.List<PSELogsBusinessEntities.PSE_TrackingParentInfo> parentTrackList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginlogsAddParentActivities(parentTrackList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndlogsAddParentActivities(System.IAsyncResult result) {
            base.Channel.EndlogsAddParentActivities(result);
        }
        
        private System.IAsyncResult OnBeginlogsAddParentActivities(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<PSELogsBusinessEntities.PSE_TrackingParentInfo> parentTrackList = ((System.Collections.Generic.List<PSELogsBusinessEntities.PSE_TrackingParentInfo>)(inValues[0]));
            return this.BeginlogsAddParentActivities(parentTrackList, callback, asyncState);
        }
        
        private object[] OnEndlogsAddParentActivities(System.IAsyncResult result) {
            this.EndlogsAddParentActivities(result);
            return null;
        }
        
        private void OnlogsAddParentActivitiesCompleted(object state) {
            if ((this.logsAddParentActivitiesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.logsAddParentActivitiesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void logsAddParentActivitiesAsync(System.Collections.Generic.List<PSELogsBusinessEntities.PSE_TrackingParentInfo> parentTrackList) {
            this.logsAddParentActivitiesAsync(parentTrackList, null);
        }
        
        public void logsAddParentActivitiesAsync(System.Collections.Generic.List<PSELogsBusinessEntities.PSE_TrackingParentInfo> parentTrackList, object userState) {
            if ((this.onBeginlogsAddParentActivitiesDelegate == null)) {
                this.onBeginlogsAddParentActivitiesDelegate = new BeginOperationDelegate(this.OnBeginlogsAddParentActivities);
            }
            if ((this.onEndlogsAddParentActivitiesDelegate == null)) {
                this.onEndlogsAddParentActivitiesDelegate = new EndOperationDelegate(this.OnEndlogsAddParentActivities);
            }
            if ((this.onlogsAddParentActivitiesCompletedDelegate == null)) {
                this.onlogsAddParentActivitiesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnlogsAddParentActivitiesCompleted);
            }
            base.InvokeAsync(this.onBeginlogsAddParentActivitiesDelegate, new object[] {
                        parentTrackList}, this.onEndlogsAddParentActivitiesDelegate, this.onlogsAddParentActivitiesCompletedDelegate, userState);
        }
        
        public void addTrackingActivity(CE_PSELogsBusinessLogicComponent.PLMLogsEngine.Info_TrackingListInfo track) {
            base.Channel.addTrackingActivity(track);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginaddTrackingActivity(CE_PSELogsBusinessLogicComponent.PLMLogsEngine.Info_TrackingListInfo track, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginaddTrackingActivity(track, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndaddTrackingActivity(System.IAsyncResult result) {
            base.Channel.EndaddTrackingActivity(result);
        }
        
        private System.IAsyncResult OnBeginaddTrackingActivity(object[] inValues, System.AsyncCallback callback, object asyncState) {
            CE_PSELogsBusinessLogicComponent.PLMLogsEngine.Info_TrackingListInfo track = ((CE_PSELogsBusinessLogicComponent.PLMLogsEngine.Info_TrackingListInfo)(inValues[0]));
            return this.BeginaddTrackingActivity(track, callback, asyncState);
        }
        
        private object[] OnEndaddTrackingActivity(System.IAsyncResult result) {
            this.EndaddTrackingActivity(result);
            return null;
        }
        
        private void OnaddTrackingActivityCompleted(object state) {
            if ((this.addTrackingActivityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.addTrackingActivityCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void addTrackingActivityAsync(CE_PSELogsBusinessLogicComponent.PLMLogsEngine.Info_TrackingListInfo track) {
            this.addTrackingActivityAsync(track, null);
        }
        
        public void addTrackingActivityAsync(CE_PSELogsBusinessLogicComponent.PLMLogsEngine.Info_TrackingListInfo track, object userState) {
            if ((this.onBeginaddTrackingActivityDelegate == null)) {
                this.onBeginaddTrackingActivityDelegate = new BeginOperationDelegate(this.OnBeginaddTrackingActivity);
            }
            if ((this.onEndaddTrackingActivityDelegate == null)) {
                this.onEndaddTrackingActivityDelegate = new EndOperationDelegate(this.OnEndaddTrackingActivity);
            }
            if ((this.onaddTrackingActivityCompletedDelegate == null)) {
                this.onaddTrackingActivityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnaddTrackingActivityCompleted);
            }
            base.InvokeAsync(this.onBeginaddTrackingActivityDelegate, new object[] {
                        track}, this.onEndaddTrackingActivityDelegate, this.onaddTrackingActivityCompletedDelegate, userState);
        }
        
        public void addTrackingActivities(System.Collections.Generic.List<CE_PSELogsBusinessLogicComponent.PLMLogsEngine.Info_TrackingListInfo> trackList) {
            base.Channel.addTrackingActivities(trackList);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginaddTrackingActivities(System.Collections.Generic.List<CE_PSELogsBusinessLogicComponent.PLMLogsEngine.Info_TrackingListInfo> trackList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginaddTrackingActivities(trackList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndaddTrackingActivities(System.IAsyncResult result) {
            base.Channel.EndaddTrackingActivities(result);
        }
        
        private System.IAsyncResult OnBeginaddTrackingActivities(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<CE_PSELogsBusinessLogicComponent.PLMLogsEngine.Info_TrackingListInfo> trackList = ((System.Collections.Generic.List<CE_PSELogsBusinessLogicComponent.PLMLogsEngine.Info_TrackingListInfo>)(inValues[0]));
            return this.BeginaddTrackingActivities(trackList, callback, asyncState);
        }
        
        private object[] OnEndaddTrackingActivities(System.IAsyncResult result) {
            this.EndaddTrackingActivities(result);
            return null;
        }
        
        private void OnaddTrackingActivitiesCompleted(object state) {
            if ((this.addTrackingActivitiesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.addTrackingActivitiesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void addTrackingActivitiesAsync(System.Collections.Generic.List<CE_PSELogsBusinessLogicComponent.PLMLogsEngine.Info_TrackingListInfo> trackList) {
            this.addTrackingActivitiesAsync(trackList, null);
        }
        
        public void addTrackingActivitiesAsync(System.Collections.Generic.List<CE_PSELogsBusinessLogicComponent.PLMLogsEngine.Info_TrackingListInfo> trackList, object userState) {
            if ((this.onBeginaddTrackingActivitiesDelegate == null)) {
                this.onBeginaddTrackingActivitiesDelegate = new BeginOperationDelegate(this.OnBeginaddTrackingActivities);
            }
            if ((this.onEndaddTrackingActivitiesDelegate == null)) {
                this.onEndaddTrackingActivitiesDelegate = new EndOperationDelegate(this.OnEndaddTrackingActivities);
            }
            if ((this.onaddTrackingActivitiesCompletedDelegate == null)) {
                this.onaddTrackingActivitiesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnaddTrackingActivitiesCompleted);
            }
            base.InvokeAsync(this.onBeginaddTrackingActivitiesDelegate, new object[] {
                        trackList}, this.onEndaddTrackingActivitiesDelegate, this.onaddTrackingActivitiesCompletedDelegate, userState);
        }
    }
}
